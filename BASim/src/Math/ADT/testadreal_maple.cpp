void test1() { 
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 936753064285.272320083319473608, 8999999999999999999.65000649783, 2999999999999300012.99565741410 };
  double g2  [3] = { -557745688417.251329755455819225, 2279192338739318074.47339312918, 349992754922384976.919594139787 };
  double gres[3] = { 1494498752702.52364983877529283, 6720807661260681925.17661336865, 2650007245076915036.07606327431 };
  double h1  [9] = { 349993852164.795123410604604433, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, 18000000000000., 9000000000000., 1873504.25506628957387706507015, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { -1494497.81595039611669398835430, 4558382803974.38108265721238129, 349992007673.477001721535792793, 4558382803974.38108265721238129, -1703122586212510942.98664048080, 2979177469577.64891241912422567, 349992007673.477001721535792793, 2979177469577.64891241912422567, -936752127533144786.938532535075 };
  double hres[9] = { 349995346662.611073806721298421, -4558382803973.44433052967923650, -349990134169.221935431961915728, -4558382803973.44433052967923650, 1703140586212510942.98664048080, 6020822530422.35108758087577433, -349990134169.221935431961915728, 6020822530422.35108758087577433, 936752127533144786.238545530732 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999650006147835.20488, g1,h1), ad2(189503219557946728.591538357925, g2,h2), adresMaple(2999999810496430448201106.61334, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 936753.064285272320083319473608, -9000000000000.34999350217129295, 3000000000000000000.69998700434 };
  double g2  [3] = { 540303800365.955667797053301431, -1198585853498.78357338194603722, 841470237558988531.454443974636 };
  double gres[3] = { -540302863612.891382524733218112, -7801414146501.56642012022525573, 2158529762441011469.24554302970 };
  double h1  [9] = { 349993.852164795123410604604433, .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, -18000000., 9000000000000., -1.87350425506628957387706507015, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { 1.49449781595039611669398835430, -3477776.31873384658156576528933, 841469490310.080556256385627642, -3477776.31873384658156576528933, 1703123666818.99618352114157224, 3962132434850.85602148882389537, 841469490310.080556256385627642, 3962132434850.85602148882389537, -540302305868139717.400936607443 };
  double hres[9] = { 349992.357666979173014487910445, 3477777.25548597411471055222786, -841469490311.954060511451917216, 3477777.25548597411471055222786, -1703141666818.99618352114157224, 5037867565149.14397851117610463, -841469490311.954060511451917216, 5037867565149.14397851117610463, 540302305868139716.700949603100 };
  adreal<3,DO_HESS_TEST,double> ad1(-3000000000000349993.85216479512, g1,h1), ad2(540303053117047692.598994954437, g2,h2), adresMaple(-3540303053117397686.45115974955, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 936752.127533144787875284662608, 8999999.65000649782870704788235, 2999999999999999999.99999930001 };
  double g2  [3] = { 999999999998.005502184049645550, 2000002279189.46523506300826715, -1747248907975.03139168032751882 };
  double gres[3] = { -999999063245.877969039261770266, -1999993279189.81522856517956010, 3000001747248907975.03139098033 };
  double h1  [9] = { 349993.502171292952467645988952, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, 18.000000, 9000000000000., .187350425506628957387706507015e-5, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 2000004.55837993047012601645097, -2494497.81595022945002732169597, 2000004.55837993047012601645097, 296877.41378461555275829331296, 2279188465235.06300851715258544, -2494497.81595022945002732169597, 2279188465235.06300851715258544, -999999999999500000.000000041667 };
  double hres[9] = { 349993.502172787450283596385069, -2000003.62162780293698122951244, 2494497.81595210295428238798554, -2000003.62162780293698122951244, -296859.41378461555275829331296, 6720811534764.93699148284741456, 2494497.81595210295428238798554, 6720811534764.93699148284741456, 999999999999499999.300013037324 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999650006.49782870704753235, g1,h1), ad2(999999999998752751.092024843609, g2,h2), adresMaple(-999996999999102744.594196136561, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 936753.064285272320083319473608, 8999999999999.65000649782870705, 2999999999999999999.30001299566 };
  double g2  [3] = { 540300811370.323767004819913455, 3359795076971.34244298569246700, -841471732056804481.850560668624 };
  double gres[3] = { -540299874617.259481732499830135, 5640204923028.30756351213624005, 3841471732056804481.15057366428 };
  double h1  [9] = { 349993.852164795123410604604433, .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, 18000000., 9000000000000., 1.87350425506628957387706507015, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { -1.49449781595039611669398835430, 5638985.54220640545116951171911, -841472479305.712457048619015618, 5638985.54220640545116951171911, -1703121505609.77271096227196850, 596248495619.26999487881460885, -841472479305.712457048619015618, 596248495619.26999487881460885, -540302305868139717.400936607443 };
  double hres[9] = { 349995.346662611073806721298421, -5638984.60545427791802472478058, 841472479307.585961303685305192, -5638984.60545427791802472478058, 1703139505609.77271096227196850, 8403751504380.73000512118539115, 841472479307.585961303685305192, 8403751504380.73000512118539115, 540302305868139716.700949603100 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999650006.14783520488, g1,h1), ad2(540301558619231742.202878260449, g2,h2), adresMaple(2459698441380418263.94495694443, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 936845.802745898101417226388329, 89999999999999.6500064978287070, 2999999999999999993.00012995657 };
  double g2  [3] = { -839086474054.611956220030887708, 21113761594197.7251773204646254, 544020363640461838.206689314857 };
  double gres[3] = { 839087410900.414702118132304934, 68886238405801.9248291773640816, 2455979636359538154.79344064171 };
  double h1  [9] = { 350028.501521510081412864252030, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, 180000000., 9000000000000., 18.7350425506628957387706507015, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { -14.9449781595039611669398835430, 43905666.2465483552591586571466, 544019616391.553863008630967863, 43905666.2465483552591586571466, -17031227540286.9026253219722214, 3367232687013.80263499331457581, 544019616391.553863008630967863, 3367232687013.80263499331457581, 839071529076452452.258863947824 };
  double hres[9] = { 350043.446499669585374031191914, -43905665.3097962277260138702080, -544019616372.818820457968072124, -43905665.3097962277260138702080, 17031407540286.9026253219722214, 5632767312986.19736500668542419, -544019616372.818820457968072124, 5632767312986.19736500668542419, -839071529076452452.958850952167 };
  adreal<3,DO_HESS_TEST,double> ad1(29999999999999649971.4984784899, g1,h1), ad2(-839079001565532204.239447417766, g2,h2), adresMaple(30839079001565182175.7379259076, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 936752127532.208034810999390288, 8999999.65000649782870704788235, -699990.004342585904235304973562 };
  double g2  [3] = { -6229630898618.67216990036608505, 6851037641627646017.62829157753, -3114815099316.30228972099749727 };
  double gres[3] = { 7166383026150.88020471136547534, -6851037641618646017.97828507970, 3114814399326.29794713509326196 };
  double h1  [9] = { 349993502170.942958615481193829, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, -18000000., 9., 1873504.25506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -6229630.89861960892202789922984, 13702075283257.1655395116494446, -6229630.54862610675073494711219, 13702075283257.1655395116494446, -21339717889948761460.9056241649, 6851036941642.51517929745363180, -6229630.54862610675073494711219, 6851036941642.51517929745363180, -936752.127533144786938532535075 };
  double hres[9] = { 349999731801.841578224403221728, -13702075283256.2287873841162998, 8103134.80369239632461201218234, -13702075283256.2287873841162998, 21339717889930761460.9056241649, -6851036941633.51517929745363180, 8103134.80369239632461201218234, -6851036941633.51517929745363180, 936751.427546140444352628299770 };
  adreal<3,DO_HESS_TEST,double> ad1(-349996502170.942958615481193829, g1,h1), ad2(-3114815449308867708.88641647013, g2,h2), adresMaple(3114815099312365537.94345785465, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 0., -9.34999350217129295211765248678, -2.30001299565741409576469502644 };
  double g2  [3] = { 6229631.43892191479016761663078, -6851038722234.13125816279266897, -3114814607838.81965311744296242 };
  double gres[3] = { -6229631.43892191479016761663078, 6851038722224.78126466062137602, 3114814607836.51964012178554832 };
  double h1  [9] = { 0., .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, 18., 9., -1.87350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { 6.22963089861960892202789922984, -13702076.3638636507800461505361, -6229630.05714862411413139257734, -13702076.3638636507800461505361, 21339718970555.2467014401252564, 6851035958687.54990609034456210, -6229630.05714862411413139257734, 6851035958687.54990609034456210, -540302.305868139717400936607443 };
  double hres[9] = { -6.22963089861960892202789922984, 13702077.3006157783131909374746, 6229628.18364436904784181870027, 13702077.3006157783131909374746, -21339718970537.2467014401252564, -6851035958678.54990609034456210, 6229628.18364436904784181870027, -6851035958678.54990609034456210, 540301.605881135374815032372138 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(3114815989612.11032915366701586, g2,h2), adresMaple(-3114815989609.11032915366701586, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -.936752127532208034810999390288, -.349984502171292952117652486781, -3.00000069998700434258590423530 };
  double g2  [3] = { -5.22963089862010892202789918817, 4851037.64163051952188335778377, -3114815449310.80446101394944825 };
  double gres[3] = { 4.29287877108790088721689979788, -4851037.99161502169317630990142, 3114815449307.80446031396244391 };
  double h1  [9] = { -.349993502170942958615481193829, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, -.18e-4, 9., .187350425506628957387706507015e-5, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -.622963089861960892202789922984e-5, 11.7020752832600390437667156509, -6229630.89862060892202789906317, 11.7020752832600390437667156509, -19339717.8899516349651606903712, 6851037641631.51952188335753377, -6229630.89862060892202789906317, 6851037641631.51952188335753377, -999999.999999500000000000041667 };
  double hres[9] = { -.349987272540044339006559165930, -10.7653231557268942568281831158, 6229630.89862248242628296535274, -10.7653231557268942568281831158, 19339717.8899336349651606903712, -6851037641622.51952188335753377, 6229630.89862248242628296535274, -6851037641622.51952188335753377, 999999.300012495657414095806362 };
  adreal<3,DO_HESS_TEST,double> ad1(.349990502170942958615481193829, g1,h1), ad2(-2114815.44931030446101394957325, g2,h2), adresMaple(2114815.79930080663195690818873, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 0., 8.65000649782870704788234751322, -3.69998700434258590423530497356 };
  double g2  [3] = { -6229630.35831730305388818182890, 6851036561024.90778560392306523, -3114816290780.78926891045626742 };
  double gres[3] = { 6229630.35831730305388818182890, -6851036561016.25777910609435818, 3114816290777.08928190611368152 };
  double h1  [9] = { 0., .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, -18., 9., 1.87350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -6.22963089861960892202789922984, 13702074.2026544273074872809323, -6229631.74009059372992440588234, 13702074.2026544273074872809323, -21339716809346.0232288812556526, 6851039324571.48913767637117210, -6229631.74009059372992440588234, 6851039324571.48913767637117210, -540302.305868139717400936607443 };
  double hres[9] = { 6.22963089861960892202789922984, -13702073.2659022997743424939938, 6229633.61359484879621397975941, -13702073.2659022997743424939938, 21339716809328.0232288812556526, -6851039324562.48913767637117210, 6229633.61359484879621397975941, -6851039324562.48913767637117210, 540301.605881135374815032372138 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(-3114814909007.49859287423221398, g2,h2), adresMaple(3114814909004.49859287423221398, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 92.7384606257813339069147209724, 89.6500064978287070478823475132, -9.99987004342585904235304973562 };
  double g2  [3] = { -62296309.8252676182967314445573, 68510378094438.2533717384831887, -3114814905288.69357164413621017 };
  double gres[3] = { 62296402.5637282440780653514720, -68510378094348.6033652406544817, 3114814905278.69370160071035113 };
  double h1  [9] = { 34.6493567149580022596475961913, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, -180., 9., 18.7350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -62.2963089861960892202789922984, 137020754.510733448590572061860, -6229630.35459849803265808582509, 137020754.510733448590572061860, -213397180577649.407804511809063, 6851036553587.29774314373105760, -6229630.35459849803265808582509, 6851036553587.29774314373105760, 839071.529076452452258863947824 };
  double hres[9] = { 96.9456657011540914799265884897, -137020753.573981321057427274922, 6229649.08964104869555382459574, -137020753.573981321057427274922, 213397180577469.407804511809063, -6851036553578.29774314373105760, 6229649.08964104869555382459574, -6851036553578.29774314373105760, -839072.229063456794844768183129 };
  adreal<3,DO_HESS_TEST,double> ad1(-64.6493567149580022596475961913, g1,h1), ad2(-31148155332169.5736865919484081, g2,h2), adresMaple(31148155332104.9243298769904058, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 936752127533.144787875284662608, -.349984502171292952117652486781, -699987.004342585904235301973562 };
  double g2  [3] = { 4000000.00000133333427008599421, 2000000000002000001.87350558840, 2000000.00000101666016883822629 };
  double gres[3] = { 936748127533.144786541950392522, -2000000000002000002.22349009057, -2699987.00434360256440414019985 };
  double h1  [9] = { 349993502171.292952467645988952, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, 18.000000, .9e-11, 1873504.25506628957387706507015, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { 4.00000000000133333333333386668, 4000000000004.00000187350692174, 4.00000000000168332683550515963, 4000000000004.00000187350692174, 4000001873509.58839962291174375, 2000000000002.69998700434391923, 4.00000000000168332683550515963, 2000000000002.69998700434391923, -.936752127533144786938532535075e-6 };
  double hres[9] = { 349993502167.292952467644655619, -4000000000003.06324974597377695, 1873500.25506628957219373823465, -4000000000003.06324974597377695, -4000001873491.58839962291174375, -2000000000002.69998700433491923, 1873500.25506628957219373823465, -2000000000002.69998700433491923, -.699986067590458371090518035029 };
  adreal<3,DO_HESS_TEST,double> ad1(-349993502171.292952467642988952, g1,h1), ad2(2000000000000.66666760341906087, g2,h2), adresMaple(-2349993502171.95962007106204982, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { .936753064285272320083319473608, -.349993502180292952117652486781, .699987004342585907235304973562 };
  double g2  [3] = { -4.00000000000079303102746572696, -2000000000000.91939538826505390, 2000000.00000150813765147482985 };
  double gres[3] = { 4.93675306428606535111078520057, 2000000000000.56940188608476095, -1999999.30001450379506556759455 };
  double h1  [9] = { .349993852164795123410604604433, .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, -.18e-4, .9e-11, -1.87350425506628957387706507015, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { -.400000000000133333333333386668e-5, -4000000.00000291939538826638724, 4.00000000000217480431814176319, -4000000.00000291939538826638724, -2919395.38826905389853146465179, 2000000000003.68294196961712634, 4.00000000000217480431814176319, 2000000000003.68294196961712634, -.540302305868139717400936607443e-6 };
  double hres[9] = { .349997852164795124743937937767, 4000000.93675504692853305332577, -5.87350425506846437819520683334, 4000000.93675504692853305332577, 2919395.38825105389853146465179, -2000000000003.68294196960812634, -5.87350425506846437819520683334, -2000000000003.68294196960812634, -.699986464040280036095587572625 };
  adreal<3,DO_HESS_TEST,double> ad1(-.349993852164795126410604604433, g1,h1), ad2(-2000000.00000012636436079879362, g2,h2), adresMaple(1999999.65000627419956567238302, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { .936753064285272320083319473608e-6, -.349993502171292943117652486781, -.699987004339585904235304973562e-6 };
  double g2  [3] = { .400000100000133333283333386668e-5, 2000002.00000199999900000133333, 2000000.00000066666566666693334 };
  double gres[3] = { -.306324793571606101275001439307e-5, -2000002.34999550217029294445098, -2000000.00000136665267100651924 };
  double h1  [9] = { .349993852164795123410604604433e-6, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, .18e-10, .9e-11, .187350425506628957387706507015e-5, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { .400000000000133333333333386668e-11, 4.00000200000399999900000266667, 4.00000000000133333233333386668, 4.00000200000399999900000266667, 2000003.99999900000533333341667, 2000000000001.99999800000133333, 4.00000000000133333233333386668, 2000000000001.99999800000133333, -.999999999999500000000000041667e-6 };
  double hres[9] = { .349989852164795122077271271099e-6, -3.06324987247085521206147013159, -3.99999812649707826604375998961, -3.06324987247085521206147013159, -2000003.99999899998733333341667, -2000000000001.99999799999233333, -3.99999812649707826604375998961, -2000000000001.99999799999233333, -.699986004342585904735304973562 };
  adreal<3,DO_HESS_TEST,double> ad1(-.349993852164795120410604604433e-6, g1,h1), ad2(2.00000100000066666616666693334, g2,h2), adresMaple(-2.00000134999451883096178734394, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { .936753064285272320083319473608, -.349993502162292952117652486781, -.699987004342585901235304973562 };
  double g2  [3] = { 4.00000000000187363563920200640, 2000000000003.08060461173761276, 1999999.99999982519568185903683 };
  double gres[3] = { -3.06324693571660131555588253279, -2000000000003.43059811389990571, -2000000.69998682953826776027213 };
  double h1  [9] = { .349993852164795123410604604433, .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, .18e-4, .9e-11, 1.87350425506628957387706507015, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { .400000000000133333333333386668e-5, 4000000.00000508060461173894610, 4.00000000000049186234852597017, 4000000.00000508060461173894610, 5080604.61174161276813521108157, 2000000000000.31705803038554032, 4.00000000000049186234852597017, 2000000000000.31705803038554032, -.540302305868139717400936607443e-6 };
  double hres[9] = { .349989852164795122077271271099, -3999999.06325295307146695200757, -2.12649574493420228847146090002, -3999999.06325295307146695200757, -5080604.61172361276813521108157, -2000000000000.31705803037654032, -2.12649574493420228847146090002, -2000000000000.31705803037654032, -.699986464040280036095587572625 };
  adreal<3,DO_HESS_TEST,double> ad1(-.349993852164795120410604604433, g1,h1), ad2(2000000.00000120696897253507306, g2,h2), adresMaple(-2000000.34999505913376765548366, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 93.6752136900666062269980404460, -.349993502081292952117652486781, -6.99987004342585903935304973562 };
  double g2  [3] = { 40.0000000000124942618042622143, 20000000000018.3218569418604284, 2000000.00000121068777755630315 };
  double gres[3] = { 53.6752136900541119651937782317, -20000000000018.6718504439417214, -2000006.99987125411363659565620 };
  double h1  [9] = { 34.9993505671227973830582007958, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, .180e-3, .9e-11, 18.7350425506628957387706507015, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { .400000000000133333333333386668e-4, 40000000.0000383218569418737618, 4.00000000000187735444422323649, 40000000.0000383218569418737618, 38321856.9419004284288156507712, 2000000000003.08804222178007296, 4.00000000000187735444422323649, 2000000000003.08804222178007296, .839071529076452452258863947824e-6 };
  double hres[9] = { 34.9993105671227973697248674625, -39999999.0632861943237970868233, 14.7350425506610183843264274650, -39999999.0632861943237970868233, -38321856.9417204284288156507712, -2000000000003.08804222177107296, 14.7350425506610183843264274650, -2000000000003.08804222177107296, -.699987843414114980687757232426 };
  adreal<3,DO_HESS_TEST,double> ad1(-34.9993505671227973530582007958, g1,h1), ad2(20000000.0000058275951375928809, g2,h2), adresMaple(-20000034.9993563947179349459391, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 936752127534.081539066065679862, 8999999.65000649782870704788235, -699984.004342585904235304973562 };
  double g2  [3] = { 6229630898620.54567415543237463, 6851037641631393026.13842415667, 3114815799303.30663230690173257 };
  double gres[3] = { -5292878771086.46413508936669476, -6851037641622393026.48841765884, -3114816499287.31097489280596788 };
  double h1  [9] = { 349993502171.642945619823779733, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, 18000000., 9., 1873504.25506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { 6229630.89861960892202789922984, 13702075283260.9125480217820238, 6229631.24861311109332085134749, 13702075283260.9125480217820238, 21339717889952508469.4157567441, 6851038341616.52386446926210240, 6229631.24861311109332085134749, 6851038341616.52386446926210240, -936752.127533144786938532535075 };
  double hres[9] = { 349987272540.744326010901751834, -13702075283259.9757958942488790, -4356126.99354682151944378627734, -13702075283259.9757958942488790, -21339717889934508469.4157567441, -6851038341607.52386446926210240, -4356126.99354682151944378627734, -6851038341607.52386446926210240, 936751.427546140444352628299770 };
  adreal<3,DO_HESS_TEST,double> ad1(-349990502171.642945619823779733, g1,h1), ad2(3114815449310741213.14148275971, g2,h2), adresMaple(-3114815799301243384.78442837953, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 1.87350425506628957387706507015, -9.34999350217129295211765248678, 3.69998700434258590423530497356 };
  double g2  [3] = { -6229630.35831730305388818182890, -6851036561024.90778560392306523, 3114816290780.78926891045626742 };
  double gres[3] = { 6229632.23182155812017775570597, 6851036561015.55779210175177228, -3114816290777.08928190611368152 };
  double h1  [9] = { .699987004342585904235304973562, .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, -18., 9., -1.87350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -6.22963089861960892202789922984, -13702074.2026544273074872809323, 6229631.74009059372992440588234, -13702074.2026544273074872809323, -21339716809346.0232288812556526, 6851039324571.48913767637117210, 6229631.74009059372992440588234, 6851039324571.48913767637117210, -540302.305868139717400936607443 };
  double hres[9] = { 6.92961790296219482626320420340, 13702075.1394065548406320678708, -6229633.61359484879621397975941, 13702075.1394065548406320678708, 21339716809328.0232288812556526, -6851039324562.48913767637117210, -6229633.61359484879621397975941, -6851039324562.48913767637117210, 540301.605881135374815032372138 };
  adreal<3,DO_HESS_TEST,double> ad1(-3.69998700434258590423530497356, g1,h1), ad2(-3114814909007.49859287423221398, g2,h2), adresMaple(3114814909003.79860586988962808, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { .936752127534081539066065679862, -.349984502171292952117652486781, 2.99999930001299565741409576470 };
  double g2  [3] = { 7.22963089861910892202789927151, 8851037.64162851952188335795043, 3114815449308.80446101394978159 };
  double gres[3] = { -6.29287877108502738296183359165, -8851037.99161302169317631006808, -3114815449305.80446171393678593 };
  double h1  [9] = { .349993502171642945619823779733, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, .18e-4, 9., .187350425506628957387706507015e-5, 9., -.699987004342585904235304973562 };
  double h2  [9] = { .622963089861960892202789922984e-5, 15.7020752832580390437667158175, 6229630.89861860892202789939651, 15.7020752832580390437667158175, 23339717.8899496349651606905378, 6851037641627.51952188335820043, 6229630.89861860892202789939651, 6851037641627.51952188335820043, -999999.999999500000000000041667 };
  double hres[9] = { .349987272540744326010901751834, -14.7653231557248942568281832824, -6229630.89861673541777283310694, -14.7653231557248942568281832824, -23339717.8899316349651606905378, -6851037641618.51952188335820043, -6229630.89861673541777283310694, -6851037641618.51952188335820043, 999999.300012495657414095806362 };
  adreal<3,DO_HESS_TEST,double> ad1(-.349990502171642945619823779733, g1,h1), ad2(4114815.44930930446101394965659, g2,h2), adresMaple(-4114815.79929980663265689527641, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 1.87350425506628957387706507015, 8.65000649782870704788234751322, 2.30001299565741409576469502644 };
  double g2  [3] = { 6229631.43892191479016761663078, 6851038722234.13125816279266897, 3114814607838.81965311744296242 };
  double gres[3] = { -6229629.56541765972387804275371, -6851038722225.48125166496396192, -3114814607836.51964012178554832 };
  double h1  [9] = { .699987004342585904235304973562, .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, 18., 9., 1.87350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { 6.22963089861960892202789922984, 13702076.3638636507800461505361, 6229630.05714862411413139257734, 13702076.3638636507800461505361, 21339718970555.2467014401252564, 6851035958687.54990609034456210, 6229630.05714862411413139257734, 6851035958687.54990609034456210, -540302.305868139717400936607443 };
  double hres[9] = { -5.52964389427702301779259425628, -13702075.4271115232469013635976, -6229628.18364436904784181870027, -13702075.4271115232469013635976, -21339718970537.2467014401252564, -6851035958678.54990609034456210, -6229628.18364436904784181870027, -6851035958678.54990609034456210, 540301.605881135374815032372138 };
  adreal<3,DO_HESS_TEST,double> ad1(2.30001299565741409576469502644, g1,h1), ad2(3114815989612.11032915366701586, g2,h2), adresMaple(-3114815989609.81031615800960176, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 94.6119648808476234807917860426, 89.6500064978287070478823475132, -3.99987004342585904235304973562 };
  double g2  [3] = { 62296308.1471245601438265400395, 68510374738152.1370659286741533, 3114815993330.91535038376301967 };
  double gres[3] = { -62296213.5351596792962030592477, -68510374738062.4870594308454463, -3114815993334.91522042718887871 };
  double h1  [9] = { 35.3493437193005881638829011649, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, 180., 9., 18.7350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { 62.2963089861960892202789922984, 137020751.154447332284762252824, 6229631.44264071981139771263459, 137020751.154447332284762252824, 213397177221363.291498702000027, 6851038729671.74130062298467660, 6229631.44264071981139771263459, 6851038729671.74130062298467660, 839071.529076452452258863947824 };
  double hres[9] = { -26.9469652668955010563960911335, -137020750.217695204751617465886, -6229612.70759816914850197386394, -137020750.217695204751617465886, -213397177221183.291498702000027, -6851038729662.74130062298467660, -6229612.70759816914850197386394, -6851038729662.74130062298467660, -839072.229063456794844768183129 };
  adreal<3,DO_HESS_TEST,double> ad1(-5.3493437193005881638829011649, g1,h1), ad2(31148153654026.5155336870438903, g2,h2), adresMaple(-31148153654031.8648774063444785, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 936752127542.512308213863982944, 899999999.650006497828707047882, -696987.004342585904235304973562 };
  double g2  [3] = { 2593443309930.02189778981421073, 2840743525185598156.34115753065, 1296756654268.39047181346163127 };
  double gres[3] = { -1656691182387.50958957595022779, -2840743524285598156.69115103282, -1296757351255.39481439936586657 };
  double h1  [9] = { 349993502174.792887139365416302, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, 180000000., 900., 1873504.25506628957387706507015, 900., -.699987004342585904235304973562 };
  double h2  [9] = { 2593443.30983634668503649973204, 5681487050352.46127013165216555, 2593478.30918656381433171149729, 5681487050352.46127013165216555, 3683653645154333844.90060146618, 2840750525036.90653964953698796, 2593478.30918656381433171149729, 2840750525036.90653964953698796, -93675212.7533144786938532535075 };
  double hres[9] = { 349990908731.483050792680379802, -5681487050351.52451800411902076, -719974.054120274240454646427139, -5681487050351.52451800411902076, -3683653644974333844.90060146618, -2840750524136.90653964953698796, -719974.054120274240454646427139, -2840750524136.90653964953698796, 93675212.0533274743512673492722 };
  adreal<3,DO_HESS_TEST,double> ad1(-346993502174.792887139365416302, g1,h1), ad2(1296721655011848555.27156434471, g2,h2), adresMaple(-1296722002005350730.06445148408, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 10.3042734028645926563238578858, -900.349993502171292952117652487, 3000.69998700434258590423530497 };
  double g2  [3] = { -2593389.27960575987106475963838, -2840732719120.74575099614661618, 1296805802016.65413216891511625 };
  double gres[3] = { 2593399.58387916273565741596224, 2840732718220.39575749397532323, -1296805799015.95414516457253035 };
  double h1  [9] = { 3.84992852388422247329417735459, .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, -180., 900., -1.87350425506628957387706507015, 900., -.699987004342585904235304973562 };
  double h2  [9] = { -2.59344330983634668503649973204, -5681476.24428760886478664125108, 2593527.45693482747468716498227, -5681476.24428760886478664125108, -3683652564547.84860436610037474, 2840760354586.55927172062768496, 2593527.45693482747468716498227, 2840760354586.55927172062768496, -54030230.5868139717400936607443 };
  double hres[9] = { 6.44337183372056915833067708663, 5681477.18103973639793142818961, -2593529.33043908254097673885934, 5681477.18103973639793142818961, 3683652564367.84860436610037474, -2840760353686.55927172062768496, -2593529.33043908254097673885934, -2840760353686.55927172062768496, 54030229.8868269673975077565090 };
  adreal<3,DO_HESS_TEST,double> ad1(-3003.84992852388422247329417735, g1,h1), ad2(-1296667624687.58652854650977236, g2,h2), adresMaple(1296667621683.73660002262554989, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 9.36752127533238462151285849554, -.349093502171292952117652486781, 2999.99999930001299565741409576 };
  double g2  [3] = { 102.593443309786346685036503899, 22840743.5251568631137904954682, 1296721654818.17334251826653269 };
  double gres[3] = { -93.2259220344539620635236454032, -22840743.8742503652850834475859, -1296721651818.17334321825353703 };
  double h1  [9] = { 3.49993502171327951467869616076, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, .180e-3, 900., .187350425506628957387706507015e-5, 900., -.699987004342585904235304973562 };
  double h2  [9] = { .259344330983634668503649973204e-5, 25.6814870503237262275809901031, 2593443.30973634668503651639871, 25.6814870503237262275809901031, 5683653.64515146034064553525994, 2840743525146.86311379049796824, 2593443.30973634668503651639871, 2840743525146.86311379049796824, -99999999.9999500000000000041667 };
  double hres[9] = { 3.49993242826996967833201112426, -24.7447349227905814406424575680, -2593443.30973447318078145010914, -24.7447349227905814406424575680, -5683653.64497146034064553525994, -2840743524246.86311379049796824, -2593443.30973447318078145010914, -2840743524246.86311379049796824, 99999999.2999629956574140999314 };
  adreal<3,DO_HESS_TEST,double> ad1(-3.49693502171327951467869616076, g1,h1), ad2(101296721.654868173342518254033, g2,h2), adresMaple(-101296725.151803195055797768711, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 10.3042734028645926563238578858, 899.650006497828707047882347513, 2999.30001299565741409576469503 };
  double g2  [3] = { 2593497.34006693349900823982570, 2840754331212.98047658484265364, 1296637507819.69255286758461579 };
  double gres[3] = { -2593487.03579353063441558350184, -2840754330313.33047008701394659, -1296637504820.39253987192720169 };
  double h1  [9] = { 3.84992852388422247329417735459, .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, 180., 900., 1.87350425506628957387706507015, 900., -.699987004342585904235304973562 };
  double h2  [9] = { 2.59344330983634668503649973204, 5681497.85637984359037533728854, 2593359.16273786589538583448181, 5681497.85637984359037533728854, 3683654725757.07207692496997848, 2840726695747.16695586036158486, 2593359.16273786589538583448181, 2840726695747.16695586036158486, -54030230.5868139717400936607443 };
  double hres[9] = { 1.25648521404787578825767762255, -5681496.91962771605723055035001, -2593357.28923361082909626060474, -5681496.91962771605723055035001, -3683654725577.07207692496997848, -2840726694847.16695586036158486, -2593357.28923361082909626060474, -2840726694847.16695586036158486, 54030229.8868269673975077565090 };
  adreal<3,DO_HESS_TEST,double> ad1(2996.15007147611577752670582265, g1,h1), ad2(1296775685148.76015648998995968, g2,h2), adresMaple(-1296775682152.61008501387418215, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 103.042734028645926563238578858, 8999.65000649782870704788234751, 2993.00012995657414095764695026 };
  double g2  [3] = { 25934349.1912105592051197714340, 28407418470238.0496088559011718, 1296776057029.26227949959034079 };
  double gres[3] = { -25934246.1484765305591932081954, -28407418461238.3996023580724648, -1296776054036.26214954301619983 };
  double h1  [9] = { 38.4992852388422247329417735459, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, 1800., 900., 18.7350425506628957387706507015, 900., -.699987004342585904235304973562 };
  double h2  [9] = { 25.9344330983634668503649973204, 56814853.7219066807467608475208, 2593497.71194743562201784020681, 56814853.7219066807467608475208, 36836534773381.5452535504472484, 2840754405589.08090118676272986, 2593497.71194743562201784020681, 2840754405589.08090118676272986, 83907152.9076452452258863947824 };
  double hres[9] = { 12.5648521404787578825767762255, -56814852.7851545532136160605823, -2593478.97690488495912210143616, -56814852.7851545532136160605823, -36836534771581.5452535504472484, -2840754404689.08090118676272986, -2593478.97690488495912210143616, -2840754404689.08090118676272986, -83907153.6076322495684722990177 };
  adreal<3,DO_HESS_TEST,double> ad1(29961.5007147611577752670582265, g1,h1), ad2(12967132642028.8257799372727738, g2,h2), adresMaple(-12967132612067.3250651761149985, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 540302846170.445585540654008380, 8999999999999999999.15852901519, 2999999999998317058.03038420699 };
  double g2  [3] = { 936753622030.960737334649229063, 405686.21016877343430675418196, -349993502172.040201025627684839 };
  double gres[3] = { -396450775860.515151793995220683, 8999999999999594312.94836024175, 3000000349991819230.07058523262 };
  double h1  [9] = { 841471826278.881314549008974132, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18000000000000., 9000000000000., 1080604.61173627943480187321489, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { -1494497.81595039611669398835430, -2684876.67540383644249057343407, 349993502172.787449933602882898, -2684876.67540383644249057343407, -1703124.45971863951353128064744, -699984.725152120669172296789743, 349993502172.787449933602882898, -699984.725152120669172296789743, 936752127533.144786938532535075 };
  double hres[9] = { 841473320776.697264945125668120, 2684877.21570614231063029083501, -349992421568.175713654168081024, 2684877.21570614231063029083501, 18000001703124.4597186395135313, 9000000699984.72515212066917229, -349992421568.175713654168081024, 9000000699984.72515212066917229, -936752127534.827728908148328088 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999158528173721.11869, g1,h1), ad2(-936752874782.052762136590882069, g2,h2), adresMaple(3000000000000095281048503.17146, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 540302.846170445585540654008380, -9000000000000.84147098480789651, 3000000000000000001.68294196962 };
  double g2  [3] = { 540302305866.645219584986211326, -1080606.89092674466986488139871, -841470984808.643755560477519688 };
  double gres[3] = { -540301765563.799049139400670672, -8999998919393.95054424013803163, 3000000841470984810.32669753010 };
  double h1  [9] = { 841471.826278881314549008974132, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -18000000., 9000000000000., -1.08060461173627943480187321489, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { 1.49449781595039611669398835430, 1080609.17011720990492788958253, 841470984809.391004468452717747, 1080609.17011720990492788958253, .62251797447810501243983355548, -1682939.69042532777824199645944, 841470984809.391004468452717747, -1682939.69042532777824199645944, 540302305868.139717400936607443 };
  double hres[9] = { 841470.331781065364152892280144, -1080608.62981490403678817218159, -841470984810.471609080188997181, -1080608.62981490403678817218159, -18000000.6225179744781050124398, 9000001682939.69042532777824199, -841470984810.471609080188997181, 9000001682939.69042532777824199, -540302305869.822659370552400456 };
  adreal<3,DO_HESS_TEST,double> ad1(-3000000000000841471.82627888131, g1,h1), ad2(-540302305867.392468492961409385, g2,h2), adresMaple(-2999999459698535604.43381038835, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 540302.305868139717941238913311, 8999999.15852901519210349334750, 2999999999999999999.99999831706 };
  double g2  [3] = { 999999999999.500001494497857617, -1999999.99999672080953476502032, 999999.252750925358135274994673 };
  double gres[3] = { -999999459697.194133354779916378, 10999999.1585257360016382583678, 2999999999999000000.74724739171 };
  double h1  [9] = { 841470.984807896507493973306438, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, 18.000000, 9000000000000., .108060461173627943480187321489e-5, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 1999999.99999444161906952995731, -999998.505502017382937216647679, 1999999.99999444161906952995731, -2.00000170312158621438444732504, 4.27919046523472967485048593544, -999998.505502017382937216647679, 4.27919046523472967485048593544, 999999999999.500000000000041667 };
  double hres[9] = { 841470.984809391005309923702555, -1999999.45969213575092981255638, 999998.505503097987548952927113, -1999999.45969213575092981255638, 20.0000017031215862143844473250, 8999999999995.72080953476527032, 999998.505503097987548952927113, 8999999999995.72080953476527032, -1000000000001.18294196961583468 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999158529.01519210349250603, g1,h1), ad2(-999999999999.500000747248949642, g2,h2), adresMaple(3999999158528.51519285074145568, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 540302.846170445585540654008380, 8999999999999.15852901519210349, 2999999999999999998.31705803038 };
  double g2  [3] = { 540302305869.634215216887003560, -1080602.33254581419973886503107, 841470984807.149257744527123572 };
  double gres[3] = { -540301765566.788044771301462906, 9000001080601.49107482939184235, 2999999158529015191.16780028586 };
  double h1  [9] = { 841471.826278881314549008974132, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 18000000., 9000000000000., 1.08060461173627943480187321489, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { -1.49449781595039611669398835430, 1080600.05335534896467585684725, -841470984806.402008836551925513, 1080600.05335534896467585684725, -2.78372719795066388204357998526, 1682944.24880625824836801282708, -841470984806.402008836551925513, 1682944.24880625824836801282708, 540302305868.139717400936607443 };
  double hres[9] = { 841473.320776697264945125668120, -1080599.51305304309653613944631, 841470984807.482613448288204948, -1080599.51305304309653613944631, 18000002.7837271979506638820436, 8999998317055.75119374175163199, 841470984807.482613448288204948, 8999998317055.75119374175163199, -540302305869.822659370552400456 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999158528.17372111869, g1,h1), ad2(-540302305868.886966308911805501, g2,h2), adresMaple(3000000540301464397.06068742761, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 540356.336098726531372676701104, 89999999999999.1585290151921035, 2999999999999999983.17058030384 };
  double g2  [3] = { -839071529061.507474099359986657, 1678165.85005755725514780973384, -544021110890.117062312722859909 };
  double gres[3] = { 839072069417.843572825891359334, 89999998321833.3084714579369557, 3000000544021110873.28764261657 };
  double h1  [9] = { 841555.131906377296303167571862, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 180000000., 9000000000000., 10.8060461173627943480187321489, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { -14.9449781595039611669398835430, -1678188.64196220960577789157204, 544021110890.864311220698057968, -1678188.64196220960577789157204, -15.3530828039909395678993398080, -1088039.94258827439174648713988, 544021110890.864311220698057968, -1088039.94258827439174648713988, -839071529076.452452258863947824 };
  double hres[9] = { 841570.076884536800264334511746, 1678189.18226451547391760897297, -544021110880.058265103335263620, 1678189.18226451547391760897297, 180000015.353082803990939567899, 9000001088039.94258827439174649, -544021110880.058265103335263620, 9000001088039.94258827439174649, 839071529074.769510289248154811 };
  adreal<3,DO_HESS_TEST,double> ad1(29999999999999158444.8680936227, g1,h1), ad2(839071529068.979963179111967241, g2,h2), adresMaple(29999999160927629375.8881304436, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 540302305867.599415095068467726, 8999999.15852901519210349334750, -1682944.96961579301330500464326 };
  double g2  [3] = { 6229631.83537173645517268616837, 6851039.51513377458817293174417, -3.46480895148109741313160210170 };
  double gres[3] = { 540296076235.764043358613295040, 2148959.64339524060393056160333, -1682941.50480684153220759151166 };
  double h1  [9] = { 841470984807.055035667694425123, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, -18000000., 9., 1080604.61173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -6229630.89861960892202789922984, -13702077.1567632941100562896113, 6.57962440079090187414555171662, -13702077.1567632941100562896113, -21339719.7634548900314502643316, 7.55102464597210542611866284066, 6.57962440079090187414555171662, 7.55102464597210542611866284066, .936752127533144786938532535075 };
  double hres[9] = { 841477214437.953655276616453022, 13702077.6970655999781960070122, 1080598.03211187864389999906934, 13702077.6970655999781960070122, 3339719.76345489003145026433157, 1.44897535402789457388133715934, 1080598.03211187864389999906934, 1.44897535402789457388133715934, -2.61969409714893780024353717834 };
  adreal<3,DO_HESS_TEST,double> ad1(-841473984807.055035667694425123, g1,h1), ad2(-3114816.38606193199415873655345, g2,h2), adresMaple(-841470869990.668973735700266386, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 0., -9.84147098480789650665250232163, -1.31705803038420698669499535674 };
  double g2  [3] = { -5.68932859275146920462696262240, -5.77043302989324008708148465221, -3.95628643411770096766645193655 };
  double gres[3] = { 5.68932859275146920462696262240, -4.07103795491465641957101766942, 2.63922840373349398097145657981 };
  double h1  [9] = { 0., .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., -1.08060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, 12.6214706715227596089648425193, 7.07110188342750542868040155147, 12.6214706715227596089648425193, 20.2591132782143555303588172396, 8.53397961124531253518836251036, 7.07110188342750542868040155147, 8.53397961124531253518836251036, .540302305868139717400936607443 };
  double hres[9] = { -6.22963089861960892202789922984, -12.0811683656546198915639059119, -8.15170649516378486348227476636, -12.0811683656546198915639059119, -2.25911327821435553035881723961, .46602038875468746481163748964, -8.15170649516378486348227476636, .46602038875468746481163748964, -2.22324427548393273070594125070 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(2.57451314344166474361301300748, g2,h2), adresMaple(.425486856558335256386986992523, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -.540302305867599415095068467726, -.841461984807896506652502321630, -3.00000168294196961579301330500 };
  double g2  [3] = { 1.00000622963039861960892206957, 2.00000685103664162951952196669, -3.11481444930980446118061628159 };
  double gres[3] = { -1.54030853549799803470399053729, -2.84146883584453813617202428832, .114812766367834845387602976587 };
  double h1  [9] = { -.841470984807055035667694425123, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, -.18e-4, 9., .108060461173627943480187321489e-5, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -.622963089861960892202789922984e-5, -2.00001370207428325903904385005, 6.22962989861960892219456589651, -2.00001370207428325903904385005, -2.00002133971688995063496524402, 6.85103564162951952221669120043, 6.22962989861960892219456589651, 6.85103564162951952221669120043, .999999999999500000000000041667 };
  double hres[9] = { -.841464755176156416058772397224, 2.54031600794242297643998045749, -6.22962881801499718591513109464, 2.54031600794242297643998045749, 2.00000333971688995063496524402, 2.14896435837048047778330879957, -6.22962881801499718591513109464, 2.14896435837048047778330879957, -2.68294196961529301330500468493 };
  adreal<3,DO_HESS_TEST,double> ad1(.841467984807055035667694425123, g1,h1), ad2(-1.00000311481494930980446105562, g2,h2), adresMaple(1.84147109962200434547215548074, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 0., 8.15852901519210349334749767837, -4.68294196961579301330500464326 };
  double g2  [3] = { 6.76993320448774863942883583728, 7.93164225336579895668523108199, -2.27334446450190795436144729329 };
  double gres[3] = { -6.76993320448774863942883583728, .22688676182630453666226659638, -2.40959750511388505894355734997 };
  double h1  [9] = { 0., .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, -18., 9., 1.08060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -6.22963089861960892202789922984, -14.7826798949953184785685889491, 5.38815991381171241537539690821, -14.7826798949953184785685889491, -22.4203225016869143999625636694, 5.16809567201372650857835322384, 5.38815991381171241537539690821, 5.16809567201372650857835322384, .540302305868139717400936607443 };
  double hres[9] = { 6.22963089861960892202789922984, 15.3229822008634581959695255565, -4.30755530207543298057352369332, 15.3229822008634581959695255565, 4.42032250168691439996256366939, 3.83190432798627349142164677616, -4.30755530207543298057352369332, 3.83190432798627349142164677616, -2.22324427548393273070594125070 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(-3.65511775517794417841488622236, g2,h2), adresMaple(.655117755177944178414886222363, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 53.4899282809458320226927241369, 89.1585290151921034933474976784, -19.8294196961579301330500464326 };
  double g2  [3] = { 61.4572374571196367680201283506, 66.8322333581422903143158507754, -3.65883656019917427441869727677 };
  double gres[3] = { -7.96730917617380474532740421368, 22.3262956570498131790316469030, -16.1705831359587558586313491558 };
  double h1  [9] = { 83.3056274959817541585977298414, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, -180., 9., 10.8060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -62.2963089861960892202789922984, -135.342609774437485533149429446, 6.77365200950897873543264689169, -135.342609774437485533149429446, -211.719035841353444747089176649, 7.93907986340825914869285319080, 6.77365200950897873543264689169, 7.93907986340825914869285319080, -.839071529076452452258863947824 };
  double hres[9] = { 145.601936482177843378876722140, 135.882912080305625250550366053, 4.03239410785381561258608525721, 135.882912080305625250550366053, 31.7190358413534447470891766494, 1.06092013659174085130714680920, 4.03239410785381561258608525721, 1.06092013659174085130714680920, -.843870440539340561046140695436 };
  adreal<3,DO_HESS_TEST,double> ad1(-113.305627495981754158597729841, g1,h1), ad2(-30.3090829640215921578806322014, g2,h2), adresMaple(-82.9965445319601620007170976396, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 540302305868.139717941238913311, -.841461984807896506652502321630, -1682941.96961579301330500164326 };
  double g2  [3] = { -4.00000000000039658120580072189, 2000000.00000012649574493504376, .199999965000716449537371481569e-5 };
  double gres[3] = { 540302305872.139717941239309892, -2000000.84146211130364144169626, -1682941.96961779301295500880776 };
  double h1  [9] = { 841470984807.896507493973306438, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18.000000, .9e-11, 1080604.61173627943480187321489, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { 4.00000000000133333333333386668, -4000000.00000212649574493637710, -.399999965000783116204038174903e-5, -4000000.00000212649574493637710, 2.12649574493904375945627279653, 1.99999930001499565741409709803, -.399999965000783116204038174903e-5, 1.99999930001499565741409709803, .936752127533144786938532535075e-12 };
  double hres[9] = { 841470984803.896507493971973105, 4000000.54030443236388465377804, 1080604.61174027943445188104605, 4000000.54030443236388465377804, 15.8735042550609562405437272034, -1.99999930000599565741409709803, 1080604.61174027943445188104605, -1.99999930000599565741409709803, -1.68294196961672976543253778805 };
  adreal<3,DO_HESS_TEST,double> ad1(-841470984807.896507493970306438, g1,h1), ad2(1.99999999999972991453913378855, g2,h2), adresMaple(-841470984809.896507493970036353, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380, -.841470984816896506652502321630, 1.68294196961579301630500464326 };
  double g2  [3] = { .400000054030363920147305126762e-5, -2.00000108060661173627943613520, .199999915852968185877016028084e-5 };
  double gres[3] = { .540298846169905281901452535328, 1.15853009578971522962693381357, 1.68293996961663448662314587310 };
  double h1  [9] = { .841471826278881314549008974132, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -.18e-4, .9e-11, -1.08060461173627943480187321489, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { -.400000000000133333333333386668e-5, 4.00000108060861173627943746854, -.399999915853034852543682721418e-5, 4.00000108060861173627943746854, -1.08060861173627944013520654823, 1.99999831706003038420698802833, -.399999915853034852543682721418e-5, 1.99999831706003038420698802833, .540302305868139717400936607443e-12 };
  double hres[9] = { .841475826278881315882342307466, -3.45969877474047201887850086110, -1.08060061173712090445334777807, -3.45969877474047201887850086110, 1.08059061173627944013520654823, -1.99999831705103038420698802833, -1.08060061173712090445334777807, -1.99999831705103038420698802833, -1.68294196961633331561087278298 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841471826278881317549008974132, g1,h1), ad2(-.200000054030297253480638433428e-5, g2,h2), adresMaple(-.841469826278341014576474167748, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380e-6, -.841470984807896497652502321630, -.168294196961279301330500464326e-5 };
  double g2  [3] = { -.300000000000183333333333382501e-11, .300000000000125000e-17, .200000000000166666666666676667e-5 };
  double gres[3] = { .540305846170445587373987341714e-6, -.841470984807896500652502321631, -.368294196961445967997167140993e-5 };
  double h1  [9] = { .841471826278881314549008974132e-6, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .18e-10, .9e-11, .108060461173627943480187321489e-5, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-11, -.200000000000500000000000258334e-5, -.400000000000233333333333370001e-5, -.200000000000500000000000258334e-5, -1.99999999999499999999999475000, 2.00000000000400000000000100000, -.400000000000233333333333370001e-5, 2.00000000000400000000000100000, .999999999999500000000000041667e-12 };
  double hres[9] = { .841467826278881313215675640798e-6, .540304305868139722400936607446, .508060461173861276813520691490e-5, .540304305868139722400936607446, 2.00000000001299999999999475000, -1.99999999999500000000000100000, .508060461173861276813520691490e-5, -1.99999999999500000000000100000, -1.68294196961679301330500414326 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841471826278881311549008974132e-6, g1,h1), ad2(.100000000000116666666666689167e-11, g2,h2), adresMaple(-.841472826278881312715675640799e-6, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380, -.841470984798896506652502321630, -1.68294196961579301030500464326 };
  double g2  [3] = { -.399999945969902746519361646574e-5, 1.99999891939738826372056653146, .200000084147165147456317358584e-5 };
  double gres[3] = { .540306846169905284568119201997, -2.84146990419628477037306885309, -1.68294396961663448195647920644 };
  double h1  [9] = { .841471826278881314549008974132, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, .18e-4, .9e-11, 1.08060461173627943480187321489, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-5, -3.99999891939938826372056786480, -.400000084147231814122984051918e-5, -3.99999891939938826372056786480, -1.08060061173627942946853988155, 2.00000168294396961579301463833, -.400000084147231814122984051918e-5, 2.00000168294396961579301463833, .540302305868139717400936607443e-12 };
  double hres[9] = { .841467826278881313215675640798, 4.54030122526752798112150447224, 1.08060861173712090712001444473, 4.54030122526752798112150447224, 1.08061861173627942946853988155, -2.00000168293496961579301463833, 1.08060861173712090712001444473, -2.00000168293496961579301463833, -1.68294196961633331561087278298 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841471826278881311549008974132, g1,h1), ad2(.199999945969836079852694953240e-5, g2,h2), adresMaple(-.841473826278341009909807501082, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 54.0302311271162776082333781452, -.841470984717896506652502321630, -16.8294196961579301300500464326 };
  double g2  [3] = { -.400000008390848624097857909257e-4, 20.0000016781630581529049178510, .199999945597955577729685352859e-5 };
  double gres[3] = { 54.0302711271171166930957879310, -20.8414726628809546595574201726, -16.8294216961573861096058237295 };
  double h1  [9] = { 84.1470993222606354731467388155, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, .180e-3, .9e-11, 10.8060461173627943480187321489, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-4, -40.0000016781830581529049311844, -.399999945598022244396352046193e-5, -40.0000016781830581529049311844, 1.67818305815290495785106122903, 1.99999891195977822126037452383, -.399999945598022244396352046193e-5, 1.99999891195977822126037452383, -.839071529076452452258863947824e-12 };
  double hres[9] = { 84.1470593222606354598134054822, 40.5403039840511978703058677918, 10.8060501173622503282411761124, 40.5403039840511978703058677918, -1.67800305815290495785106122903, -1.99999891195077822126037452383, 10.8060501173622503282411761124, -1.99999891195077822126037452383, -1.68294196961495394177592819081 };
  adreal<3,DO_HESS_TEST,double> ad1(-84.1470993222606354431467388155, g1,h1), ad2(.200000008390781957431191215923e-4, g2,h2), adresMaple(-84.1471193222614745213424819347, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 540302305868.680019706804747160, 8999999.15852901519210349334750, -1682938.96961579301330500464326 };
  double g2  [3] = { -6229629.96186748138888311229131, 6851035.76812526445559378399003, 2.76482194713851150889629712814 };
  double gres[3] = { 540308535498.641887188193630272, 2148963.39040375073650970935747, -1682941.73443774015181651353956 };
  double h1  [9] = { 841470984808.737977637310218137, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18000000., 9., 1080604.61173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { 6229630.89861960892202789922984, -13702073.4097547839774771418571, -5.87963739644831596991024674306, -13702073.4097547839774771418571, 21339716.0164463798988711165774, 6.15105063728693361764805289354, -5.87963739644831596991024674306, 6.15105063728693361764805289354, .936752127533144786938532535075 };
  double hres[9] = { 841464755177.839358028388190238, 13702073.9500570898456168592580, 1080610.49137367588311784312514, 13702073.9500570898456168592580, -3339716.01644637989887111657743, 2.84894936271306638235194710646, 1080610.49137367588311784312514, 2.84894936271306638235194710646, -2.61969409714893780024353717834 };
  adreal<3,DO_HESS_TEST,double> ad1(-841467984808.737977637310218137, g1,h1), ad2(3114814.51255767692786916267639, g2,h2), adresMaple(-841471099623.250535314238087300, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 1.08060461173627943480187321489, -9.84147098480789650665250232163, 4.68294196961579301330500464326 };
  double g2  [3] = { 6.76993320448774863942883583728, -7.93164225336579895668523108199, 2.27334446450190795436144729329 };
  double gres[3] = { -5.68932859275146920462696262240, -1.90982873144209754996727123964, 2.40959750511388505894355734997 };
  double h1  [9] = { 1.68294196961579301330500464326, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -18., 9., -1.08060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -6.22963089861960892202789922984, 14.7826798949953184785685889491, -5.38815991381171241537539690821, 14.7826798949953184785685889491, -22.4203225016869143999625636694, 5.16809567201372650857835322384, -5.38815991381171241537539690821, 5.16809567201372650857835322384, .540302305868139717400936607443 };
  double hres[9] = { 7.91257286823540193533290387310, -14.2423775891271787611676523416, 4.30755530207543298057352369332, -14.2423775891271787611676523416, 4.42032250168691439996256366939, 3.83190432798627349142164677616, 4.30755530207543298057352369332, 3.83190432798627349142164677616, -2.22324427548393273070594125070 };
  adreal<3,DO_HESS_TEST,double> ad1(-4.68294196961579301330500464326, g1,h1), ad2(-3.65511775517794417841488622236, g2,h2), adresMaple(-1.02782421443784883489011842090, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { .540302305868680019706804747160, -.841461984807896506652502321630, 2.99999831705803038420698669500 };
  double g2  [3] = { .999993770368601380391078013768, -1.99999314896135837048047819997, 3.11481644930980446084728294825 };
  double gres[3] = { -.459691464499921360684273266608, 1.15853116415346186382797587834, -.114818132251774076640296253253 };
  double h1  [9] = { .841470984808737977637310218137, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .18e-4, 9., .108060461173627943480187321489e-5, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { .622963089861960892202789922984e-5, 1.99998629792371674096095631661, -6.22963189861960892186123256317, 1.99998629792371674096095631661, -1.99997866028111004936503492264, 6.85103964162951952155002453377, -6.22963189861960892186123256317, 6.85103964162951952155002453377, .999999999999500000000000041667 };
  double hres[9] = { .841464755177839358028388190238, -1.45968399205557702356001970917, 6.22963297922422065814066736504, -1.45968399205557702356001970917, 1.99999666028111004936503492264, 2.14896035837048047844997546623, 6.22963297922422065814066736504, 2.14896035837048047844997546623, -2.68294196961529301330500468493 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841467984808737977637310218137, g1,h1), ad2(-.999996885184050690195539027717, g2,h2), adresMaple(.158528900375312712558228809580, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 1.08060461173627943480187321489, 8.15852901519210349334749767837, 1.31705803038420698669499535674 };
  double g2  [3] = { -5.68932859275146920462696262240, 5.77043302989324008708148465221, 3.95628643411770096766645193655 };
  double gres[3] = { 6.76993320448774863942883583729, 2.38809598529886340626601302616, -2.63922840373349398097145657981 };
  double h1  [9] = { 1.68294196961579301330500464326, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., 1.08060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, -12.6214706715227596089648425193, -7.07110188342750542868040155147, -12.6214706715227596089648425193, 20.2591132782143555303588172396, 8.53397961124531253518836251036, -7.07110188342750542868040155147, 8.53397961124531253518836251036, .540302305868139717400936607443 };
  double hres[9] = { -4.54668892900381590872289458658, 13.1617729773908993263657791267, 8.15170649516378486348227476636, 13.1617729773908993263657791267, -2.25911327821435553035881723961, .46602038875468746481163748964, 8.15170649516378486348227476636, .46602038875468746481163748964, -2.22324427548393273070594125070 };
  adreal<3,DO_HESS_TEST,double> ad1(1.31705803038420698669499535674, g1,h1), ad2(2.57451314344166474361301300748, g2,h2), adresMaple(-1.25745511305745775691801765074, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 54.5705328926821114574945973517, 89.1585290151921034933474976784, -13.8294196961579301330500464326 };
  double g2  [3] = { -63.1353805152725416725378562462, 70.1885194744481001233513065666, 2.57079433842043464760920195307 };
  double gres[3] = { 117.705913407954653130032453598, 18.9700095407440033699961911118, -16.4002140345783647806592483856 };
  double h1  [9] = { 84.9885694655975471719027344846, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 180., 9., 10.8060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { 62.2963089861960892202789922984, -138.698895890743295342184885238, -5.68560978773023910862315156799, -138.698895890743295342184885238, 215.075321957659254556124632441, 5.76299541985077989507386254340, -5.68560978773023910862315156799, 5.76299541985077989507386254340, -.839071529076452452258863947824 };
  double hres[9] = { 22.6922604794014579516237421862, 139.239198196611435059585821845, 16.4916559050930334566418837168, 139.239198196611435059585821845, -35.0753219576592545561246324406, 3.23700458014922010492613745660, 16.4916559050930334566418837168, 3.23700458014922010492613745660, -.843870440539340561046140695436 };
  adreal<3,DO_HESS_TEST,double> ad1(-54.9885694655975471719027344846, g1,h1), ad2(31.9872260221744970623983600970, g2,h2), adresMaple(-86.9757954877720442343010945816, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 540302305873.542740459618004617, 899999999.158529015192103493347, -1679941.96961579301330500464326 };
  double g2  [3] = { -2593349.63462359337055780587879, 2840724.79012431245089475586426, -33.7026285622111218692469988121 };
  double gres[3] = { 540304899223.177364052988562423, 897159274.368404702741208737483, -1679908.26698723080218313539626 };
  double h1  [9] = { 841470984816.311216500581286697, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 180000000., 900., 1080604.61173627943480187321489, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { 2593443.30983634668503649973204, -5681468.31529117556468525049916, 32.4059069072929485267287489461, -5681468.31529117556468525049916, 3683651.77164820527435596129954, -4.15912651825899592856255510071, 32.4059069072929485267287489461, -4.15912651825899592856255510071, 93.6752127533144786938532535075 };
  double hres[9] = { 841468391373.001380153896250197, 5681468.85559348143282496790010, 1080572.20582937214185334648614, 5681468.85559348143282496790010, 176316348.228351794725644038700, 904.159126518258995928562555101, 1080572.20582937214185334648614, 904.159126518258995928562555101, -95.3581547229302717071582581508 };
  adreal<3,DO_HESS_TEST,double> ad1(-838470984816.311216500581286697, g1,h1), ad2(1296627.97970542002803955601277, g2,h2), adresMaple(-838472281444.290921920609326253, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 5.94332536454953689141030268187, -900.841470984807896506652502322, 3001.68294196961579301330500464 };
  double g2  [3] = { 56.6236738966503184251301604763, -13.6467896425296574618092267838, -82.8503768258714773227319822970 };
  double gres[3] = { -50.6803485321007815337198577944, -887.194681342278239044843275538, 3084.53331879548727033603698694 };
  double h1  [9] = { 9.25618083288686157317752553793, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -180., 900., -1.08060461173627943480187321489, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { -2.59344330983634668503649973204, 16.4875331676965205755997214187, 81.5536551709533039802137324310, 16.4875331676965205755997214187, -4.76425825688873977544740839150, -13.9886761709910670192595517977, 81.5536551709533039802137324310, -13.9886761709910670192595517977, 54.0302305868139717400936607443 };
  double hres[9] = { 11.8496241427232082582140252700, -15.9472308618283808581987848112, -82.6342597826895834150156056458, -15.9472308618283808581987848112, -175.235741743111260224552591608, 913.988676170991067019259551798, -82.6342597826895834150156056458, 913.988676170991067019259551798, -55.7131725564297647533986653876 };
  adreal<3,DO_HESS_TEST,double> ad1(-3009.25618083288686157317752554, g1,h1), ad2(-55.3269522417321450826119106103, g2,h2), adresMaple(-2953.92922859115471649056561493, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 5.40302305868193747631523421415, -.840570984807896506652502321630, 2999.99999831705803038420698669 };
  double g2  [3] = { 99.9999974065066901636533191302, -19.9999971592464748331368870428, 1.29682165491817332585158319935 };
  double gres[3] = { -94.5969743478247526873380849160, 19.1594261744385783264843847212, 2998.70317666213985705835540349 };
  double h1  [9] = { 8.41470984807980653750983111281, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .180e-3, 900., .108060461173627943480187321489e-5, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { .259344330983634668503649973204e-5, 19.9999943185029496662737732523, -2.59354330983634666836983306537, 19.9999943185029496662737732523, -1.99999631634535484753965943779, 2.84076352516686311045716130158, -2.59354330983634666836983306537, 2.84076352516686311045716130158, 99.9999999999500000000000041667 };
  double hres[9] = { 8.41470725463649670116314607631, -19.4596920126348099488728366449, 2.59354439044095840464926786724, -19.4596920126348099488728366449, 2.00017631634535484753965943779, 897.159236474833136889542838698, 2.59354439044095840464926786724, 897.159236474833136889542838698, -101.682941969565793013305008810 };
  adreal<3,DO_HESS_TEST,double> ad1(-8.41170984807980653750983111281, g1,h1), ad2(-99.9999987032283450818266616485, g2,h2), adresMaple(91.5882888551485385443168305356, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 5.94332536454953689141030268187, 899.158529015192103493347497678, 2998.31705803038420698669499536 };
  double g2  [3] = { 51.4367872769776250550571610123, -7.96530259219593123422823751399, 85.4438201357078240077684820290 };
  double gres[3] = { -45.4934619124280881636468583304, 907.123831607388034727575735192, 2912.87323789467638297892651333 };
  double h1  [9] = { 9.25618083288686157317752553793, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 180., 900., 1.08060461173627943480187321489, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { 2.59344330983634668503649973204, 5.12455906702906812043774287909, -86.7405417906259973502867318950, 5.12455906702906812043774287909, 2.60304903341618090584366196172, 19.6701632213247932468405410675, -86.7405417906259973502867318950, 19.6701632213247932468405410675, 54.0302305868139717400936607443 };
  double hres[9] = { 6.66273752305051488814102580589, -4.58425676116092840303680627165, 87.8211464023622767850886051099, -4.58425676116092840303680627165, 177.396950966583819094156338038, 880.329836778675206753159458932, 87.8211464023622767850886051099, 880.329836778675206753159458932, -55.7131725564297647533986653876 };
  adreal<3,DO_HESS_TEST,double> ad1(2990.74381916711313842682247446, g1,h1), ad2(-52.7335089318957983975754108783, g2,h2), adresMaple(3043.47732809900893682439788533, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 59.4332536454953689141030268187, 8999.15852901519210349334749768, 2983.17058030384206986694995357 };
  double g2  [3] = { -109.841586006008712076251392103, 45.1888658331976801830822253056, -53.1053894340188079979565163191 };
  double gres[3] = { 169.274839651504080990354418922, 8953.96966318199442331026527237, 3036.27596973786087786490646989 };
  double h1  [9] = { 92.5618083288686157317752553793, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 1800., 900., 10.8060461173627943480187321489, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { 25.9344330983634668503649973204, -73.5963010848663113209871716546, 51.8086677791006346554382664531, -73.5963010848663113209871716546, 38.5146795096775083109730796618, -8.03967869262053315430445860209, 51.8086677791006346554382664531, -8.03967869262053315430445860209, -83.9071529076452452258863947824 };
  double hres[9] = { 66.6273752305051488814102580589, 74.1366033907344510383881082620, -41.0026216617378403074195343042, 74.1366033907344510383881082620, 1761.48532049032249168902692033, 908.039678692620533154304458602, -41.0026216617378403074195343042, 908.039678692620533154304458602, 82.2242109380294522125813901391 };
  adreal<3,DO_HESS_TEST,double> ad1(29907.4381916711313842682247446, g1,h1), ad2(96.8743694568269786510688934426, g2,h2), adresMaple(29810.5638222143044056171558511, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 1000000999999.49999950000004167, 9000000000000000000.00000100000, 3000000000000000002.00000000000 };
  double g2  [3] = { 936752127531.650289122582138958, 1.87350653425675480894007325397, 349993.502171292951370403578806 };
  double gres[3] = { 63248872467.849710377417902715, 8999999999999999998.12649446574, 2999999999999650008.49782870705 };
  double h1  [9] = { -1000000.99999983333316666667500, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, 18000000000000., 9000000000000., 1999999.99999900000000000008333, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { -1494497.81595039611669398835430, 1873508.81344722004400308143779, 349993502171.292950623154670831, 1873508.81344722004400308143779, .17038166885190512663535829978e-6, .699987004344865094700540036570, 349993502171.292950623154670831, .699987004344865094700540036570, -936752.127533144786938532535075 };
  double hres[9] = { 494496.81595056278352732167930, -1873507.81344722004450308143779, -349991502171.292951623154670831, -1873507.81344722004450308143779, 17999999999999.9999998296183311, 8999999999999.30001299565513491, -349991502171.292951623154670831, 8999999999999.30001299565513491, 936752.127535144786938532201742 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000000001000001.00000, g1,h1), ad2(936752.127532397538030557337017, g2,h2), adresMaple(3000000000000000000063248.87247, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 1000000.99999949999950000004167, -8999999999999.99999900000000000, 2999999999999999999.99999800000 };
  double g2  [3] = { 540302305868.139718895434423393, 1.08060461173400024433663815188, 841470.984807896505905253413655 };
  double gres[3] = { -540301305867.139719395434923393, -9000000000001.08060361173400024, 2999999999999158529.01519010349 };
  double h1  [9] = { -1.00000099999983333316666667500, .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, -18000000., 9000000000000., -1.99999999999900000000000008333, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { 1.49449781595039611669398835430, 1080604.61173172105387140308887, 841470984807.896505158004505680, 1080604.61173172105387140308887, .108060631485886564918632045660e-5, 1.68294196961807220377023970627, 841470984807.896505158004505680, 1.68294196961807220377023970627, -540302.305868139717400936607443 };
  double hres[9] = { -2.49449881595022944986065502930, -1080603.61173172105437140308887, -841470984809.896505158003505680, -1080603.61173172105437140308887, -18000000.0000010806063148588656, 8999999999998.31705803038192780, -841470984809.896505158003505680, 8999999999998.31705803038192780, 540302.305870139717400936274110 };
  adreal<3,DO_HESS_TEST,double> ad1(-2999999999999999998.99999900000, g1,h1), ad2(540302.305868139718148185515418, g2,h2), adresMaple(-3000000000000540301.30586713972, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 999999.999999500001000000041667, 9000000.00000099999999999983333, 3000000000000000000.00000000000 };
  double g2  [3] = { 999999999999.499999999998547169, 1.99999999999900000227919054857, -1.00000000000058058224130853973 };
  double gres[3] = { -999998999999.500000499997547169, 8999998.00000100000099999755414, 3000000000000000001.00000000000 };
  double h1  [9] = { -.999999999999833334333333341667, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, 18.000000, 9000000000000., .199999999999900000000000008333e-5, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 1999999.99999900000455838101380, -1000000.00000132783114928373778, 1999999.99999900000455838101380, .199999999999729687741378569888e-5, -.199999772080920143160365849951e-5, -1000000.00000132783114928373778, -.199999772080920143160365849951e-5, -999999.999999500000000000041667 };
  double hres[9] = { -.999998505502017383937216647679, -1999998.99999900000505838101380, 1000000.00000332783114928273778, -1999998.99999900000505838101380, 17.9999980000000000027031225862, 9000000000000.00000199999772081, 1000000.00000332783114928273778, 9000000000000.00000199999772081, 1000000.00000149999999999970833 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000.99999999999983333, g1,h1), ad2(999999.999999499999999999294418, g2,h2), adresMaple(2999999000001.00000049999983333, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 1000000.99999949999950000004167, 9000000000000.00000100000000000, 3000000000000000000.00000200000 };
  double g2  [3] = { 540302305868.139715906438791493, 1.08060461173855862526710827790, -841470.984807896507399751229605 };
  double gres[3] = { -540301305867.139716406439291493, 8999999999998.91939638826144138, 3000000000000841470.98480989651 };
  double h1  [9] = { -1.00000099999983333316666667500, .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, 18000000., 9000000000000., 1.99999999999900000000000008333, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { -1.49449781595039611669398835430, 1080604.61174083781573234334091, -841470984807.896508147000137580, 1080604.61174083781573234334091, .108060290861369322041742597318e-5, -1.68294196961351382283976958025, -841470984807.896508147000137580, -1.68294196961351382283976958025, -540302.305868139717400936607443 };
  double hres[9] = { .49449681595056278352732167930, -1080603.61174083781623234334091, 841470984809.896508146999137580, -1080603.61174083781623234334091, 17999999.9999989193970913863068, 9000000000001.68294196961351382, 841470984809.896508146999137580, 9000000000001.68294196961351382, 540302.305870139717400936274110 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000000001.00000100000, g1,h1), ad2(540302.305868139716653687699468, g2,h2), adresMaple(2999999999999459698.69413286028, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 1000099.99999949995000000004167, 90000000000000.0000010000000000, 3000000000000000000.00002000000 };
  double g2  [3] = { -839071529076.452467203842107328, -1.67814305813011299986537726557, 544021.110889369812657498753876 };
  double gres[3] = { 839072529176.452466703792107328, 90000000000001.6781440581301130, 2999999999999455978.88913063019 };
  double h1  [9] = { -1.00009999999983331666666667500, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, 180000000., 9000000000000., 19.9999999999900000000000008333, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { -14.9449781595039611669398835430, -1678143.05810732109521302663549, 544021110889.369811910249845901, -1678143.05810732109521302663549, -.167816008937876704836220031272e-5, 1.08804222178101881727473038671, 544021110889.369811910249845901, 1.08804222178101881727473038671, 839071.529076452452258863947824 };
  double hres[9] = { 13.9448781595041278502732168680, 1678144.05810732109471302663549, -544021110869.369811910259845901, 1678144.05810732109471302663549, 180000000.000001678160089378767, 8999999999998.91195777821898118, -544021110869.369811910259845901, 8999999999998.91195777821898118, -839071.529074452452258864281157 };
  adreal<3,DO_HESS_TEST,double> ad1(30000000000000000001.0001000000, g1,h1), ad2(-839071.529076452459731353027576, g2,h2), adresMaple(30000000000000839072.5291764525, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 999999999998.500000000000541667, 9000000.00000099999999999983333, -1.00000000000033333333333331667 };
  double g2  [3] = { -5.29287877108646413508936669476, .497753338656322994800629279695e-5, .349990387355843642313191472831e-6 };
  double gres[3] = { 1000000000003.79287877108700580, 8999999.99999602246661343660338, -1.00000034999072068917697562986 };
  double h1  [9] = { -999999.999998833333333333508334, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, -18000000., 9., 1999999.99999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -6229630.89861960892202789922984, 11.8285710281927494698896506640, .349987272540394332508730458882, 11.8285710281927494698896506640, -.194662136348843453912836253844e-4, -.699980153304944274715783090204e-6, .349987272540394332508730458882, -.699980153304944274715783090204e-6, -.936752127533144786938532535075e-6 };
  double hres[9] = { 5229630.89862077558869456572151, -10.8285710281932494698896506224, 1999999.65001172745960566757460, -10.8285710281932494698896506224, -17999999.9999805337863651156546, 9.00000069998015330494427471578, 1999999.65001172745960566757460, 9.00000069998015330494427471578, .293675212753281145360519921840e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(-2000000.00000116666666666649167, g1,h1), ad2(-.217806332177665967407541707984e-5, g2,h2), adresMaple(-1999999.99999898860334488983200, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 0., -8.99999900000000000016666666667, -3.00000199999999999966666666667 };
  double g2  [3] = { .540308535499038337009858635342, -.108061146277392106432139509825e-5, .841467869992447196848041307680e-6 };
  double gres[3] = { -.540308535499038337009858635342, -8.99999791938853722624560234528, -3.00000284146786999211386351471 };
  double h1  [9] = { 0., .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, 18., 9., -1.99999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 6.22963089861960892202789922984, -1.08061831381156269384091698161, .841464755176997887043580293731, -1.08061831381156269384091698161, .108062595145416938543683837558e-5, -.168293511857815138378548275990e-5, .841464755176997887043580293731, -.168293511857815138378548275990e-5, -.540302305868139717400936607443e-6 };
  double hres[9] = { -6.22963089861960892202789922984, 2.08061831381106269384091702328, -2.84146475517599788704358037706, 2.08061831381106269384091702328, 17.9999989193740485458306145631, 9.00000168293511857815138378548, -2.84146475517599788704358037706, 9.00000168293511857815138378548, .254030230586780638406760329077e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(.540305420683589027205397621393e-6, g2,h2), adresMaple(2.99999945969457931641097279460, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -.999999999998500000000000541667, .999999999999983333333333334167e-5, -2.99999999999800000000000033333 };
  double g2  [3] = { .999999999993270369101380432745, -.199999999999214896235837056381e-5, -.411481544930963779434728295659e-11 };
  double gres[3] = { -1.99999999999177036910138097441, .119999999999919822956917039055e-4, -2.99999999999388518455069069554 };
  double h1  [9] = { .999999999998833333333333508334e-6, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, -.18e-4, 9., .199999999999900000000000008333e-5, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -.622963089861960892202789922984e-5, -1.99999999998529792471674104429, -.722963089861944225536123257151e-5, -1.99999999998529792471674104429, .199999999997766028211004944836e-5, .885103764162918618855002455043e-11, -.722963089861944225536123257151e-5, .885103764162918618855002455043e-11, -.999999999999500000000000041667e-6 };
  double hres[9] = { .722963089861844225536123273817e-5, 2.99999999998479792471674108596, .922963089861844225536123265484e-5, 2.99999999998479792471674108596, -.199999999999776602821100494483e-4, 8.99999999999114896235837081381, .922963089861844225536123265484e-5, 8.99999999999114896235837081381, .299999999999916666666666672500e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(-.399999999999883333333333350833e-5, g1,h1), ad2(.999999999996385184550690237206e-6, g2,h2), adresMaple(-.499999999999521851788402374554e-5, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 0., 9.00000099999999999983333333333, -2.99999800000000000033333333333 };
  double g2  [3] = { .540296076237241097792014579544, -.108059776069863780528235133153e-5, -.841474099623345816456963335580e-6 };
  double gres[3] = { -.540296076237241097792014579544, 9.00000208059776069847113861568, -2.99999715852590037698751687637 };
  double h1  [9] = { 0., .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, -18., 9., 1.99999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -6.22963089861960892202789922984, -1.08059090966099617576282944817, -.841477214438795126261424349529, -1.08059090966099617576282944817, .108058327201838948416690805420e-5, .168294882065343464282452652662e-5, -.841477214438795126261424349529, .168294882065343464282452652662e-5, -.540302305868139717400936607443e-6 };
  double hres[9] = { 6.22963089861960892202789922984, 2.08059090966049617576282948984, 2.84147721443779512626142443286, 2.08059090966049617576282948984, -18.0000010805832720183894841669, 8.99999831705117934656535717548, 2.84147721443779512626142443286, 8.99999831705117934656535717548, .254030230586780638406760329077e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(.540299191052690407596475593493e-6, g2,h2), adresMaple(-3.00000054029919105269040759648, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 98.9999999999505000000000041250, 90.0000009999999999998333333333, -2.99998000000000000333333333333 };
  double g2  [3] = { -.839133825385438648348084226816, .167821156852932119971294672923e-5, .544017996073920503600286647901e-6 };
  double gres[3] = { 99.8391338253359386483480883518, 89.9999993217884314705121336204, -2.99998054401799607725383693362 };
  double h1  [9] = { -.989999999999835000000000008250e-4, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, -180., 9., 19.9999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -62.2963089861960892202789922984, 1.67828007890573749490816556281, .544014881258471193795825633952, 1.67828007890573749490816556281, -.167835645533180441086737950255e-5, -.108803537074109799728997344034e-5, .544014881258471193795825633952, -.108803537074109799728997344034e-5, .839071529076452452258863947824e-6 };
  double hres[9] = { 62.2962099861960892367789922984, -.678280078906237494908165521140, 19.4559851187315288062041751993, -.678280078906237494908165521140, -179.999998321643544668195589132, 9.00000108803537074109799728998, 19.4559851187315288062041751993, 9.00000108803537074109799728998, .116092847092321421440780273551e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(-29.9999010000000000165000000000, g1,h1), ad2(-.839102677230945550303474087320e-6, g2,h2), adresMaple(-29.9999001608973227855544496965, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 999999999999.500001000000041667, .999999999999983333333333334167e-5, 1.99999999999966666966666668333 };
  double g2  [3] = { .400000093675346086647812080521e-5, .200000187350625506628957521040e-5, .234999350217195961878431942012e-17 };
  double gres[3] = { 999999999999.499996999999104914, .799999812649357826704375813127e-5, 1.99999999999966666731667318116 };
  double h1  [9] = { -999999.999999833334333333341667, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, 18.000000, .9e-11, 1999999.99999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { 4.00000000000133333333333386668, 4.00000187350825506628957654374, .434999350217262628545098635346e-11, 4.00000187350825506628957654374, .187350825506628957921039840349e-5, .269998700434458590423530630689e-11, .434999350217262628545098635346e-11, .269998700434458590423530630689e-11, -.936752127533144786938532535075e-18 };
  double hres[9] = { -1000003.99999983333566666667500, -3.00000187350875506628957650207, 1999999.99999899999565000658116, -3.00000187350875506628957650207, 17.9999981264917449337104207896, .630001299565541409576469369311e-11, 1999999.99999899999565000658116, .630001299565541409576469369311e-11, .200000000000060341879419982812e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(999999.999999833337333333341667, g1,h1), ad2(.200000093675279419981145387187e-11, g2,h2), adresMaple(999999.999999833335333332404914, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 1.00000099999949999950000004167, .999990999999833333333333341667e-6, -.199999999999666666666666668333e-5 };
  double g2  [3] = { -.345969769413319361593239725924e-11, -.91939538826572056519812811844e-12, .284147098480856317331916925497e-17 };
  double gres[3] = { 1.00000100000295969719413323528, .999991919395221599053898539795e-6, -.199999999999950813765147524651e-5 };
  double h1  [9] = { -.100000099999983333316666667500e-5, .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, -.18e-4, .9e-11, -1.99999999999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { -.400000000000133333333333386668e-5, -.291939538826772056519812945178e-5, .484147098480922983998583618831e-11, -.291939538826772056519812945178e-5, .108060461173227943480186788156e-5, .368294196961779301330500597659e-11, .484147098480922983998583618831e-11, .368294196961779301330500597659e-11, -.540302305868139717400936607443e-18 };
  double hres[9] = { .299999900000150000016666719168e-5, 1.00000291939488826772056523980, -2.00000000000384147098480931317, 1.00000291939488826772056523980, -.190806046117322794348018678816e-4, .531705803038220698669499402341e-11, -2.00000000000384147098480931317, .531705803038220698669499402341e-11, .200000000000020696897253482305e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000099999683333316666667500e-5, g1,h1), ad2(-.145969769413252694926573032590e-17, g2,h2), adresMaple(.100000099999829303086079920195e-5, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { .100000099999949999950000004167e-5, .100000000000883333333333334167e-5, .200000299999966666666666668333e-11 };
  double g2  [3] = { .100000399999950000133333337500e-11, .200000199999900000200000008333e-11, .199999900000066666683333360001e-17 };
  double gres[3] = { .999999999995499999999998708334e-6, .999998000006833334333331341670e-6, .200000100000066666599999985000e-11 };
  double h1  [9] = { -.100000099999983333316666667500e-11, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, .18e-10, .9e-11, .199999999999900000000000008333e-5, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { .400000000000133333333333386668e-11, .200000399999900000400000008333e-5, .399999900000133333350000053335e-11, .200000399999900000400000008333e-5, .199999999999900000400000008334e-5, .199999800000200000033333466666e-11, .399999900000133333350000053335e-11, .199999800000200000033333466666e-11, -.999999999999500000000000041667e-18 };
  double hres[9] = { -.500000100000116666650000054168e-11, .999997999995500000999996041667, .199999599999999999866666658333e-5, .999997999995500000999996041667, -.199998199999900000400000008334e-5, .700000199999799999966666533334e-11, .199999599999999999866666658333e-5, .700000199999799999966666533334e-11, .200000000000066666666666618333e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000100000283333316666667500e-11, g1,h1), ad2(.100000199999950000066666670833e-17, g2,h2), adresMaple(.100000000000083333366666600833e-11, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 1.00000099999949999950000004167, .100000899999983333333333334167e-5, .200000000000266666666666668333e-5 };
  double g2  [3] = { .454030230586947305073427047412e-11, .308060461173827943480187454822e-11, .115852901519277016001416461171e-17 };
  double gres[3] = { 1.00000099999495969719413056862, .100000591939522159505389853980e-5, .200000000000150813765147391317e-5 };
  double h1  [9] = { -.100000099999983333316666667500e-5, .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, .18e-4, .9e-11, 1.99999999999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { .400000000000133333333333386668e-5, .508060461174027943480187588156e-5, .315852901519343682668083154505e-11, .508060461174027943480187588156e-5, .108060461174027943480187854822e-5, .31705803038620698669499669007e-12, .315852901519343682668083154505e-11, .31705803038620698669499669007e-12, -.540302305868139717400936607443e-18 };
  double hres[9] = { -.500000100000116666650000054168e-5, .999994919394888259720565239791, 1.99999999999584147098480664651, .999994919394888259720565239791, .169193953882597205651981214518e-4, .868294196961379301330500330993e-11, 1.99999999999584147098480664651, .868294196961379301330500330993e-11, .200000000000020696897253482305e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000100000283333316666667500e-5, g1,h1), ad2(.254030230586880638406760354078e-17, g2,h2), adresMaple(.100000100000029303086079786861e-5, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 100.000000999949999999500004167, .100008999999983333333333334167e-5, .199999999999996666666666668333e-4 };
  double g2  [3] = { .391609284709368808810744747190e-10, .183218569418670950954822854376e-10, .254402111089003648007141459519e-17 };
  double gres[3] = { 100.000000999910839071029067286, .100007167814289146623823785939e-5, .199999999999971226455557767968e-4 };
  double h1  [9] = { -.100000000999983333333166667500e-3, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, .180e-3, .9e-11, 19.9999999999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { .400000000000133333333333386668e-4, .383218569418870950954822987710e-4, .454402111089070314673808152853e-11, .383218569418870950954822987710e-4, -.167814305811290490451767456232e-5, .308804222178073962680949665703e-11, .454402111089070314673808152853e-11, .308804222178073962680949665703e-11, .839071529076452452258863947824e-18 };
  double hres[9] = { -.140000000999996666666500006167e-3, .999961678142558112904904559368, 19.9999999999854559788891101302, .999961678142558112904904559368, .181678143058112904904517674563e-3, .591195777821926037319050334297e-11, 19.9999999999854559788891101302, .591195777821926037319050334297e-11, .199999999999882759513759023088e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000001000013333333166667500e-3, g1,h1), ad2(.191609284709302142144078053856e-16, g2,h2), adresMaple(.100000000999994172404695737285e-3, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 1000000000000.49999999999954167, 9000000.00000099999999999983333, 4.99999999999966666666666668333 };
  double g2  [3] = { 7.16638302615275370896643176492, .872454189669580909576042293725e-5, .349996616986742261922113500731e-6 };
  double gres[3] = { 999999999993.333616973846787961, 8999999.99999227545810330402424, 4.99999965000304967992440476122 };
  double h1  [9] = { -1000000.00000083333333333317500, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, 18000000., 9., 1999999.99999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 6229630.89861960892202789922984, 15.5755795383253286176437808044, .349999731802191571726574514680, 15.5755795383253286176437808044, .232132221450169245390377555246e-4, .699993855380227533754826856920e-6, .349999731802191571726574514680, .699993855380227533754826856920e-6, -.936752127533144786938532535075e-6 };
  double hres[9] = { -7229630.89862044225536123240484, -14.5755795383258286176437807626, 1999999.64999926819780842835676, -14.5755795383258286176437807626, 17999999.9999767867778549830754, 8.99999930000614461977246624518, 1999999.64999926819780842835676, 8.99999930000614461977246624518, .293675212753281145360519921840e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(4000000.00000083333333333317500, g1,h1), ad2(.405156757684294924795248215000e-5, g2,h2), adresMaple(3999999.99999678176575649022575, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 1.99999999999900000000000008333, -8.99999900000000000016666666667, 2.99999800000000000033333333333 };
  double g2  [3] = { .540296076237241097792014579544, .108059776069863780528235133153e-5, .841474099623345816456963335580e-6 };
  double gres[3] = { 1.45970392376175890220798550379, -9.00000008059776069880447194902, 2.99999715852590037698751687637 };
  double h1  [9] = { -.199999999999966666666666668333e-5, .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, -18., 9., -1.99999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -6.22963089861960892202789922984, 1.08059090966099617576282944817, .841477214438795126261424349529, 1.08059090966099617576282944817, .108058327201838948416690805420e-5, .168294882065343464282452652662e-5, .841477214438795126261424349529, .168294882065343464282452652662e-5, -.540302305868139717400936607443e-6 };
  double hres[9] = { 6.22962889861960892236123256317, -.8059090966149617576282940650e-1, -2.84147721443779512626142443286, -.8059090966149617576282940650e-1, -18.0000010805832720183894841669, 8.99999831705117934656535717548, -2.84147721443779512626142443286, 8.99999831705117934656535717548, .254030230586780638406760329077e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(-2.99999800000000000033333333333, g1,h1), ad2(.540299191052690407596475593493e-6, g2,h2), adresMaple(-2.99999854029919105302374092981, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 1.00000000000049999999999954167, .999999999999983333333333334167e-5, 3.00000000000199999999999966667 };
  double g2  [3] = { 1.00000000000572963089861965059, .200000000000585103764162960285e-5, .211481544930997112768061627325e-11 };
  double gres[3] = { -.522963089862010892202789918817e-11, .799999999999398229569170373882e-5, 2.99999999999988518455068969554 };
  double h1  [9] = { -.100000000000083333333333317500e-5, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, .18e-4, 9., .199999999999900000000000008333e-5, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { .622963089861960892202789922984e-5, 2.00000000001270207528325912237, .522963089861977558869456588817e-5, 2.00000000001270207528325912237, .200000000002033971788995071830e-5, .485103764162985285521669118377e-11, .522963089861977558869456588817e-5, .485103764162985285521669118377e-11, -.999999999999500000000000041667e-6 };
  double hres[9] = { -.722963089862044225536123240484e-5, -1.00000000001320207528325908071, -.322963089862077558869456580484e-5, -1.00000000001320207528325908071, .159999999999796602821100492817e-4, 8.99999999999514896235837014715, -.322963089862077558869456580484e-5, 8.99999999999514896235837014715, .299999999999916666666666672500e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(.400000000000083333333333317500e-5, g1,h1), ad2(.100000000000261481544930984613e-5, g2,h2), adresMaple(.299999999999821851788402332887e-5, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 1.99999999999900000000000008333, 9.00000099999999999983333333333, 3.00000199999999999966666666667 };
  double g2  [3] = { .540308535499038337009858635342, .108061146277392106432139509825e-5, -.841467869992447196848041307680e-6 };
  double gres[3] = { 1.45969146449996166299014144799, 8.99999991938853722591226901194, 3.00000284146786999211386351471 };
  double h1  [9] = { -.199999999999966666666666668333e-5, .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, 18., 9., 1.99999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 6.22963089861960892202789922984, 1.08061831381156269384091698161, -.841464755176997887043580293731, 1.08061831381156269384091698161, .108062595145416938543683837558e-5, -.168293511857815138378548275990e-5, -.841464755176997887043580293731, -.168293511857815138378548275990e-5, -.540302305868139717400936607443e-6 };
  double hres[9] = { -6.22963289861960892169456589651, -.80618313812062693840916939939e-1, 2.84146475517599788704358037706, -.80618313812062693840916939939e-1, 17.9999989193740485458306145631, 9.00000168293511857815138378548, 2.84146475517599788704358037706, 9.00000168293511857815138378548, .254030230586780638406760329077e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(3.00000199999999999966666666667, g1,h1), ad2(.540305420683589027205397621393e-6, g2,h2), adresMaple(3.00000145969457931607763946127, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 100.999999999949500000000004208, 90.0000009999999999998333333333, 3.00001999999999999666666666667 };
  double g2  [3] = { -.839009232767466256169643668832, -.167807454777648860932250906207e-5, .544024225704819123209208675801e-6 };
  double gres[3] = { 101.839009232716966256169647877, 90.0000026780745477763219426558, 3.00001945597577429184754345746 };
  double h1  [9] = { -.100999999999983166666666667508e-3, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, 180., 9., 19.9999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 62.2963089861960892202789922984, -1.67800603740007231412729022849, .544027340520268433013669689750, -1.67800603740007231412729022849, -.167792966097400539816807628875e-5, .108804907281638125632901720706e-5, .544027340520268433013669689750, .108804907281638125632901720706e-5, .839071529076452452258863947824e-6 };
  double hres[9] = { -62.2964099861960892034456589651, 2.67800603739957231412729027016, 19.4559726594697315669863311435, 2.67800603739957231412729027016, 180.000001677929660974005398168, 8.99999891195092718361874367098, 19.4559726594697315669863311435, 8.99999891195092718361874367098, .116092847092321421440780273551e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(30.0001009999999999831666666667, g1,h1), ad2(-.839040380921959354214253808328e-6, g2,h2), adresMaple(30.0001018390403809051260208810, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 1000000000009.49999999999504167, 900000000.000000999999999999833, 3001.99999999999966666666666668 };
  double g2  [3] = { 96.2686560631508253788897532395, .215757860758297588525611453364e-4, .349993515138509501299385911963e-4 };
  double gres[3] = { 999999999913.231343936844216286, 899999999.999979424213924170074, 3001.99996500064815281571653674 };
  double h1  [9] = { -1000000.00000983333333333167500, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, 180000000., 900., 1999999.99999900000000000008333, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { 2593443.30983634668503649973204, 24.4165296009966219663516399713, 34.9993528105726050481119337146, 24.4165296009966219663516399713, .555715790021874991452260024676e-5, .699987288416938420921616352611e-5, 34.9993528105726050481119337146, .699987288416938420921616352611e-5, -.936752127533144786938532535075e-4 };
  double hres[9] = { -3593443.30984618001836983140704, -23.4165296009971219663516399296, 1999965.00064618942739495197139, -23.4165296009971219663516399296, 179999999.999994442842099781250, 899.999993000127115830615790784, 1999965.00064618942739495197139, 899.999993000127115830615790784, .956752127533141453605199201908e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(3001000000.00000983333333333168, g1,h1), ad2(.949719344082326520363715033735e-4, g2,h2), adresMaple(3000999999.99991486139892509903, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 10.9999999999945000000000004583, -899.999999000000000000166666667, 2999.99999800000000000033333333 };
  double g2  [3] = { 54.0302279933706619037469757078, .108060432766192691811556183584e-4, .841470997775113055834235746812e-4 };
  double gres[3] = { -43.0302279933761619037469752495, -900.000009806043276619435847823, 2999.99991385290022248902774991 };
  double h1  [9] = { -.109999999999981666666666667583e-4, .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, -180., 900., -1.99999999999900000000000008333, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { -2.59344330983634668503649973204, 10.8060404358757440142925045679, 84.1471010742329605015969171995, 10.8060404358757440142925045679, .108060092808263428234153256935e-5, .168294225369014552999131602231e-4, 84.1471010742329605015969171995, .168294225369014552999131602231e-4, -.540302305868139717400936607443e-4 };
  double hres[9] = { 2.59343230983634668686983306537, -9.80604043587624401429250452624, -86.1471010742319605015969172828, -9.80604043587624401429250452624, -180.000001080600928082634282342, 899.999983170577463098544700087, -86.1471010742319605015969172828, 899.999983170577463098544700087, .560302305868136384067603274276e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(-2999.99998900000000000183333333, g1,h1), ad2(.540302292900923168219203182261e-4, g2,h2), adresMaple(-3000.00004303022929009415015525, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 9.99999999999599999999999991667, .900999999999999833333333333342e-3, 3000.00000000000199999999999967 };
  double g2  [3] = { 99.9999999999525934433098405134, .199999999999928407435251676964e-4, -.987032783450651599908150843007e-10 };
  double gres[3] = { -89.9999999999565934433098405967, .881000000000006992589808165646e-3, 3000.00000000010070327834506483 };
  double h1  [9] = { -.999999999999933333333333325000e-5, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, .180e-3, 900., .199999999999900000000000008333e-5, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { .259344330983634668503649973204e-5, 19.9999999999956814870503345595, -.974065566901469866482968344347e-4, 19.9999999999956814870503345595, .200000000000268365364515254367e-5, -.171592564748298035528761721984e-10, -.974065566901469866482968344347e-4, -.171592564748298035528761721984e-10, -.999999999999500000000000041667e-4 };
  double hres[9] = { -.125934433098356800183698329820e-4, -18.9999999999961814870503345179, .994065566901459866482968345180e-4, -18.9999999999961814870503345179, .177999999999997316346354847457e-3, 900.000000000017159256474829804, .994065566901459866482968345180e-4, 900.000000000017159256474829804, .101999999999949666666666670850e-3 };
  adreal<3,DO_HESS_TEST,double> ad1(.300999999999999933333333333325e-2, g1,h1), ad2(.999999999999512967216549223400e-4, g2,h2), adresMaple(.291000000000004803661167841091e-2, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 10.9999999999945000000000004583, 900.000000999999999999833333333, 3000.00000199999999999966666667 };
  double g2  [3] = { 54.0302331802572815764403457808, .108060489581063195148818459394e-4, -.841470971840679957470768896448e-4 };
  double gres[3] = { -43.0302331802627815764403453225, 899.999990193951041893513818451, 3000.00008614709718406766241375 };
  double h1  [9] = { -.109999999999981666666666667583e-4, .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, 180., 900., 1.99999999999900000000000008333, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { 2.59344330983634668503649973204, 10.8060517988498446817449597299, -84.1470958873463408289035471265, 10.8060517988498446817449597299, .108060829538992458726221386043e-5, -.168294168554144049661869326421e-4, -84.1470958873463408289035471265, -.168294168554144049661869326421e-4, -.540302305868139717400936607443e-4 };
  double hres[9] = { -2.59345430983634668320316639871, -9.80605179885034468174495968822, 86.1470958873453408289035472098, -9.80605179885034468174495968822, 179.999998919391704610075412738, 900.000016829416855414404966187, 86.1470958873453408289035472098, 900.000016829416855414404966187, .560302305868136384067603274276e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(3000.00001099999999999816666667, g1,h1), ad2(.540302318835356266582670032625e-4, g2,h2), adresMaple(2999.99995696976811646254000841, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 109.999999999945000000000004583, 9000.00000099999999999983333333, 3000.00001999999999999666666667 };
  double g2  [3] = { -83.9071269732121468624195444174, -.167814021740937973765461410516e-4, .544021123856586362586481087033e-4 };
  double gres[3] = { 193.907126973157146862419549000, 9000.00001778140217409363070988, 2999.99996559788761433803040803 };
  double h1  [9] = { -.109999999999981666666666667583e-3, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, 1800., 900., 19.9999999999900000000000008333, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { 25.9344330983634668503649973204, -16.7813737666585457079150031466, 54.4021136823802911768214512216, -16.7813737666585457079150031466, -.167810622161645337991432144030e-5, .108804250585309214349580670275e-4, 54.4021136823802911768214512216, .108804250585309214349580670275e-4, .839071529076452452258863947824e-4 };
  double hres[9] = { -25.9345430983634668320316639871, 17.7813737666580457079150031883, -34.4021136823902911768214503883, 17.7813737666580457079150031883, 1800.00000167810622161645337992, 899.999989119574941469078565042, -34.4021136823902911768214503883, 899.999989119574941469078565042, -.819071529076455785592197280991e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(30000.0001099999999999816666667, g1,h1), ad2(-.839071399404286960441529695999e-4, g2,h2), adresMaple(30000.0001939071399404103627109, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 540302846170.445585540654008380, 9000000000000000000.84147098481, 3000000000001682941.96961579301 };
  double g2  [3] = { 936750633035.328836542415841087, 4152694.72030135258206088432226, 349993502170.545703209677288723 };
  double gres[3] = { -396447786864.883251001761832707, 8999999999995847306.12116963223, 2999999650008180771.42391258334 };
  double h1  [9] = { -841471826278.881314549008974132, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18000000000000., 9000000000000., 1080604.61173627943480187321489, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { -1494497.81595039611669398835430, 6431885.18553641559024470357437, 349993502169.798454301702090664, 6431885.18553641559024470357437, -1703120.71271012938095213289330, 699989.283533051139298313157381, 349993502169.798454301702090664, 699989.283533051139298313157381, -936752127533.144786938532535075 };
  double hres[9] = { -841470331781.065364152892280144, -6431884.64523410972210498617343, -349992421565.186718022267288791, -6431884.64523410972210498617343, 18000001703120.7127101293809521, 8999999300010.71646694886070169, -349992421565.186718022267288791, 8999999300010.71646694886070169, 936752127534.827728908148328088 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000841471826278.88131, g1,h1), ad2(936751380284.236811740474188081, g2,h2), adresMaple(2999999999999904720445994.64450, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 540302.846170445585540654008380, -8999999999999.15852901519210349, 2999999999999999998.31705803038 };
  double g2  [3] = { 540302305869.634215216887003560, 1080602.33254581419973886503107, 841470984807.149257744527123572 };
  double gres[3] = { -540301765566.788044771301462906, -9000001080601.49107482939184235, 2999999158529015191.16780028586 };
  double h1  [9] = { -841471.826278881314549008974132, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -18000000., 9000000000000., -1.08060461173627943480187321489, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { 1.49449781595039611669398835430, 1080600.05335534896467585684725, 841470984806.402008836551925513, 1080600.05335534896467585684725, 2.78372719795066388204357998526, 1682944.24880625824836801282708, 841470984806.402008836551925513, 1682944.24880625824836801282708, -540302305868.139717400936607443 };
  double hres[9] = { -841473.320776697264945125668120, -1080599.51305304309653613944631, -841470984807.482613448288204948, -1080599.51305304309653613944631, -18000002.7837271979506638820436, 8999998317055.75119374175163199, -841470984807.482613448288204948, 8999998317055.75119374175163199, 540302305869.822659370552400456 };
  adreal<3,DO_HESS_TEST,double> ad1(-2999999999999158528.17372111869, g1,h1), ad2(540302305868.886966308911805501, g2,h2), adresMaple(-3000000540301464397.06068742761, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 540302.305868139717941238913311, 9000000.84147098480789650665250, 3000000000000000000.00000168294 };
  double g2  [3] = { 999999999999.499998505502225717, 2000000.00000127919046523514634, -1000000.74724874130853139168866 };
  double gres[3] = { -999999459697.194130365784284478, 7000000.84146970561743127150616, 3000000000001000000.74725042425 };
  double h1  [9] = { -841470.984807896507493973306438, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, 18.000000, 9000000000000., .108060461173627943480187321489e-5, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 2000000.00000355838093047020935, -1000001.49449764928372945003566, 2000000.00000355838093047020935, 1.99999829687641378561555284162, .27919046523539634151715256878, -1000001.49449764928372945003566, .27919046523539634151715256878, -999999999999.500000000000041667 };
  double hres[9] = { -841470.984806402009678022910321, -1999999.45970125251279075280841, 1000001.49449872988834118631509, -1999999.45970125251279075280841, 16.0000017031235862143844471584, 8999999999999.72080953476460366, 1000001.49449872988834118631509, 8999999999999.72080953476460366, 1000000000001.18294196961583468 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000841470.98480789650749397, g1,h1), ad2(999999999999.499999252751133692, g2,h2), adresMaple(2000000841471.48480864375636028, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 540302.846170445585540654008380, 9000000000000.84147098480789651, 3000000000000000001.68294196962 };
  double g2  [3] = { 540302305866.645219584986211326, 1080606.89092674466986488139871, -841470984808.643755560477519688 };
  double gres[3] = { -540301765563.799049139400670672, 8999998919393.95054424013803163, 3000000841470984810.32669753010 };
  double h1  [9] = { -841471.826278881314549008974132, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 18000000., 9000000000000., 1.08060461173627943480187321489, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { -1.49449781595039611669398835430, 1080609.17011720990492788958253, -841470984809.391004468452717747, 1080609.17011720990492788958253, -.62251797447810501243983355548, -1682939.69042532777824199645944, -841470984809.391004468452717747, -1682939.69042532777824199645944, -540302305868.139717400936607443 };
  double hres[9] = { -841470.331781065364152892280144, -1080608.62981490403678817218159, 841470984810.471609080188997181, -1080608.62981490403678817218159, 18000000.6225179744781050124398, 9000001682939.69042532777824199, 841470984810.471609080188997181, 9000001682939.69042532777824199, 540302305869.822659370552400456 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000841471.82627888131, g1,h1), ad2(540302305867.392468492961409385, g2,h2), adresMaple(2999999459698535604.43381038835, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 540356.336098726531372676701104, 90000000000000.8414709848078965, 3000000000000000016.82941969616 };
  double g2  [3] = { -839071529091.397430418367908991, -1678120.26624825255388764605746, 544021110888.622564496772463793 };
  double gres[3] = { 839072069447.733529144899281668, 90000001678121.1077192373617841, 2999999455978889128.20685519939 };
  double h1  [9] = { -841555.131906377296303167571862, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 180000000., 9000000000000., 10.8060461173627943480187321489, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { -14.9449781595039611669398835430, -1678097.47434360020325756421926, 544021110887.875315588797265734, -1678097.47434360020325756421926, -18.7093689202967493769347955994, 1088044.50096920486187250350752, 544021110887.875315588797265734, 1088044.50096920486187250350752, 839071529076.452452258863947824 };
  double hres[9] = { -841540.186928217792342000631978, 1678098.01464590607139728162020, -544021110877.069269471434471386, 1678098.01464590607139728162020, 180000018.709368920296749376935, 8999998911955.49903079513812749, -544021110877.069269471434471386, 8999998911955.49903079513812749, -839071529074.769510289248154811 };
  adreal<3,DO_HESS_TEST,double> ad1(30000000000000841555.1319063773, g1,h1), ad2(-839071529083.924941338615928407, g2,h2), adresMaple(30000000839072370639.0568477160, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 540302305867.599415095068467726, 9000000.84147098480789650665250, 1682938.96961579301330500464326 };
  double g2  [3] = { -6229629.96186748138888311229131, 6851035.76812526445559378399003, -2.76482194713851150889629712814 };
  double gres[3] = { 540308535497.561282576457350838, 2148965.07334572035230272266247, 1682941.73443774015181651353956 };
  double h1  [9] = { -841470984807.055035667694425123, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, -18000000., 9., 1080604.61173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -6229630.89861960892202789922984, 13702073.4097547839774771418571, -5.87963739644831596991024674306, 13702073.4097547839774771418571, -21339716.0164463798988711165774, 6.15105063728693361764805289354, -5.87963739644831596991024674306, 6.15105063728693361764805289354, -.936752127533144786938532535075 };
  double hres[9] = { -841464755176.156416058772397224, -13702072.8694524781093374244562, 1080610.49137367588311784312514, -13702072.8694524781093374244562, 3339716.01644637989887111657743, 2.84894936271306638235194710646, 1080610.49137367588311784312514, 2.84894936271306638235194710646, 2.61969409714893780024353717834 };
  adreal<3,DO_HESS_TEST,double> ad1(841467984807.055035667694425123, g1,h1), ad2(-3114814.51255767692786916267639, g2,h2), adresMaple(841471099621.567593344622294286, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 0., -8.15852901519210349334749767837, -4.68294196961579301330500464326 };
  double g2  [3] = { 6.76993320448774863942883583728, -7.93164225336579895668523108199, -2.27334446450190795436144729329 };
  double gres[3] = { -6.76993320448774863942883583728, -.22688676182630453666226659638, -2.40959750511388505894355734997 };
  double h1  [9] = { 0., .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., -1.08060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, -14.7826798949953184785685889491, -5.38815991381171241537539690821, -14.7826798949953184785685889491, 22.4203225016869143999625636694, 5.16809567201372650857835322384, -5.38815991381171241537539690821, 5.16809567201372650857835322384, -.540302305868139717400936607443 };
  double hres[9] = { -6.22963089861960892202789922984, 15.3229822008634581959695255565, 4.30755530207543298057352369332, 15.3229822008634581959695255565, -4.42032250168691439996256366939, 3.83190432798627349142164677616, 4.30755530207543298057352369332, 3.83190432798627349142164677616, 2.22324427548393273070594125070 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(3.65511775517794417841488622236, g2,h2), adresMaple(-.655117755177944178414886222363, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -.540302305867599415095068467726, .841479984807896506652502321630, -2.99999831705803038420698669500 };
  double g2  [3] = { .999993770368601380391078013768, -1.99999314896135837048047819997, -3.11481644930980446084728294825 };
  double gres[3] = { -1.54029607623620079548614648149, 2.84147313376925487713298052160, .114818132251774076640296253253 };
  double h1  [9] = { .841470984807055035667694425123, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, -.18e-4, 9., .108060461173627943480187321489e-5, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -.622963089861960892202789922984e-5, -1.99998629792371674096095631661, -6.22963189861960892186123256317, -1.99998629792371674096095631661, 1.99997866028111004936503492264, 6.85103964162951952155002453377, -6.22963189861960892186123256317, 6.85103964162951952155002453377, -.999999999999500000000000041667 };
  double hres[9] = { .841477214437953655276616453022, 2.54028860379185645836189292406, 6.22963297922422065814066736504, 2.54028860379185645836189292406, -1.99999666028111004936503492264, 2.14896035837048047844997546623, 6.22963297922422065814066736504, 2.14896035837048047844997546623, 2.68294196961529301330500468493 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841473984807055035667694425123, g1,h1), ad2(.999996885184050690195539027717, g2,h2), adresMaple(-1.84147086999110572586323345284, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 0., 9.84147098480789650665250232163, -1.31705803038420698669499535674 };
  double g2  [3] = { -5.68932859275146920462696262240, 5.77043302989324008708148465221, -3.95628643411770096766645193655 };
  double gres[3] = { 5.68932859275146920462696262240, 4.07103795491465641957101766942, 2.63922840373349398097145657981 };
  double h1  [9] = { 0., .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, -18., 9., 1.08060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -6.22963089861960892202789922984, 12.6214706715227596089648425193, -7.07110188342750542868040155147, 12.6214706715227596089648425193, -20.2591132782143555303588172396, 8.53397961124531253518836251036, -7.07110188342750542868040155147, 8.53397961124531253518836251036, -.540302305868139717400936607443 };
  double hres[9] = { 6.22963089861960892202789922984, -12.0811683656546198915639059119, 8.15170649516378486348227476636, -12.0811683656546198915639059119, 2.25911327821435553035881723961, .46602038875468746481163748964, 8.15170649516378486348227476636, .46602038875468746481163748964, 2.22324427548393273070594125070 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(-2.57451314344166474361301300748, g2,h2), adresMaple(-.425486856558335256386986992523, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 53.4899282809458320226927241369, 90.8414709848078965066525023216, 13.8294196961579301330500464326 };
  double g2  [3] = { -63.1353805152725416725378562462, 70.1885194744481001233513065666, -2.57079433842043464760920195307 };
  double gres[3] = { 116.625308796218373695230580383, 20.6529515103597963833011957550, 16.4002140345783647806592483856 };
  double h1  [9] = { -83.3056274959817541585977298414, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, -180., 9., 10.8060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -62.2963089861960892202789922984, 138.698895890743295342184885238, -5.68560978773023910862315156799, 138.698895890743295342184885238, -215.075321957659254556124632441, 5.76299541985077989507386254340, -5.68560978773023910862315156799, 5.76299541985077989507386254340, .839071529076452452258863947824 };
  double hres[9] = { -21.0093185097856649383187375430, -138.158593584875155624783948631, 16.4916559050930334566418837168, -138.158593584875155624783948631, 35.0753219576592545561246324406, 3.23700458014922010492613745660, 16.4916559050930334566418837168, 3.23700458014922010492613745660, .843870440539340561046140695436 };
  adreal<3,DO_HESS_TEST,double> ad1(53.3056274959817541585977298414, g1,h1), ad2(-31.9872260221744970623983600970, g2,h2), adresMaple(85.2928535181562512209960899384, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 540302305868.139717941238913311, .841479984807896506652502321630, 1682941.96961579301330500764326 };
  double g2  [3] = { 4.00000000000227008546086701147, 2000000.00000387350425506762290, .200000034999416883795961905099e-5 };
  double gres[3] = { 540302305864.139717941236643226, -1999999.15852388869635856097040, 1682941.96961379301295501347442 };
  double h1  [9] = { -841470984807.896507493973306438, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18.000000, .9e-11, 1080604.61173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { 4.00000000000133333333333386668, 4000000.00000587350425506895624, .400000034999483550462628598433e-5, 4000000.00000587350425506895624, 5.87350425507162290721040293683, 2.00000069998900434258590556863, .400000034999483550462628598433e-5, 2.00000069998900434258590556863, -.936752127533144786938532535075e-12 };
  double hres[9] = { -841470984811.896507493974639771, -3999999.45970356763611535155530, 1080604.61173227943445187837939, -3999999.45970356763611535155530, 12.1264957449283770927895970632, -2.00000069998000434258590556863, 1080604.61173227943445187837939, -2.00000069998000434258590556863, 1.68294196961672976543253778805 };
  adreal<3,DO_HESS_TEST,double> ad1(841470984807.896507493976306438, g1,h1), ad2(2.00000000000160341879420007813, g2,h2), adresMaple(841470984805.896507493974703019, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380, .841470984798896506652502321630, -1.68294196961579301030500464326 };
  double g2  [3] = { -.399999945969902746519361646574e-5, -1.99999891939738826372056653146, .200000084147165147456317358584e-5 };
  double gres[3] = { .540306846169905284568119201997, 2.84146990419628477037306885309, -1.68294396961663448195647920644 };
  double h1  [9] = { -.841471826278881314549008974132, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -.18e-4, .9e-11, -1.08060461173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { -.400000000000133333333333386668e-5, -3.99999891939938826372056786480, .400000084147231814122984051918e-5, -3.99999891939938826372056786480, 1.08060061173627942946853988155, 2.00000168294396961579301463833, .400000084147231814122984051918e-5, 2.00000168294396961579301463833, -.540302305868139717400936607443e-12 };
  double hres[9] = { -.841467826278881313215675640798, 4.54030122526752798112150447224, -1.08060861173712090712001444473, 4.54030122526752798112150447224, -1.08061861173627942946853988155, -2.00000168293496961579301463833, -1.08060861173712090712001444473, -2.00000168293496961579301463833, 1.68294196961633331561087278298 };
  adreal<3,DO_HESS_TEST,double> ad1(.841471826278881311549008974132, g1,h1), ad2(-.199999945969836079852694953240e-5, g2,h2), adresMaple(.841473826278341009909807501082, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380e-6, .841470984807896515652502321630, .168294196961879301330500464326e-5 };
  double g2  [3] = { .500000000000083333333333390835e-11, .400000000000100000000000141666e-5, .199999999999966666666666710001e-5 };
  double gres[3] = { .540297846170445584707320675046e-6, .841466984807896514652502321629, -.317058030380873653361662456747e-6 };
  double h1  [9] = { -.841471826278881314549008974132e-6, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .18e-10, .9e-11, .108060461173627943480187321489e-5, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-11, .600000000000300000000000275000e-5, .400000000000033333333333403335e-5, .600000000000300000000000275000e-5, 2.00000000000300000000000541666, 2.00000000000000000000000166666, .400000000000033333333333403335e-5, 2.00000000000000000000000166666, -.999999999999500000000000041667e-12 };
  double hres[9] = { -.841475826278881315882342307466e-6, .540296305868139714400936607440, -.291939538826405389853146081846e-5, .540296305868139714400936607440, -1.99999999998500000000000541666, -1.99999999999100000000000166666, -.291939538826405389853146081846e-5, -1.99999999999100000000000166666, 1.68294196961679301330500414326 };
  adreal<3,DO_HESS_TEST,double> ad1(.841471826278881317549008974132e-6, g1,h1), ad2(.300000000000016666666666697501e-11, g2,h2), adresMaple(.841468826278881317382342307465e-6, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380, .841470984816896506652502321630, 1.68294196961579301630500464326 };
  double g2  [3] = { .400000054030363920147305126762e-5, 2.00000108060661173627943613520, .199999915852968185877016028084e-5 };
  double gres[3] = { .540298846169905281901452535328, -1.15853009578971522962693381357, 1.68293996961663448662314587310 };
  double h1  [9] = { -.841471826278881314549008974132, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, .18e-4, .9e-11, 1.08060461173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-5, 4.00000108060861173627943746854, .399999915853034852543682721418e-5, 4.00000108060861173627943746854, 1.08060861173627944013520654823, 1.99999831706003038420698802833, .399999915853034852543682721418e-5, 1.99999831706003038420698802833, -.540302305868139717400936607443e-12 };
  double hres[9] = { -.841475826278881315882342307466, -3.45969877474047201887850086110, 1.08060061173712090445334777807, -3.45969877474047201887850086110, -1.08059061173627944013520654823, -1.99999831705103038420698802833, 1.08060061173712090445334777807, -1.99999831705103038420698802833, 1.68294196961633331561087278298 };
  adreal<3,DO_HESS_TEST,double> ad1(.841471826278881317549008974132, g1,h1), ad2(.200000054030297253480638433428e-5, g2,h2), adresMaple(.841469826278341014576474167748, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 54.0302311271162776082333781452, .841470984897896506652502321630, 16.8294196961579301360500464326 };
  double g2  [3] = { .399999991609418042568808864079e-4, 19.9999983218769418470951088156, .200000054402177755603648033809e-5 };
  double gres[3] = { 54.0301911271171166664291212644, -19.1585273369790453404426064940, 16.8294176961573861142724903961 };
  double h1  [9] = { -84.1470993222606354731467388155, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, .180e-3, .9e-11, 10.8060461173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-4, 39.9999983218969418470951221490, .400000054402244422270314727143e-5, 39.9999983218969418470951221490, -1.67810305815290485118439456227, 2.00000108804422177873962814283, .400000054402244422270314727143e-5, 2.00000108804422177873962814283, .839071529076452452258863947824e-12 };
  double hres[9] = { -84.1471393222606354864800721488, -39.4596960160288021296941855416, 10.8060421173622503255745094458, -39.4596960160288021296941855416, 1.67828305815290485118439456227, -2.00000108803522177873962814283, 10.8060421173622503255745094458, -2.00000108803522177873962814283, 1.68294196961495394177592819081 };
  adreal<3,DO_HESS_TEST,double> ad1(84.1470993222606355031467388155, g1,h1), ad2(.199999991609351375902142170745e-4, g2,h2), adresMaple(84.1470793222614745680091486013, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 540302305868.680019706804747160, 9000000.84147098480789650665250, 1682944.96961579301330500464326 };
  double g2  [3] = { 6229631.83537173645517268616837, 6851039.51513377458817293174417, 3.46480895148109741313160210170 };
  double gres[3] = { 540296076236.844647970349574474, 2148961.32633721021972357490833, 1682941.50480684153220759151166 };
  double h1  [9] = { -841470984808.737977637310218137, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18000000., 9., 1080604.61173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { 6229630.89861960892202789922984, 13702077.1567632941100562896113, 6.57962440079090187414555171662, 13702077.1567632941100562896113, 21339719.7634548900314502643316, 7.55102464597210542611866284066, 6.57962440079090187414555171662, 7.55102464597210542611866284066, -.936752127533144786938532535075 };
  double hres[9] = { -841477214439.636597246232246036, -13702076.6164609882419165722104, 1080598.03211187864389999906934, -13702076.6164609882419165722104, -3339719.76345489003145026433157, 1.44897535402789457388133715934, 1080598.03211187864389999906934, 1.44897535402789457388133715934, 2.61969409714893780024353717834 };
  adreal<3,DO_HESS_TEST,double> ad1(841473984808.737977637310218137, g1,h1), ad2(3114816.38606193199415873655345, g2,h2), adresMaple(841470869992.351915705316059400, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 1.08060461173627943480187321489, -8.15852901519210349334749767837, 1.31705803038420698669499535674 };
  double g2  [3] = { -5.68932859275146920462696262240, -5.77043302989324008708148465221, 3.95628643411770096766645193655 };
  double gres[3] = { 6.76993320448774863942883583729, -2.38809598529886340626601302616, -2.63922840373349398097145657981 };
  double h1  [9] = { -1.68294196961579301330500464326, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -18., 9., -1.08060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -6.22963089861960892202789922984, -12.6214706715227596089648425193, 7.07110188342750542868040155147, -12.6214706715227596089648425193, -20.2591132782143555303588172396, 8.53397961124531253518836251036, 7.07110188342750542868040155147, 8.53397961124531253518836251036, -.540302305868139717400936607443 };
  double hres[9] = { 4.54668892900381590872289458658, 13.1617729773908993263657791267, -8.15170649516378486348227476636, 13.1617729773908993263657791267, 2.25911327821435553035881723961, .46602038875468746481163748964, -8.15170649516378486348227476636, .46602038875468746481163748964, 2.22324427548393273070594125070 };
  adreal<3,DO_HESS_TEST,double> ad1(-1.31705803038420698669499535674, g1,h1), ad2(-2.57451314344166474361301300748, g2,h2), adresMaple(1.25745511305745775691801765074, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { .540302305868680019706804747160, .841479984807896506652502321630, 3.00000168294196961579301330500 };
  double g2  [3] = { 1.00000622963039861960892206957, 2.00000685103664162951952196669, 3.11481444930980446118061628159 };
  double gres[3] = { -.459703923761718599902117322406, -1.15852686622874512286701964506, -.114812766367834845387602976587 };
  double h1  [9] = { -.841470984808737977637310218137, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .18e-4, 9., .108060461173627943480187321489e-5, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { .622963089861960892202789922984e-5, 2.00001370207428325903904385005, 6.22962989861960892219456589651, 2.00001370207428325903904385005, 2.00002133971688995063496524402, 6.85103564162951952221669120043, 6.22962989861960892219456589651, 6.85103564162951952221669120043, -.999999999999500000000000041667 };
  double hres[9] = { -.841477214439636597246232246036, -1.45971139620614354163810724260, -6.22962881801499718591513109464, -1.45971139620614354163810724260, -2.00000333971688995063496524402, 2.14896435837048047778330879957, -6.22962881801499718591513109464, 2.14896435837048047778330879957, 2.68294196961529301330500468493 };
  adreal<3,DO_HESS_TEST,double> ad1(.841473984808737977637310218137, g1,h1), ad2(1.00000311481494930980446105562, g2,h2), adresMaple(-.158529130006211332167150837480, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 1.08060461173627943480187321489, 9.84147098480789650665250232163, 4.68294196961579301330500464326 };
  double g2  [3] = { 6.76993320448774863942883583728, 7.93164225336579895668523108199, 2.27334446450190795436144729329 };
  double gres[3] = { -5.68932859275146920462696262240, 1.90982873144209754996727123964, 2.40959750511388505894355734997 };
  double h1  [9] = { -1.68294196961579301330500464326, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., 1.08060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, 14.7826798949953184785685889491, 5.38815991381171241537539690821, 14.7826798949953184785685889491, 22.4203225016869143999625636694, 5.16809567201372650857835322384, 5.38815991381171241537539690821, 5.16809567201372650857835322384, -.540302305868139717400936607443 };
  double hres[9] = { -7.91257286823540193533290387310, -14.2423775891271787611676523416, -4.30755530207543298057352369332, -14.2423775891271787611676523416, -4.42032250168691439996256366939, 3.83190432798627349142164677616, -4.30755530207543298057352369332, 3.83190432798627349142164677616, 2.22324427548393273070594125070 };
  adreal<3,DO_HESS_TEST,double> ad1(4.68294196961579301330500464326, g1,h1), ad2(3.65511775517794417841488622236, g2,h2), adresMaple(1.02782421443784883489011842090, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 54.5705328926821114574945973517, 90.8414709848078965066525023216, 19.8294196961579301330500464326 };
  double g2  [3] = { 61.4572374571196367680201283506, 66.8322333581422903143158507754, 3.65883656019917427441869727677 };
  double gres[3] = { -6.88670456443752531052553099888, 24.0092376266656061923366515462, 16.1705831359587558586313491558 };
  double h1  [9] = { -84.9885694655975471719027344846, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 180., 9., 10.8060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { 62.2963089861960892202789922984, 135.342609774437485533149429446, 6.77365200950897873543264689169, 135.342609774437485533149429446, 211.719035841353444747089176649, 7.93907986340825914869285319080, 6.77365200950897873543264689169, 7.93907986340825914869285319080, .839071529076452452258863947824 };
  double hres[9] = { -147.284878451793636392181726783, -134.802307468569345815748492839, 4.03239410785381561258608525721, -134.802307468569345815748492839, -31.7190358413534447470891766494, 1.06092013659174085130714680920, 4.03239410785381561258608525721, 1.06092013659174085130714680920, .843870440539340561046140695436 };
  adreal<3,DO_HESS_TEST,double> ad1(114.988569465597547171902734485, g1,h1), ad2(30.3090829640215921578806322014, g2,h2), adresMaple(84.6794865015759550140221022836, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 540302305873.542740459618004617, 900000000.841470984807896506653, 1685941.96961579301330500464326 };
  double g2  [3] = { 2593536.98504909999951519358529, 2840762.26020941377668623340556, 36.2960718720474685542834985441 };
  double gres[3] = { 540299712336.557691359618489423, 897159238.581261571031210273247, 1685905.67354392096583645035976 };
  double h1  [9] = { -841470984816.311216500581286697, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 180000000., 900., 1080604.61173627943480187321489, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { 2593443.30983634668503649973204, 5681505.78537627689047672804046, 37.5927935269656418968017484101, 5681505.78537627689047672804046, 3683655.51865671540693510905368, 9.84061356859272215614354437053, 37.5927935269656418968017484101, 9.84061356859272215614354437053, -93.6752127533144786938532535075 };
  double hres[9] = { -841473578259.621052847266323197, -5681505.24507397102233701063952, 1080567.01894275246915997641314, -5681505.24507397102233701063952, 176316344.481343284593064890946, 890.159386431407277843856455629, 1080567.01894275246915997641314, 890.159386431407277843856455629, 95.3581547229302717071582581508 };
  adreal<3,DO_HESS_TEST,double> ad1(844470984816.311216500581286697, g1,h1), ad2(1296815.33013092665699694371927, g2,h2), adresMaple(844469688000.981085573924289753, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 5.94332536454953689141030268187, -899.158529015192103493347497678, 2998.31705803038420698669499536 };
  double g2  [3] = { 51.4367872769776250550571610123, 7.96530259219593123422823751399, 85.4438201357078240077684820290 };
  double gres[3] = { -45.4934619124280881636468583304, -907.123831607388034727575735192, 2912.87323789467638297892651333 };
  double h1  [9] = { -9.25618083288686157317752553793, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -180., 900., -1.08060461173627943480187321489, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { -2.59344330983634668503649973204, 5.12455906702906812043774287909, 86.7405417906259973502867318950, 5.12455906702906812043774287909, -2.60304903341618090584366196172, 19.6701632213247932468405410675, 86.7405417906259973502867318950, 19.6701632213247932468405410675, -54.0302305868139717400936607443 };
  double hres[9] = { -6.66273752305051488814102580589, -4.58425676116092840303680627165, -87.8211464023622767850886051099, -4.58425676116092840303680627165, -177.396950966583819094156338038, 880.329836778675206753159458932, -87.8211464023622767850886051099, 880.329836778675206753159458932, 55.7131725564297647533986653876 };
  adreal<3,DO_HESS_TEST,double> ad1(-2990.74381916711313842682247446, g1,h1), ad2(52.7335089318957983975754108783, g2,h2), adresMaple(-3043.47732809900893682439788533, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 5.40302305868193747631523421415, .842370984807896506652502321630, 3000.00000168294196961579301331 };
  double g2  [3] = { 100.000002593393309836346689203, 20.0000028407335251668631146238, 1.29662165491817335918491653269 };
  double gres[3] = { -94.5969795347113723600314549890, -19.1576318559256286602106123022, 2998.70338002802379625660809677 };
  double h1  [9] = { -8.41470984807980653750983111281, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .180e-3, 900., .108060461173627943480187321489e-5, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { .259344330983634668503649973204e-5, 20.0000056814770503337262284143, 2.59334330983634670170316639871, 20.0000056814770503337262284143, 2.00000368365264515246034072887, 2.84072352516686311712382796824, 2.59334330983634670170316639871, 2.84072352516686311712382796824, -99.9999999999500000000000041667 };
  double hres[9] = { -8.41471244152311637385651614931, -19.4597033756089106163252918068, -2.59334222923173496542373159684, -19.4597033756089106163252918068, -1.99982368365264515246034072887, 897.159276474833136882876172032, -2.59334222923173496542373159684, 897.159276474833136882876172032, 101.682941969565793013305008810 };
  adreal<3,DO_HESS_TEST,double> ad1(8.41770984807980653750983111281, g1,h1), ad2(100.000001296671654918173346685, g2,h2), adresMaple(-91.5822914485918483806635155721, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 5.94332536454953689141030268187, 900.841470984807896506652502322, 3001.68294196961579301330500464 };
  double g2  [3] = { 56.6236738966503184251301604763, 13.6467896425296574618092267838, -82.8503768258714773227319822970 };
  double gres[3] = { -50.6803485321007815337198577944, 887.194681342278239044843275538, 3084.53331879548727033603698694 };
  double h1  [9] = { -9.25618083288686157317752553793, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 180., 900., 1.08060461173627943480187321489, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { 2.59344330983634668503649973204, 16.4875331676965205755997214187, -81.5536551709533039802137324310, 16.4875331676965205755997214187, 4.76425825688873977544740839150, -13.9886761709910670192595517977, -81.5536551709533039802137324310, -13.9886761709910670192595517977, -54.0302305868139717400936607443 };
  double hres[9] = { -11.8496241427232082582140252700, -15.9472308618283808581987848112, 82.6342597826895834150156056458, -15.9472308618283808581987848112, 175.235741743111260224552591608, 913.988676170991067019259551798, 82.6342597826895834150156056458, 913.988676170991067019259551798, 55.7131725564297647533986653876 };
  adreal<3,DO_HESS_TEST,double> ad1(3009.25618083288686157317752554, g1,h1), ad2(55.3269522417321450826119106103, g2,h2), adresMaple(2953.92922859115471649056561493, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 59.4332536454953689141030268187, 9000.84147098480789650665250232, 3016.82941969615793013305004643 };
  double g2  [3] = { -57.9727198092817783755213974620, 11.6260046701395820927276673926, 55.6988327438551546829930160511 };
  double gres[3] = { 117.405973454777147289624424281, 8989.21546631466831441392483493, 2961.13058695230277545005703037 };
  double h1  [9] = { -92.5618083288686157317752553793, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 1800., 900., 10.8060461173627943480187321489, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { 25.9344330983634668503649973204, 40.0334399218082132306326137416, 56.9955543987733280255112659171, 40.0334399218082132306326137416, 35.1583933933716985019376238704, 13.7211657429542593818854478719, 56.9955543987733280255112659171, 13.7211657429542593818854478719, 83.9071529076452452258863947824 };
  double hres[9] = { -118.496241427232082582140252700, -39.4931376159400735132316771342, -46.1895082814105336774925337682, -39.4931376159400735132316771342, 1764.84160660662830149806237613, 886.278834257045740618114552128, -46.1895082814105336774925337682, 886.278834257045740618114552128, -82.2242109380294522125813901391 };
  adreal<3,DO_HESS_TEST,double> ad1(30092.5618083288686157317752554, g1,h1), ad2(-70.9399363584635118007038961222, g2,h2), adresMaple(30163.5017446873321275324791515, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -839072368147.981528711316206688, 8999999999999999999.45597888911, 2999999999998911957.77822126037 };
  double g2  [3] = { 936737182554.985282977365595191, 246654089.074169196557152575912, 3499935021638.20463037900506198 };
  double gres[3] = { -1775809550702.96681168868180188, 8999999999753345910.38180969255, 2999996500063890319.57359088137 };
  double h1  [9] = { 544021654910.480702774561066599, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, 18000000000000., 9000000000000., -1678143.05815290490451772789565, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { -1494497.81595039611669398835430, 47457313.5597675497375534501124, 349993502156.347973958148525614, 47457313.5597675497375534501124, -170312239.886395894061274938266, 7000097.96247238254865386811755, 349993502156.347973958148525614, 7000097.96247238254865386811755, -9367521275331.44786938532535075 };
  double hres[9] = { 544023149408.296653170677760587, -47457314.3988390788140059023712, -349995180299.406126863053043342, -47457314.3988390788140059023712, 18000170312239.8863958940612750, 8999992999902.03752761745134613, -349995180299.406126863053043342, 8999992999902.03752761745134613, 9367521275330.35982716354661112 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999455978345089.51930, g1,h1), ad2(9367446550440.65034957949065133, g2,h2), adresMaple(2999999999990088531794648.86895, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -839072.368147981528711316206688, -9000000000000.54402111088936981, 3000000000000000001.08804222178 };
  double g2  [3] = { 540302305883.084695560440568610, 10805818.1983162708417179137670, 8414709848004.24017572750341047 };
  double gres[3] = { -540303144955.452843541969279926, -9000010805818.74233738173108772, 2999991585290151996.84786649428 };
  double h1  [9] = { 544021.654910480702774561066599, -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, -18000000., 9000000000000., 1.67814305815290490451772789565, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { 1.49449781595039611669398835430, 1080559.02792697473354170953850, 841470984792.951528492998360463, 1080559.02792697473354170953850, 181.118304738801239072189409186, 16829647.6152044536393508648145, 841470984792.951528492998360463, 16829647.6152044536393508648145, -5403023058681.39717400936607443 };
  double hres[9] = { 544020.160412664752378444372611, -1080559.86699850380999416179737, -841470984791.273385434845455559, -1080559.86699850380999416179737, -18000181.1183047388012390721894, 8999983170352.38479554636064913, -841470984791.273385434845455559, 8999983170352.38479554636064913, 5403023058680.30913178758733480 };
  adreal<3,DO_HESS_TEST,double> ad1(-3000000000000544021.65491048070, g1,h1), ad2(5403023058756.12206480688588026, g2,h2), adresMaple(-3000005403023602777.77697528759, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -839071.529076452453097935476900, 8999999.45597888911063018659525, 2999999999999999999.99999891196 };
  double g2  [3] = { 999999999999.499985055021882163, 20000000.0002179190465235071341, -10000074.7248891308531391681161 };
  double gres[3] = { -1000000839071.02906150747498010, -11000000.5442390299358933205389, 3000000000010000074.72488804281 };
  double h1  [9] = { 544021.110889369813948768772740, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, 18.000000, 9000000000000., -.167814305815290490451772789565e-5, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 2000000.00004458380930470134349, -1000014.94497799283729450028155, 2000000.00004458380930470134349, 19.9998296877313785615552766626, 207.919046523509634151715258378, -1000014.94497799283729450028155, 207.919046523509634151715258378, -9999999999995.00000000000041667 };
  double hres[9] = { 544021.110890864311764719168857, -2000000.83911611288575715360236, 1000014.94497631469423634737665, -2000000.83911611288575715360236, -1.9998296877313785615552766626, 8999999999792.08095347649036585, 1000014.94497631469423634737665, 8999999999792.08095347649036585, 9999999999993.91195777822167704 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999455978.88911063018605123, g1,h1), ad2(9999999999994.99992527510961915, g2,h2), adresMaple(-7000000544016.11081464492356792, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -839072.368147981528711316206688, 8999999999999.45597888911063019, 2999999999999999998.91195777822 };
  double g2  [3] = { 540302305853.194739241432646276, 10806274.0364093178543195505308, -8414709848153.68995732254302213 };
  double gres[3] = { -540303144925.562887222961357592, 8999989193725.41956957125631064, 3000008414709848152.60191510076 };
  double h1  [9] = { 544021.654910480702774561066599, -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, 18000000., 9000000000000., -1.67814305815290490451772789565, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { -1.49449781595039611669398835430, 1080650.19554558413606203689128, -841470984822.841484812006282797, 1080650.19554558413606203689128, -159.506212504075650376151944888, -16829191.7771114066267492280507, -841470984822.841484812006282797, -16829191.7771114066267492280507, -5403023058681.39717400936607443 };
  double hres[9] = { 544023.149408296653170677760587, -1080651.03461711321251448915014, 841470984821.163341753853377892, -1080651.03461711321251448915014, 18000159.5062125040756503761520, 9000016829191.77711140662674923, 841470984821.163341753853377892, 9000016829191.77711140662674923, 5403023058680.30913178758733480 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999455978.34508951930, g1,h1), ad2(5403023058606.67228321184626860, g2,h2), adresMaple(2999994596976397371.67280630745, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -839155.436229360097504089834219, 89999999999999.4559788891106302, 2999999999999999989.11957778221 };
  double g2  [3] = { -839071529225.902233853903559493, -16779151.3910638139821690951372, 5440211108818.97324324995681268 };
  double gres[3] = { 839070690070.466004493806055403, 90000016779150.8470427030927993, 2999994559788891170.14633453226 };
  double h1  [9] = { 544075.513000458750386088136617, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, 180000000., 9000000000000., -16.7814305815290490451772789565, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { -14.9449781595039611669398835430, -1677687.22005985789191609113180, 544021110874.424835245243700684, -1677687.22005985789191609113180, -1719.90401679591349628688404933, 10880650.1368339197743957716189, 544021110874.424835245243700684, 10880650.1368339197743957716189, 8390715290764.52452258863947824 };
  double hres[9] = { 544090.457978618254347255076501, 1677686.38098832881546363887293, -544021110891.206265826772749729, 1677686.38098832881546363887293, 180001719.904016795913496286884, 8999989119349.86316608022560423, -544021110891.206265826772749729, 8999989119349.86316608022560423, -8390715290765.61256481041821787 };
  adreal<3,DO_HESS_TEST,double> ad1(29999999999999455924.4869995412, g1,h1), ad2(-8390715291511.77343056383753659, g2,h2), adresMaple(30000008390714747436.2604301050, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -839071529075.613380729787495372, 8999999.45597888911063018659525, -1088045.22177873962680949532370 };
  double g2  [3] = { -62296308.0494439616871342053599, 685103745.427909401525440047939, -307.981609909267516580218436624 };
  double gres[3] = { -839009232767.563936768100361167, -676103745.971930512414809861344, -1087737.24016883035929291510526 };
  double h1  [9] = { 544021110888.825792293858292038, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, -18000000., 9., -1678143.05815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -6229630.89861960892202789922984, 137020750.959086135371377583465, -61.9463154840247962681613398116, 137020750.959086135371377583465, -2133971770.26002094585317330668, 678.103894119526093145982736974, -61.9463154840247962681613398116, 678.103894119526093145982736974, -9.36752127533144786938532535075 };
  double hres[9] = { 544027340519.724411902780319937, -137020751.798157664447830035724, -1678081.11183742087972145973431, -137020751.798157664447830035724, 2115971770.26002094585317330668, -669.103894119526093145982736974, -1678081.11183742087972145973431, -669.103894119526093145982736974, 8.27947905355270824257583002705 };
  adreal<3,DO_HESS_TEST,double> ad1(-544024110888.825792293858292038, g1,h1), ad2(-311481535.563459170769947092107, g2,h2), adresMaple(-543712629353.262333123088344946, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 0., -9.54402111088936981340474766185, -1.91195777822126037319050467630 };
  double g2  [3] = { 62.8366112920642289376799289058, -695.909810280314746536354518859, -303.066835082901481034869938276 };
  double gres[3] = { -62.8366112920642289376799289058, 686.365789169425376722949771197, 301.154877304680220661679433600 };
  double h1  [9] = { 0., -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, 18., 9., 1.67814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { 6.22963089861960892202789922984, -138.101357444326669872469030557, -61.4548380013881927136264899768, -138.101357444326669872469030557, 2144.77783511242629086408777760, 668.274344466794022055285740277, -61.4548380013881927136264899768, 668.274344466794022055285740277, -5.40302305868139717400936607443 };
  double hres[9] = { -6.22963089861960892202789922984, 137.262285915250217420210166609, 63.1329810595410976181442178724, 137.262285915250217420210166609, -2126.77783511242629086408777760, -659.274344466794022055285740277, 63.1329810595410976181442178724, -659.274344466794022055285740277, 4.31498083690265754719987075073 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(316.884567989661843275404327566, g2,h2), adresMaple(-313.884567989661843275404327566, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { .839071529075613380729787495372, -.544012110889369813404747661851, -3.00000108804222177873962680950 };
  double g2  [3] = { .999937703690513803910779762675, -19.9993148962258370480478124975, -311.481554930980446099728294825 };
  double gres[3] = { -.160866174614900423180992267303, 19.4553027853364672346430648357, 308.481553842938224320988668015 };
  double h1  [9] = { -.544021110888825792293858292038, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, -.18e-4, 9., -.167814305815290490451772789565e-5, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -.622963089861960892202789922984e-5, -1.99986297924616740960956241617, -62.2963099861960892201123256317, -1.99986297924616740960956241617, 19.9978660282010049365034847643, 685.103784162951952185002453377, -62.2963099861960892201123256317, 685.103784162951952185002453377, -9.99999999999500000000000041667 };
  double hres[9] = { -.544014881257927172684936264139, 1.16079145016971495735069846835, 62.2963083080530310672074211140, 1.16079145016971495735069846835, -19.9978840282010049365034847643, -676.103784162951952185002453377, 62.2963083080530310672074211140, -676.103784162951952185002453377, 8.91195777821626037319050509297 };
  adreal<3,DO_HESS_TEST,double> ad1(.544018110888825792293858292038, g1,h1), ad2(9.99968851845006901955389902171, g2,h2), adresMaple(-9.45567040756124322726004072967, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { 0., 8.45597888911063018659525233815, -4.08804222177873962680949532370 };
  double g2  [3] = { -61.7560066803279495028780556910, 674.297718045589157840317054561, -319.896254779059411167919984708 };
  double gres[3] = { 61.7560066803279495028780556910, -665.841739156478527653721802223, 315.808212557280671541110489384 };
  double h1  [9] = { 0., -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, -18., 9., -1.67814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -6.22963089861960892202789922984, 135.940148220854111002865284127, -63.1377799710039857269314946200, 135.940148220854111002865284127, -2123.16574287770070216805031330, 701.933183859109882321385833143, -63.1377799710039857269314946200, 701.933183859109882321385833143, -5.40302305868139717400936607443 };
  double hres[9] = { 6.22963089861960892202789922984, -136.779219749930563455124148075, 61.4596369128510808224137667244, -136.779219749930563455124148075, 2105.16574287770070216805031330, -692.933183859109882321385833143, 61.4596369128510808224137667244, -692.933183859109882321385833143, 4.31498083690265754719987075073 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(-306.078521872299048927385595418, g2,h2), adresMaple(303.078521872299048927385595418, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -83.0680813785687927736275308346, 89.4559788891106301865952523381, -13.8804222177873962680949532370 };
  double g2  [3] = { -623.802161391037344655048786932, 6867.81907221104857092853514606, -306.041333822086747967347484873 };
  double gres[3] = { 540.734080012468551881421256097, -6778.36309332193794074193989372, 292.160911604299351699252531636 };
  double h1  [9] = { 53.8580899780476115270700185232, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, -180., 9., -16.7814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -62.2963089861960892202789922984, 1371.88567138405680928118930132, -61.7522878753067194068742446365, 1371.88567138405680928118930132, -21356.4993205321640142058677335, 674.223341945164555920240833473, -61.7522878753067194068742446365, 674.223341945164555920240833473, 8.39071529076452452258863947824 };
  double hres[9] = { 116.154398964243700747349010822, -1372.72474291313326173344816526, 44.9708572937776703616969656800, -1372.72474291313326173344816526, 21176.4993205321640142058677335, -665.223341945164555920240833473, 44.9708572937776703616969656800, -665.223341945164555920240833473, -9.47875751254326414939813480194 };
  adreal<3,DO_HESS_TEST,double> ad1(-83.8580899780476115270700185232, g1,h1), ad2(-3123.20616460056898553653825440, g2,h2), adresMaple(3039.34807462252137400946823588, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -839071529076.452453097935476900, -.544012110889369813404747661851, -1088042.22177873962680949232370 };
  double g2  [3] = { 40.0000000000142700854608718116, 200000000.000218735042550796229, .200000003500001688379596214511e-3 };
  double gres[3] = { -839071529116.452453097949746985, -200000000.544230845931920609634, -1088042.22197873963030949401208 };
  double h1  [9] = { 544021110889.369813948768772740, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, 18.000000, .9e-11, -1678143.05815290490451772789565, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { 4.00000000000133333333333386668, 40000000.0000418735042550929563, .400000003500068355046262907845e-4, 40000000.0000418735042550929563, 418.735042551196229072104437370, 200.000007000070043425859175686, .400000003500068355046262907845e-4, 200.000007000070043425859175686, -.936752127533144786938532535075e-11 };
  double hres[9] = { 544021110885.369813948767439407, -40000000.8391134025807075452152, -1678143.05819290490486773473115, -40000000.8391134025807075452152, -400.735042551196229072104437370, -200.000007000061043425859175686, -1678143.05819290490486773473115, -200.000007000061043425859175686, -1.08804222176937210553416387583 };
  adreal<3,DO_HESS_TEST,double> ad1(-544021110889.369813948765772740, g1,h1), ad2(200.000000000076034187942024782, g2,h2), adresMaple(-544021111089.369813948841806928, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -.839072368147981528711316206688, -.544021110898369813404747661851, 1.08804222177873962980949532370 };
  double g2  [3] = { -.399999994597110274651936212659e-4, -199.999989194153882637205785314, .200000008414776514745631759859e-3 };
  double gres[3] = { -.839032368148521817683851013066, 199.455968083255512823801037652, 1.08784222177032485329474969194 };
  double h1  [9] = { .544021654910480702774561066599, -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, -.18e-4, .9e-11, 1.67814305815290490451772789565, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { -.400000000000133333333333386668e-5, -39.9999989194353882637205918648, .400000008414843181412298453193e-4, -39.9999989194353882637205918648, 10.8056461173627938146853988151, 200.000016829619696157930266383, .400000008414843181412298453193e-4, 200.000016829619696157930266383, -.540302305868139717400936607443e-11 };
  double hres[9] = { .544025654910480704107894399933, 39.1609273903589358114617279170, 1.67810305815206342019958666580, 39.1609273903589358114617279170, -10.8056641173627938146853988151, -200.000016829610696157930266383, 1.67810305815206342019958666580, -200.000016829610696157930266383, -1.08804222177333660375081392653 };
  adreal<3,DO_HESS_TEST,double> ad1(-.544021654910480705774561066599, g1,h1), ad2(-.199999994597043607985269519325e-3, g2,h2), adresMaple(-.543821654915883662166575797080, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -.839072368147981528711316206688e-6, -.544021110889369804404747661851, -.108804222177573962680949532370e-5 };
  double g2  [3] = { .410000000000128333333333387085e-10, .220000000000190000000000134166e-3, .200000000000056666666666695001e-3 };
  double gres[3] = { -.839113368147981541544649540027e-6, -.544241110889369994404747661985, -.201088042221832406293476190325e-3 };
  double h1  [9] = { .544021654910480702774561066599e-6, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, .18e-10, .9e-11, -.167814305815290490451772789565e-5, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { .400000000000133333333333386668e-11, .420000000000390000000000267500e-4, .400000000000123333333333388335e-4, .420000000000390000000000267500e-4, 20.0000000003900000000005341666, 200.000000000180000000000136666, .400000000000123333333333388335e-4, 200.000000000180000000000136666, -.999999999999500000000000041667e-11 };
  double hres[9] = { .544017654910480701441227733265e-6, -.839113529076452491258863947851, -.416781430581652382378510667291e-4, -.839113529076452491258863947851, -20.0000000003720000000005341666, -200.000000000171000000000136666, -.416781430581652382378510667291e-4, -200.000000000171000000000136666, -1.08804222176873962680950032370 };
  adreal<3,DO_HESS_TEST,double> ad1(-.544021654910480699774561066599e-6, g1,h1), ad2(.210000000000061666666666693751e-9, g2,h2), adresMaple(-.544231654910480761441227733292e-6, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -.839072368147981528711316206688, -.544021110880369813404747661851, -1.08804222177873962380949532370 };
  double g2  [3] = { .400000005403156392014730560677e-4, 200.000010806246117362794481352, .199999991585356818587701626809e-3 };
  double gres[3] = { -.839112368148521844350517679744, -200.544031917126487176199229014, -1.08824222177032498062808302532 };
  double h1  [9] = { .544021654910480702774561066599, -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, .18e-4, .9e-11, -1.67814305815290490451772789565, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { .400000000000133333333333386668e-5, 40.0000010806446117362794614686, .399999991585423485254368320143e-4, 40.0000010806446117362794614686, 10.8064461173627948813520654827, 199.999983170780303842070000283, .399999991585423485254368320143e-4, 199.999983170780303842070000283, -.540302305868139717400936607443e-11 };
  double hres[9] = { .544017654910480701441227733265, -40.8390726097210641885383254164, -1.67818305815206344686625333248, -40.8390726097210641885383254164, -10.8064281173627948813520654827, -199.999983170771303842070000283, -1.67818305815206344686625333248, -199.999983170771303842070000283, -1.08804222177333660375081392653 };
  adreal<3,DO_HESS_TEST,double> ad1(-.544021654910480699774561066599, g1,h1), ad2(.200000005403089725348063867343e-3, g2,h2), adresMaple(-.544221654915883789499909130466, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -83.9071537467167743023388470413, -.544021110799369813404747661851, -10.8804222177873962650949532370 };
  double g2  [3] = { .399999999161061804256880934409e-3, 1999.99998322056941847095228815, .200000005440277775560364827381e-3 };
  double gres[3] = { -83.9075537467159353641431039222, -2000.54400433136878828435703581, -10.8806222177928365428705136019 };
  double h1  [9] = { 54.4021116329580922298445795898, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, .180e-3, .9e-11, -16.7814305815290490451772789565, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { .400000000000133333333333386668e-4, 399.999998322256941847095362149, .400000005440344442227031520715e-4, 399.999998322256941847095362149, -16.7774305815290437118439456186, 200.000010880622217787396401428, .400000005440344442227031520715e-4, 200.000010880622217787396401428, .839071529076452452258863947824e-11 };
  double hres[9] = { 54.4020716329580922165112462565, -400.839069851333394299354226097, -16.7814705815295930796215016596, -400.839069851333394299354226097, 16.7776105815290437118439456186, -200.000010880613217787396401428, -16.7814705815295930796215016596, -200.000010880613217787396401428, -1.08804222178713034210025984822 };
  adreal<3,DO_HESS_TEST,double> ad1(-54.4021116329580921998445795898, g1,h1), ad2(.199999999160995137590214241075e-2, g2,h2), adresMaple(-54.4041116329497021512204817322, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -839071529077.291523787940400276, 8999999.45597888911063018659525, -1088039.22177873962680949532370 };
  double g2  [3] = { 62296309.9229482167534237792369, 685103782.897994502851231525481, 314.981479952693375622571486360 };
  double gres[3] = { -839133825387.214472004693824055, -676103783.442015613740601338886, -1088354.20325869232018511789518 };
  double h1  [9] = { 544021110889.913834515637031664, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, 18000000., 9., -1678143.05815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { 6229630.89861960892202789922984, 137020754.706094645503956731219, 62.6463024883673821723966447852, 137020754.706094645503956731219, 2133971807.73010604717896478422, 692.103634206377811230688836446, 62.6463024883673821723966447852, 692.103634206377811230688836446, -9.36752127533144786938532535075 };
  double hres[9] = { 544014881259.015214906715003765, -137020755.545166174580409183478, -1678205.70445539327189990029229, -137020755.545166174580409183478, -2115971807.73010604717896478422, -683.103634206377811230688836446, -1678205.70445539327189990029229, -683.103634206377811230688836446, 8.27947905355270824257583002705 };
  adreal<3,DO_HESS_TEST,double> ad1(-544018110889.913834515637031664, g1,h1), ad2(311481554.298501721432842830877, g2,h2), adresMaple(-544329592444.212336237069874494, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -1.67814305815290490451772789565, -9.54402111088936981340474766185, 4.08804222177873962680949532370 };
  double g2  [3] = { -61.7560066803279495028780556910, -674.297718045589157840317054561, 319.896254779059411167919984708 };
  double gres[3] = { 60.0778636221750445983603277954, 664.753696934699788026912306899, -315.808212557280671541110489384 };
  double h1  [9] = { 1.08804222177873962680949532370, -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, -18., 9., 1.67814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -6.22963089861960892202789922984, -135.940148220854111002865284127, 63.1377799710039857269314946200, -135.940148220854111002865284127, -2123.16574287770070216805031330, 701.933183859109882321385833143, 63.1377799710039857269314946200, 701.933183859109882321385833143, -5.40302305868139717400936607443 };
  double hres[9] = { 7.31767312039834854883739455354, 135.101076691777658550606420179, -61.4596369128510808224137667244, 135.101076691777658550606420179, 2105.16574287770070216805031330, -692.933183859109882321385833143, -61.4596369128510808224137667244, -692.933183859109882321385833143, 4.31498083690265754719987075073 };
  adreal<3,DO_HESS_TEST,double> ad1(-4.08804222177873962680949532370, g1,h1), ad2(-306.078521872299048927385595418, g2,h2), adresMaple(301.990479650520309300576100094, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -.839071529077291523787940400276, -.544012110889369813404747661851, 2.99999891195777822126037319050 };
  double g2  [3] = { 1.00006229630848619608922032066, 20.0006851037541629519521891691, 311.481534930980446103061628159 };
  double gres[3] = { -1.83913382538577771987716072094, -20.5446972146435327653569368309, -308.481536019022667881801254969 };
  double h1  [9] = { .544021110889913834515637031664, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, .18e-4, 9., -.167814305815290490451772789565e-5, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { .622963089861960892202789922984e-5, 2.00013702075183259039043775049, 62.2963079861960892204456589651, 2.00013702075183259039043775049, 20.0021339717789950634965169023, 685.103744162951952191669120043, 62.2963079861960892204456589651, 685.103744162951952191669120043, -9.99999999999500000000000041667 };
  double hres[9] = { .544014881259015214906715003765, -2.83920854982828504264930169831, -62.2963096643391473733505634828, -2.83920854982828504264930169831, -20.0021159717789950634965169023, -676.103744162951952191669120043, -62.2963096643391473733505634828, -676.103744162951952191669120043, 8.91195777821626037319050509297 };
  adreal<3,DO_HESS_TEST,double> ad1(-.544018110889913834515637031664, g1,h1), ad2(10.0003114815399309804461018116, g2,h2), adresMaple(-10.5443295924298448149617388433, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -1.67814305815290490451772789565, 8.45597888911063018659525233815, 1.91195777822126037319050467630 };
  double g2  [3] = { 62.8366112920642289376799289058, 695.909810280314746536354518859, 303.066835082901481034869938276 };
  double gres[3] = { -64.5147543502171338421976568014, -687.453831391204116349759266521, -301.154877304680220661679433600 };
  double h1  [9] = { 1.08804222177873962680949532370, -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, 18., 9., -1.67814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { 6.22963089861960892202789922984, 138.101357444326669872469030557, 61.4548380013881927136264899768, 138.101357444326669872469030557, 2144.77783511242629086408777760, 668.274344466794022055285740277, 61.4548380013881927136264899768, 668.274344466794022055285740277, -5.40302305868139717400936607443 };
  double hres[9] = { -5.14158867684086929521840390614, -138.940428973403122324727894505, -63.1329810595410976181442178724, -138.940428973403122324727894505, -2126.77783511242629086408777760, -659.274344466794022055285740277, -63.1329810595410976181442178724, -659.274344466794022055285740277, 4.31498083690265754719987075073 };
  adreal<3,DO_HESS_TEST,double> ad1(1.91195777822126037319050467630, g1,h1), ad2(316.884567989661843275404327566, g2,h2), adresMaple(-314.972610211440582902213822890, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -84.7462244367216976781452587302, 89.4559788891106301865952523381, -7.8804222177873962680949532370 };
  double g2  [3] = { 622.124018332884439750531059036, 6834.25621104799047283818058814, 316.921756039874144235442438111 };
  double gres[3] = { -706.870242769606137428676317766, -6744.80023215887984265158533580, -324.802178257661540503537391348 };
  double h1  [9] = { 54.9461321998263511538795138470, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, 180., 9., -16.7814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { 62.2963089861960892202789922984, 1368.52938526775099947215384552, 62.8403300970854590336837399603, 1368.52938526775099947215384552, 21322.9364593691059161155131755, 695.984186380739348456430739947, 62.8403300970854590336837399603, 695.984186380739348456430739947, 8.39071529076452452258863947824 };
  double hres[9] = { -7.3501767863697380663994784514, -1369.36845679682745192441270947, -79.6217606786145080788610189168, -1369.36845679682745192441270947, -21142.9364593691059161155131755, -686.984186380739348456430739947, -79.6217606786145080788610189168, -686.984186380739348456430739947, -9.47875751254326414939813480194 };
  adreal<3,DO_HESS_TEST,double> ad1(-24.9461321998263511538795138470, g1,h1), ad2(3106.42473401903993649136097544, g2,h2), adresMaple(-3131.37086621886628764524048929, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -839071529084.843167549628472347, 899999999.455978889110630186595, -1085042.22177873962680949532370 };
  double g2  [3] = { 25934526.7735762201648436911737, 284074539.867111818008006851198, 479.665667663110286369477473383 };
  double gres[3] = { -839097463611.616743769793316038, 615925459.588867071102623335397, -1085521.88744640273709586480118 };
  double h1  [9] = { 544021110894.810024513641359985, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, 180000000., 900., -1678143.05815290490451772789565, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { 2593443.30983634668503649973204, 56814889.2383798129387056314688, 60.9337833154927620621302459985, 56814889.2383798129387056314688, 368365383.250288584727449256432, 354.073052950944901802579960847, 60.9337833154927620621302459985, 354.073052950944901802579960847, -936.752127533144786938532535075 };
  double hres[9] = { 544018517451.500188166956323485, -56814890.0774513420151580837277, -1678203.99193622039727979002590, -56814890.0774513420151580837277, -188365383.250288584727449256432, 545.926947049055098197420039153, -1678203.99193622039727979002590, 545.926947049055098197420039153, 935.664085311366047311723039751 };
  adreal<3,DO_HESS_TEST,double> ad1(-541021110894.810024513641359985, g1,h1), ad2(129673102.243944867396611925135, g2,h2), adresMaple(-541150783997.053969381037971911, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -9.22978681984097697484750342606, -900.544021110889369813404747662, 3001.08804222177873962680949532 };
  double g2  [3] = { 28.0957974884505048897286634239, -176.013891343058367898862142002, 971.143150299713840904327308232 };
  double gres[3] = { -37.3255843082914818645761668500, -724.530129767831001914542605660, 2029.94489192206489872248218709 };
  double h1  [9] = { 5.98423221978306794745222428036, -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, -180., 900., 1.67814305815290490451772789565, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { -2.59344330983634668503649973204, -46.0088243859744679277911605492, 110.081531579153117515615229483, -46.0088243859744679277911605492, -357.559318397883239716534785512, 452.368549478265612709549927817, 110.081531579153117515615229483, 452.368549478265612709549927817, -540.302305868139717400936607443 };
  double hres[9] = { 8.57767552961941463248872401240, 45.1697528568980154755322966014, -108.403388521000212611097501588, 45.1697528568980154755322966014, 177.559318397883239716534785512, 447.631450521734387290450072183, -108.403388521000212611097501588, 447.631450521734387290450072183, 539.214263646360977774127112119 };
  adreal<3,DO_HESS_TEST,double> ad1(-3005.98423221978306794745222428, g1,h1), ad2(410.630140376322383149111620841, g2,h2), adresMaple(-3416.61437259610545109656384512, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -8.39071529076536359411771593069, -.543121110889369813404747661851, 2999.99999891195777822126037319 };
  double g2  [3] = { 100.000025934383098363466854532, 200.000284074252516686311387382, 129.671165491817334418491653269 };
  double gres[3] = { -108.390741225148461957584570462, -200.543405185141886499716135044, 2870.32883342014044380276871992 };
  double h1  [9] = { 5.44021110889424215515836598832, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, .180e-3, 900., -.167814305815290490451772789565e-5, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { .259344330983634668503649973204e-5, 20.0000568148605033372622766432, 25.9343330983634668670316639871, 20.0000568148605033372622766432, 20.0003683653545152460340653868, 284.074152516686311412382796824, 25.9343330983634668670316639871, 284.074152516686311412382796824, -999.999999999500000000000041667 };
  double hres[9] = { 5.44020851545093231881168095182, -20.8391283439369557895211405910, -25.9343347765065250199365685048, -20.8391283439369557895211405910, -20.0001883653545152460340653868, 615.925847483313688587617203176, -25.9343347765065250199365685048, 615.925847483313688587617203176, 998.911957777721260373190546343 };
  adreal<3,DO_HESS_TEST,double> ad1(-5.43721110889424215515836598832, g1,h1), ad2(1000.00012967166549181733429349, g2,h2), adresMaple(-1005.43734078055973397249265948, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -9.22978681984097697484750342606, 899.455978889110630186595252338, 2998.91195777822126037319050468 };
  double g2  [3] = { 79.9646636851774385904586580647, 392.134813690314254859236784980, -711.798819316079172400677335028 };
  double gres[3] = { -89.1944505050184155653061614908, 507.321165198796375327358467358, 3710.71077709430043277386783971 };
  double h1  [9] = { 5.98423221978306794745222428036, -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, 180., 900., -1.67814305815290490451772789565, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { 2.59344330983634668503649973204, 67.6209166207000566238286248470, -58.2126653824261838148852348426, 67.6209166207000566238286248470, 379.171410632608828412572249810, 115.780155555107010048548999165, -58.2126653824261838148852348426, 115.780155555107010048548999165, -540.302305868139717400936607443 };
  double hres[9] = { 3.39078890994672126241572454832, -68.4599881497765090760874887948, 56.5345223242732789103675069470, -68.4599881497765090760874887948, -199.171410632608828412572249810, 784.219844444892989951451000835, 56.5345223242732789103675069470, 784.219844444892989951451000835, 539.214263646360977774127112119 };
  adreal<3,DO_HESS_TEST,double> ad1(2994.01576778021693205254777572, g1,h1), ad2(669.974471359957051652761594045, g2,h2), adresMaple(2324.04129642025988039978618168, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1-ad2" << endl;
  double g1  [3] = { -92.2978681984097697484750342606, 8999.45597888911063018659525234, 2989.11957778221260373190504676 };
  double g2  [3] = { 175.437178075989423277763578422, 2672.92921935157262333872184534, 673.693276381187147656572648453 };
  double gres[3] = { -267.735046274399193026238612682, 6326.52675953753800684787340700, 2315.42630140102545607533239831 };
  double h1  [9] = { 59.8423221978306794745222428036, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, 1800., 900., -16.7814305815290490451772789565, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { 25.9344330983634668503649973204, 551.367274451843573712921648024, 80.3365441873004481908397635055, 551.367274451843573712921648024, 3666.87221457093129160035789765, 392.878574694560274059998995861, 80.3365441873004481908397635055, 392.878574694560274059998995861, 839.071529076452452258863947824 };
  double hres[9] = { 33.9078890994672126241572454832, -552.206345980920026165180511972, -97.1179747688294972360170424620, -552.206345980920026165180511972, -1866.87221457093129160035789765, 507.121425305439725940001004139, -97.1179747688294972360170424620, 507.121425305439725940001004139, -840.159571298231191885673443148 };
  adreal<3,DO_HESS_TEST,double> ad1(29940.1576778021693205254777572, g1,h1), ad2(457.650125841720890259385918196, g2,h2), adresMaple(29482.5075519604484302660918390, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1-ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 936753064285.272320083319473608, 8999999999999999999.65000649783, 2999999999999300012.99565741410 };
  double g2  [3] = { -557745688417.251329755455819225, 2279192338739318074.47339312918, 349992754922384976.919594139787 };
  double gres[3] = { 379007375868.02099032786365438, 11279192338739318074.1233996270, 3349992754921684989.91525155389 };
  double h1  [9] = { 349993852164.795123410604604433, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, 18000000000000., 9000000000000., 1873504.25506628957387706507015, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { -1494497.81595039611669398835430, 4558382803974.38108265721238129, 349992007673.477001721535792793, 4558382803974.38108265721238129, -1703122586212510942.98664048080, 2979177469577.64891241912422567, 349992007673.477001721535792793, 2979177469577.64891241912422567, -936752127533144786.938532535075 };
  double hres[9] = { 349992357666.979173014487910445, 4558382803975.31783478474552607, 349993881177.732068011109669858, 4558382803975.31783478474552607, -1703104586212510942.98664048080, 11979177469577.6489124191242257, 349993881177.732068011109669858, 11979177469577.6489124191242257, -936752127533144787.638519539418 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999650006147835.20488, g1,h1), ad2(189503219557946728.591538357925, g2,h2), adresMaple(3000000189502869564094563.79642, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 936753.064285272320083319473608, -9000000000000.34999350217129295, 3000000000000000000.69998700434 };
  double g2  [3] = { 540303800365.955667797053301431, -1198585853498.78357338194603722, 841470237558988531.454443974636 };
  double gres[3] = { 540304737119.019953069373384751, -10198585853499.1335668841173302, 3841470237558988532.15443097898 };
  double h1  [9] = { 349993.852164795123410604604433, .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, -18000000., 9000000000000., -1.87350425506628957387706507015, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { 1.49449781595039611669398835430, -3477776.31873384658156576528933, 841469490310.080556256385627642, -3477776.31873384658156576528933, 1703123666818.99618352114157224, 3962132434850.85602148882389537, 841469490310.080556256385627642, 3962132434850.85602148882389537, -540302305868139717.400936607443 };
  double hres[9] = { 349995.346662611073806721298421, -3477775.38198171904842097835080, 841469490308.207052001319338068, -3477775.38198171904842097835080, 1703105666818.99618352114157224, 12962132434850.8560214888238954, 841469490308.207052001319338068, 12962132434850.8560214888238954, -540302305868139718.100923611786 };
  adreal<3,DO_HESS_TEST,double> ad1(-3000000000000349993.85216479512, g1,h1), ad2(540303053117047692.598994954437, g2,h2), adresMaple(-2459696946883302301.25316984069, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 936752.127533144787875284662608, 8999999.65000649782870704788235, 2999999999999999999.99999930001 };
  double g2  [3] = { 999999999998.005502184049645550, 2000002279189.46523506300826715, -1747248907975.03139168032751882 };
  double gres[3] = { 1000000936750.13303532883752083, 2000011279189.11524156083697420, 2999998252751092024.96860761969 };
  double h1  [9] = { 349993.502171292952467645988952, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, 18.000000, 9000000000000., .187350425506628957387706507015e-5, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 2000004.55837993047012601645097, -2494497.81595022945002732169597, 2000004.55837993047012601645097, 296877.41378461555275829331296, 2279188465235.06300851715258544, -2494497.81595022945002732169597, 2279188465235.06300851715258544, -999999999999500000.000000041667 };
  double hres[9] = { 349993.502169798454651695592835, 2000005.49513205800327080338950, -2494497.81594835594577225540640, 2000005.49513205800327080338950, 296895.41378461555275829331296, 11279188465235.0630085171525854, -2494497.81594835594577225540640, 11279188465235.0630085171525854, -999999999999500000.699987046010 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999650006.49782870704753235, g1,h1), ad2(999999999998752751.092024843609, g2,h2), adresMaple(1000002999998402757.58985355066, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 936753.064285272320083319473608, 8999999999999.65000649782870705, 2999999999999999999.30001299566 };
  double g2  [3] = { 540300811370.323767004819913455, 3359795076971.34244298569246700, -841471732056804481.850560668624 };
  double gres[3] = { 540301748123.388052277139996774, 12359795076970.9924494835211740, 2158528267943195517.44945232704 };
  double h1  [9] = { 349993.852164795123410604604433, .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, 18000000., 9000000000000., 1.87350425506628957387706507015, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { -1.49449781595039611669398835430, 5638985.54220640545116951171911, -841472479305.712457048619015618, 5638985.54220640545116951171911, -1703121505609.77271096227196850, 596248495619.26999487881460885, -841472479305.712457048619015618, 596248495619.26999487881460885, -540302305868139717.400936607443 };
  double hres[9] = { 349992.357666979173014487910445, 5638986.47895853298431429865764, -841472479303.838952793552726044, 5638986.47895853298431429865764, -1703103505609.77271096227196850, 9596248495619.26999487881460884, -841472479303.838952793552726044, 9596248495619.26999487881460884, -540302305868139718.100923611786 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999650006.14783520488, g1,h1), ad2(540301558619231742.202878260449, g2,h2), adresMaple(3540301558618881748.35071346533, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 936845.802745898101417226388329, 89999999999999.6500064978287070, 2999999999999999993.00012995657 };
  double g2  [3] = { -839086474054.611956220030887708, 21113761594197.7251773204646254, 544020363640461838.206689314857 };
  double gres[3] = { -839085537208.809210321929470481, 111113761594197.375183818293332, 3544020363640461831.20681927143 };
  double h1  [9] = { 350028.501521510081412864252030, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, 180000000., 9000000000000., 18.7350425506628957387706507015, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { -14.9449781595039611669398835430, 43905666.2465483552591586571466, 544019616391.553863008630967863, 43905666.2465483552591586571466, -17031227540286.9026253219722214, 3367232687013.80263499331457581, 544019616391.553863008630967863, 3367232687013.80263499331457581, 839071529076452452.258863947824 };
  double hres[9] = { 350013.556543350577451697312146, 43905667.1833004827923034440850, 544019616410.288905559293863601, 43905667.1833004827923034440850, -17031047540286.9026253219722214, 12367232687013.8026349933145758, 544019616410.288905559293863601, 12367232687013.8026349933145758, 839071529076452451.558876943481 };
  adreal<3,DO_HESS_TEST,double> ad1(29999999999999649971.4984784899, g1,h1), ad2(-839079001565532204.239447417766, g2,h2), adresMaple(29160920998434117767.2590310722, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 936752127532.208034810999390288, 8999999.65000649782870704788235, -699990.004342585904235304973562 };
  double g2  [3] = { -6229630898618.67216990036608505, 6851037641627646017.62829157753, -3114815099316.30228972099749727 };
  double gres[3] = { -5292878771086.46413508936669476, 6851037641636646017.27829807536, -3114815799306.30663230690173257 };
  double h1  [9] = { 349993502170.942958615481193829, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, -18000000., 9., 1873504.25506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -6229630.89861960892202789922984, 13702075283257.1655395116494446, -6229630.54862610675073494711219, 13702075283257.1655395116494446, -21339717889948761460.9056241649, 6851036941642.51517929745363180, -6229630.54862610675073494711219, 6851036941642.51517929745363180, -936752.127533144786938532535075 };
  double hres[9] = { 349987272540.044339006559165930, 13702075283258.1022916391825894, -4356126.29355981717685788204204, 13702075283258.1022916391825894, -21339717889966761460.9056241649, 6851036941651.51517929745363180, -4356126.29355981717685788204204, 6851036941651.51517929745363180, -936752.827520149129524436770380 };
  adreal<3,DO_HESS_TEST,double> ad1(-349996502170.942958615481193829, g1,h1), ad2(-3114815449308867708.88641647013, g2,h2), adresMaple(-3114815799305369879.82937508561, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 0., -9.34999350217129295211765248678, -2.30001299565741409576469502644 };
  double g2  [3] = { 6229631.43892191479016761663078, -6851038722234.13125816279266897, -3114814607838.81965311744296242 };
  double gres[3] = { 6229631.43892191479016761663078, -6851038722243.48125166496396192, -3114814607841.11966611310037652 };
  double h1  [9] = { 0., .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, 18., 9., -1.87350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { 6.22963089861960892202789922984, -13702076.3638636507800461505361, -6229630.05714862411413139257734, -13702076.3638636507800461505361, 21339718970555.2467014401252564, 6851035958687.54990609034456210, -6229630.05714862411413139257734, 6851035958687.54990609034456210, -540302.305868139717400936607443 };
  double hres[9] = { 6.22963089861960892202789922984, -13702075.4271115232469013635976, -6229631.93065287918042096645441, -13702075.4271115232469013635976, 21339718970573.2467014401252564, 6851035958696.54990609034456210, -6229631.93065287918042096645441, 6851035958696.54990609034456210, -540303.005855144059986840842748 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(3114815989612.11032915366701586, g2,h2), adresMaple(3114815989615.11032915366701586, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -.936752127532208034810999390288, -.349984502171292952117652486781, -3.00000069998700434258590423530 };
  double g2  [3] = { -5.22963089862010892202789918817, 4851037.64163051952188335778377, -3114815449310.80446101394944825 };
  double gres[3] = { -6.16638302615231695683889857846, 4851037.29164601735059040566612, -3114815449313.80446171393645259 };
  double h1  [9] = { -.349993502170942958615481193829, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, -.18e-4, 9., .187350425506628957387706507015e-5, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -.622963089861960892202789922984e-5, 11.7020752832600390437667156509, -6229630.89862060892202789906317, 11.7020752832600390437667156509, -19339717.8899516349651606903712, 6851037641631.51952188335753377, -6229630.89862060892202789906317, 6851037641631.51952188335753377, -999999.999999500000000000041667 };
  double hres[9] = { -.349999731801841578224403221728, 12.6388274107931838307052481860, -6229630.89861873541777283277360, 12.6388274107931838307052481860, -19339717.8899696349651606903712, 6851037641640.51952188335753377, -6229630.89861873541777283277360, 6851037641640.51952188335753377, -1000000.69998650434258590427697 };
  adreal<3,DO_HESS_TEST,double> ad1(.349990502170942958615481193829, g1,h1), ad2(-2114815.44931030446101394957325, g2,h2), adresMaple(-2114815.09931980229007099095777, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 0., 8.65000649782870704788234751322, -3.69998700434258590423530497356 };
  double g2  [3] = { -6229630.35831730305388818182890, 6851036561024.90778560392306523, -3114816290780.78926891045626742 };
  double gres[3] = { -6229630.35831730305388818182890, 6851036561033.55779210175177228, -3114816290784.48925591479885332 };
  double h1  [9] = { 0., .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, -18., 9., 1.87350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -6.22963089861960892202789922984, 13702074.2026544273074872809323, -6229631.74009059372992440588234, 13702074.2026544273074872809323, -21339716809346.0232288812556526, 6851039324571.48913767637117210, -6229631.74009059372992440588234, 6851039324571.48913767637117210, -540302.305868139717400936607443 };
  double hres[9] = { -6.22963089861960892202789922984, 13702075.1394065548406320678708, -6229629.86658633866363483200527, 13702075.1394065548406320678708, -21339716809364.0232288812556526, 6851039324580.48913767637117210, -6229629.86658633866363483200527, 6851039324580.48913767637117210, -540303.005855144059986840842748 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(-3114814909007.49859287423221398, g2,h2), adresMaple(-3114814909010.49859287423221398, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 92.7384606257813339069147209724, 89.6500064978287070478823475132, -9.99987004342585904235304973562 };
  double g2  [3] = { -62296309.8252676182967314445573, 68510378094438.2533717384831887, -3114814905288.69357164413621017 };
  double gres[3] = { -62296217.0868069925153975376426, 68510378094527.9033782363118957, -3114814905298.69344168756206921 };
  double h1  [9] = { 34.6493567149580022596475961913, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, -180., 9., 18.7350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -62.2963089861960892202789922984, 137020754.510733448590572061860, -6229630.35459849803265808582509, 137020754.510733448590572061860, -213397180577649.407804511809063, 6851036553587.29774314373105760, -6229630.35459849803265808582509, 6851036553587.29774314373105760, 839071.529076452452258863947824 };
  double hres[9] = { -27.6469522712380869606313961071, 137020755.447485576123716848798, -6229611.61955594736976234705444, 137020755.447485576123716848798, -213397180577829.407804511809063, 6851036553596.29774314373105760, -6229611.61955594736976234705444, 6851036553596.29774314373105760, 839070.829089448109672959712519 };
  adreal<3,DO_HESS_TEST,double> ad1(-64.6493567149580022596475961913, g1,h1), ad2(-31148155332169.5736865919484081, g2,h2), adresMaple(-31148155332234.2230433069064104, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 936752127533.144787875284662608, -.349984502171292952117652486781, -699987.004342585904235301973562 };
  double g2  [3] = { 4000000.00000133333427008599421, 2000000000002000001.87350558840, 2000000.00000101666016883822629 };
  double gres[3] = { 936756127533.144789208618932694, 2000000000002000001.52352108623, 1300012.99565843075593353625273 };
  double h1  [9] = { 349993502171.292952467645988952, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, 18.000000, .9e-11, 1873504.25506628957387706507015, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { 4.00000000000133333333333386668, 4000000000004.00000187350692174, 4.00000000000168332683550515963, 4000000000004.00000187350692174, 4000001873509.58839962291174375, 2000000000002.69998700434391923, 4.00000000000168332683550515963, 2000000000002.69998700434391923, -.936752127533144786938532535075e-6 };
  double hres[9] = { 349993502175.292952467647322285, 4000000000004.93675400104006652, 1873508.25506628957556039190565, 4000000000004.93675400104006652, 4000001873527.58839962291174375, 2000000000002.69998700435291923, 1873508.25506628957556039190565, 2000000000002.69998700435291923, -.699987941094713437380091912095 };
  adreal<3,DO_HESS_TEST,double> ad1(-349993502171.292952467642988952, g1,h1), ad2(2000000000000.66666760341906087, g2,h2), adresMaple(1650006497829.37371513577607192, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { .936753064285272320083319473608, -.349993502180292952117652486781, .699987004342585907235304973562 };
  double g2  [3] = { -4.00000000000079303102746572696, -2000000000000.91939538826505390, 2000000.00000150813765147482985 };
  double gres[3] = { -3.06324693571552071094414625335, -2000000000001.26938889044534685, 2000000.69998851248023738206515 };
  double h1  [9] = { .349993852164795123410604604433, .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, -.18e-4, .9e-11, -1.87350425506628957387706507015, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { -.400000000000133333333333386668e-5, -4000000.00000291939538826638724, 4.00000000000217480431814176319, -4000000.00000291939538826638724, -2919395.38826905389853146465179, 2000000000003.68294196961712634, 4.00000000000217480431814176319, 2000000000003.68294196961712634, -.540302305868139717400936607443e-6 };
  double hres[9] = { .349989852164795122077271271099, -3999999.06325079186224347944871, 2.12649574493588523044107669304, -3999999.06325079186224347944871, -2919395.38828705389853146465179, 2000000000003.68294196962612634, 2.12649574493588523044107669304, 2000000000003.68294196962612634, -.699987544644891772375022374499 };
  adreal<3,DO_HESS_TEST,double> ad1(-.349993852164795126410604604433, g1,h1), ad2(-2000000.00000012636436079879362, g2,h2), adresMaple(-2000000.34999397852915592520422, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}

}
void test2() { 
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { .936753064285272320083319473608e-6, -.349993502171292943117652486781, -.699987004339585904235304973562e-6 };
  double g2  [3] = { .400000100000133333283333386668e-5, 2000002.00000199999900000133333, 2000000.00000066666566666693334 };
  double gres[3] = { .493675406428660565291665334029e-5, 2000001.65000849782770705821568, 1999999.99999996667866232734744 };
  double h1  [9] = { .349993852164795123410604604433e-6, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, .18e-10, .9e-11, .187350425506628957387706507015e-5, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { .400000000000133333333333386668e-11, 4.00000200000399999900000266667, 4.00000000000133333233333386668, 4.00000200000399999900000266667, 2000003.99999900000533333341667, 2000000000001.99999800000133333, 4.00000000000133333233333386668, 2000000000001.99999800000133333, -.999999999999500000000000041667e-6 };
  double hres[9] = { .349997852164795124743937937767e-6, 4.93675412753714478593853520175, 4.00000187350558839862290774375, 4.93675412753714478593853520175, 2000003.99999900002333333341667, 2000000000001.99999800001033333, 4.00000187350558839862290774375, 2000000000001.99999800001033333, -.699988004342585903735304973562 };
  adreal<3,DO_HESS_TEST,double> ad1(-.349993852164795120410604604433e-6, g1,h1), ad2(2.00000100000066666616666693334, g2,h2), adresMaple(2.00000065000681450137154652274, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { .936753064285272320083319473608, -.349993502162292952117652486781, -.699987004342585901235304973562 };
  double g2  [3] = { 4.00000000000187363563920200640, 2000000000003.08060461173761276, 1999999.99999982519568185903683 };
  double gres[3] = { 4.93675306428714595572252148001, 2000000000002.73061110957531981, 1999999.30001282085309595780153 };
  double h1  [9] = { .349993852164795123410604604433, .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, .18e-4, .9e-11, 1.87350425506628957387706507015, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { .400000000000133333333333386668e-5, 4000000.00000508060461173894610, 4.00000000000049186234852597017, 4000000.00000508060461173894610, 5080604.61174161276813521108157, 2000000000000.31705803038554032, 4.00000000000049186234852597017, 2000000000000.31705803038554032, -.540302305868139717400936607443e-6 };
  double hres[9] = { .349997852164795124743937937767, 4000000.93675720813775652588463, 5.87350425506678143622559104032, 4000000.93675720813775652588463, 5080604.61175961276813521108157, 2000000000000.31705803039454032, 5.87350425506678143622559104032, 2000000000000.31705803039454032, -.699987544644891772375022374499 };
  adreal<3,DO_HESS_TEST,double> ad1(-.349993852164795120410604604433, g1,h1), ad2(2000000.00000120696897253507306, g2,h2), adresMaple(1999999.65000735480417741466246, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 93.6752136900666062269980404460, -.349993502081292952117652486781, -6.99987004342585903935304973562 };
  double g2  [3] = { 40.0000000000124942618042622143, 20000000000018.3218569418604284, 2000000.00000121068777755630315 };
  double gres[3] = { 133.675213690079100488802302661, 20000000000017.9718634397791354, 1999993.00013116726191851695010 };
  double h1  [9] = { 34.9993505671227973830582007958, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, .180e-3, .9e-11, 18.7350425506628957387706507015, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { .400000000000133333333333386668e-4, 40000000.0000383218569418737618, 4.00000000000187735444422323649, 40000000.0000383218569418737618, 38321856.9419004284288156507712, 2000000000003.08804222178007296, 4.00000000000187735444422323649, 2000000000003.08804222178007296, .839071529076452452258863947824e-6 };
  double hres[9] = { 34.9993905671227973963915341291, 40000000.9367904493900866607003, 22.7350425506647730932148739380, 40000000.9367904493900866607003, 38321856.9420804284288156507712, 2000000000003.08804222178907296, 22.7350425506647730932148739380, 2000000000003.08804222178907296, -.699986165271056827782852714698 };
  adreal<3,DO_HESS_TEST,double> ad1(-34.9993505671227973530582007958, g1,h1), ad2(20000000.0000058275951375928809, g2,h2), adresMaple(19999965.0006552604723402398227, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 936752127534.081539066065679862, 8999999.65000649782870704788235, -699984.004342585904235304973562 };
  double g2  [3] = { 6229630898620.54567415543237463, 6851037641631393026.13842415667, 3114815799303.30663230690173257 };
  double gres[3] = { 7166383026154.62721322149805449, 6851037641640393025.78843065450, 3114815099319.30228972099749727 };
  double h1  [9] = { 349993502171.642945619823779733, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, 18000000., 9., 1873504.25506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { 6229630.89861960892202789922984, 13702075283260.9125480217820238, 6229631.24861311109332085134749, 13702075283260.9125480217820238, 21339717889952508469.4157567441, 6851038341616.52386446926210240, 6229631.24861311109332085134749, 6851038341616.52386446926210240, -936752.127533144786938532535075 };
  double hres[9] = { 349999731802.541565228745807632, 13702075283261.8493001493151686, 8103135.50367940066719791641764, 13702075283261.8493001493151686, 21339717889970508469.4157567441, 6851038341625.52386446926210240, 8103135.50367940066719791641764, 6851038341625.52386446926210240, -936752.827520149129524436770380 };
  adreal<3,DO_HESS_TEST,double> ad1(-349990502171.642945619823779733, g1,h1), ad2(3114815449310741213.14148275971, g2,h2), adresMaple(3114815099320239041.49853713989, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 1.87350425506628957387706507015, -9.34999350217129295211765248678, 3.69998700434258590423530497356 };
  double g2  [3] = { -6229630.35831730305388818182890, -6851036561024.90778560392306523, 3114816290780.78926891045626742 };
  double gres[3] = { -6229628.48481304798759860795183, -6851036561034.25777910609435818, 3114816290784.48925591479885332 };
  double h1  [9] = { .699987004342585904235304973562, .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, -18., 9., -1.87350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -6.22963089861960892202789922984, -13702074.2026544273074872809323, 6229631.74009059372992440588234, -13702074.2026544273074872809323, -21339716809346.0232288812556526, 6851039324571.48913767637117210, 6229631.74009059372992440588234, 6851039324571.48913767637117210, -540302.305868139717400936607443 };
  double hres[9] = { -5.52964389427702301779259425628, -13702073.2659022997743424939938, 6229629.86658633866363483200527, -13702073.2659022997743424939938, -21339716809364.0232288812556526, 6851039324580.48913767637117210, 6229629.86658633866363483200527, 6851039324580.48913767637117210, -540303.005855144059986840842748 };
  adreal<3,DO_HESS_TEST,double> ad1(-3.69998700434258590423530497356, g1,h1), ad2(-3114814909007.49859287423221398, g2,h2), adresMaple(-3114814909011.19857987857479988, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { .936752127534081539066065679862, -.349984502171292952117652486781, 2.99999930001299565741409576470 };
  double g2  [3] = { 7.22963089861910892202789927151, 8851037.64162851952188335795043, 3114815449308.80446101394978159 };
  double gres[3] = { 8.16638302615319046109396495137, 8851037.29164401735059040583278, 3114815449311.80446031396277725 };
  double h1  [9] = { .349993502171642945619823779733, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, .18e-4, 9., .187350425506628957387706507015e-5, 9., -.699987004342585904235304973562 };
  double h2  [9] = { .622963089861960892202789922984e-5, 15.7020752832580390437667158175, 6229630.89861860892202789939651, 15.7020752832580390437667158175, 23339717.8899496349651606905378, 6851037641627.51952188335820043, 6229630.89861860892202789939651, 6851037641627.51952188335820043, -999999.999999500000000000041667 };
  double hres[9] = { .349999731802541565228745807632, 16.6388274107911838307052483526, 6229630.89862048242628296568608, 16.6388274107911838307052483526, 23339717.8899676349651606905378, 6851037641636.51952188335820043, 6229630.89862048242628296568608, 6851037641636.51952188335820043, -1000000.69998650434258590427697 };
  adreal<3,DO_HESS_TEST,double> ad1(-.349990502171642945619823779733, g1,h1), ad2(4114815.44930930446101394965659, g2,h2), adresMaple(4114815.09931880228937100403677, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 1.87350425506628957387706507015, 8.65000649782870704788234751322, 2.30001299565741409576469502644 };
  double g2  [3] = { 6229631.43892191479016761663078, 6851038722234.13125816279266897, 3114814607838.81965311744296242 };
  double gres[3] = { 6229633.31242616985645719050785, 6851038722242.78126466062137602, 3114814607841.11966611310037652 };
  double h1  [9] = { .699987004342585904235304973562, .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, 18., 9., 1.87350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { 6.22963089861960892202789922984, 13702076.3638636507800461505361, 6229630.05714862411413139257734, 13702076.3638636507800461505361, 21339718970555.2467014401252564, 6851035958687.54990609034456210, 6229630.05714862411413139257734, 6851035958687.54990609034456210, -540302.305868139717400936607443 };
  double hres[9] = { 6.92961790296219482626320420340, 13702077.3006157783131909374746, 6229631.93065287918042096645441, 13702077.3006157783131909374746, 21339718970573.2467014401252564, 6851035958696.54990609034456210, 6229631.93065287918042096645441, 6851035958696.54990609034456210, -540303.005855144059986840842748 };
  adreal<3,DO_HESS_TEST,double> ad1(2.30001299565741409576469502644, g1,h1), ad2(3114815989612.11032915366701586, g2,h2), adresMaple(3114815989614.41034214932442996, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 94.6119648808476234807917860426, 89.6500064978287070478823475132, -3.99987004342585904235304973562 };
  double g2  [3] = { 62296308.1471245601438265400395, 68510374738152.1370659286741533, 3114815993330.91535038376301967 };
  double gres[3] = { 62296402.7590894409914500208313, 68510374738241.7870724265028603, 3114815993326.91548034033716063 };
  double h1  [9] = { 35.3493437193005881638829011649, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, 180., 9., 18.7350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { 62.2963089861960892202789922984, 137020751.154447332284762252824, 6229631.44264071981139771263459, 137020751.154447332284762252824, 213397177221363.291498702000027, 6851038729671.74130062298467660, 6229631.44264071981139771263459, 6851038729671.74130062298467660, 839071.529076452452258863947824 };
  double hres[9] = { 97.6456527054966773841618934633, 137020752.091199459817907039762, 6229650.17768327047429345140524, 137020752.091199459817907039762, 213397177221543.291498702000027, 6851038729680.74130062298467660, 6229650.17768327047429345140524, 6851038729680.74130062298467660, 839070.829089448109672959712519 };
  adreal<3,DO_HESS_TEST,double> ad1(-5.3493437193005881638829011649, g1,h1), ad2(31148153654026.5155336870438903, g2,h2), adresMaple(31148153654021.1661899677433021, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 936752127542.512308213863982944, 899999999.650006497828707047882, -696987.004342585904235304973562 };
  double g2  [3] = { 2593443309930.02189778981421073, 2840743525185598156.34115753065, 1296756654268.39047181346163127 };
  double gres[3] = { 3530195437472.53420600367819368, 2840743526085598155.99116402848, 1296755957281.38612922755739596 };
  double h1  [9] = { 349993502174.792887139365416302, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, 180000000., 900., 1873504.25506628957387706507015, 900., -.699987004342585904235304973562 };
  double h2  [9] = { 2593443.30983634668503649973204, 5681487050352.46127013165216555, 2593478.30918656381433171149729, 5681487050352.46127013165216555, 3683653645154333844.90060146618, 2840750525036.90653964953698796, 2593478.30918656381433171149729, 2840750525036.90653964953698796, -93675212.7533144786938532535075 };
  double hres[9] = { 349996095618.102723486050452802, 5681487050353.39802225918531034, 4466982.56425285338820877656744, 5681487050353.39802225918531034, 3683653645334333844.90060146618, 2840750525936.90653964953698796, 4466982.56425285338820877656744, 2840750525936.90653964953698796, -93675213.4533014830364391577428 };
  adreal<3,DO_HESS_TEST,double> ad1(-346993502174.792887139365416302, g1,h1), ad2(1296721655011848555.27156434471, g2,h2), adresMaple(1296721308018346380.47867720534, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 10.3042734028645926563238578858, -900.349993502171292952117652487, 3000.69998700434258590423530497 };
  double g2  [3] = { -2593389.27960575987106475963838, -2840732719120.74575099614661618, 1296805802016.65413216891511625 };
  double gres[3] = { -2593378.97533235700647210331452, -2840732720021.09574449831790913, 1296805805017.35411917325770215 };
  double h1  [9] = { 3.84992852388422247329417735459, .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, -180., 900., -1.87350425506628957387706507015, 900., -.699987004342585904235304973562 };
  double h2  [9] = { -2.59344330983634668503649973204, -5681476.24428760886478664125108, 2593527.45693482747468716498227, -5681476.24428760886478664125108, -3683652564547.84860436610037474, 2840760354586.55927172062768496, 2593527.45693482747468716498227, 2840760354586.55927172062768496, -54030230.5868139717400936607443 };
  double hres[9] = { 1.25648521404787578825767762255, -5681475.30753548133164185431255, 2593525.58343057240839759110520, -5681475.30753548133164185431255, -3683652564727.84860436610037474, 2840760355486.55927172062768496, 2593525.58343057240839759110520, 2840760355486.55927172062768496, -54030231.2868009760826795649796 };
  adreal<3,DO_HESS_TEST,double> ad1(-3003.84992852388422247329417735, g1,h1), ad2(-1296667624687.58652854650977236, g2,h2), adresMaple(-1296667627691.43645707039399483, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 9.36752127533238462151285849554, -.349093502171292952117652486781, 2999.99999930001299565741409576 };
  double g2  [3] = { 102.593443309786346685036503899, 22840743.5251568631137904954682, 1296721654818.17334251826653269 };
  double gres[3] = { 111.960964585118731306549362394, 22840743.1760633609424975433506, 1296721657818.17334181827952835 };
  double h1  [9] = { 3.49993502171327951467869616076, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, .180e-3, 900., .187350425506628957387706507015e-5, 900., -.699987004342585904235304973562 };
  double h2  [9] = { .259344330983634668503649973204e-5, 25.6814870503237262275809901031, 2593443.30973634668503651639871, 25.6814870503237262275809901031, 5683653.64515146034064553525994, 2840743525146.86311379049796824, 2593443.30973634668503651639871, 2840743525146.86311379049796824, -99999999.9999500000000000041667 };
  double hres[9] = { 3.49993761515658935102538119726, 26.6182391778568710145195226382, 2593443.30973822018929158268828, 26.6182391778568710145195226382, 5683653.64533146034064553525994, 2840743526046.86311379049796824, 2593443.30973822018929158268828, 2840743526046.86311379049796824, -100000000.699937004342585908402 };
  adreal<3,DO_HESS_TEST,double> ad1(-3.49693502171327951467869616076, g1,h1), ad2(101296721.654868173342518254033, g2,h2), adresMaple(101296718.157933151629238739354, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 10.3042734028645926563238578858, 899.650006497828707047882347513, 2999.30001299565741409576469503 };
  double g2  [3] = { 2593497.34006693349900823982570, 2840754331212.98047658484265364, 1296637507819.69255286758461579 };
  double gres[3] = { 2593507.64434033636360089614956, 2840754332112.63048308267136069, 1296637510818.99256586324202989 };
  double h1  [9] = { 3.84992852388422247329417735459, .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, 180., 900., 1.87350425506628957387706507015, 900., -.699987004342585904235304973562 };
  double h2  [9] = { 2.59344330983634668503649973204, 5681497.85637984359037533728854, 2593359.16273786589538583448181, 5681497.85637984359037533728854, 3683654725757.07207692496997848, 2840726695747.16695586036158486, 2593359.16273786589538583448181, 2840726695747.16695586036158486, -54030230.5868139717400936607443 };
  double hres[9] = { 6.44337183372056915833067708663, 5681498.79313197112352012422707, 2593361.03624212096167540835888, 5681498.79313197112352012422707, 3683654725937.07207692496997848, 2840726696647.16695586036158486, 2593361.03624212096167540835888, 2840726696647.16695586036158486, -54030231.2868009760826795649796 };
  adreal<3,DO_HESS_TEST,double> ad1(2996.15007147611577752670582265, g1,h1), ad2(1296775685148.76015648998995968, g2,h2), adresMaple(1296775688144.91022796610573721, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 103.042734028645926563238578858, 8999.65000649782870704788234751, 2993.00012995657414095764695026 };
  double g2  [3] = { 25934349.1912105592051197714340, 28407418470238.0496088559011718, 1296776057029.26227949959034079 };
  double gres[3] = { 25934452.2339445878510463346726, 28407418479237.6996153537298788, 1296776060022.26240945616448175 };
  double h1  [9] = { 38.4992852388422247329417735459, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, 1800., 900., 18.7350425506628957387706507015, 900., -.699987004342585904235304973562 };
  double h2  [9] = { 25.9344330983634668503649973204, 56814853.7219066807467608475208, 2593497.71194743562201784020681, 56814853.7219066807467608475208, 36836534773381.5452535504472484, 2840754405589.08090118676272986, 2593497.71194743562201784020681, 2840754405589.08090118676272986, 83907152.9076452452258863947824 };
  double hres[9] = { 64.4337183372056915833067708663, 56814854.6586588082799056344593, 2593516.44698998628491357897746, 56814854.6586588082799056344593, 36836534775181.5452535504472484, 2840754406489.08090118676272986, 2593516.44698998628491357897746, 2840754406489.08090118676272986, 83907152.2076582408833004905471 };
  adreal<3,DO_HESS_TEST,double> ad1(29961.5007147611577752670582265, g1,h1), ad2(12967132642028.8257799372727738, g2,h2), adresMaple(12967132671990.3264946984305491, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 540302846170.445585540654008380, 8999999999999999999.15852901519, 2999999999998317058.03038420699 };
  double g2  [3] = { 936753622030.960737334649229063, 405686.21016877343430675418196, -349993502172.040201025627684839 };
  double gres[3] = { 1477056468201.40632287530323744, 9000000000000405685.36869778863, 2999999650004814885.99018318136 };
  double h1  [9] = { 841471826278.881314549008974132, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18000000000000., 9000000000000., 1080604.61173627943480187321489, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { -1494497.81595039611669398835430, -2684876.67540383644249057343407, 349993502172.787449933602882898, -2684876.67540383644249057343407, -1703124.45971863951353128064744, -699984.725152120669172296789743, 349993502172.787449933602882898, -699984.725152120669172296789743, 936752127533.144786938532535075 };
  double hres[9] = { 841470331781.065364152892280144, -2684876.13510153057435085603313, 349994582777.399186213037684771, -2684876.13510153057435085603313, 17999998296875.5402813604864687, 8999999300015.27484787933082771, 349994582777.399186213037684771, 8999999300015.27484787933082771, 936752127531.461844968916742062 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999158528173721.11869, g1,h1), ad2(-936752874782.052762136590882069, g2,h2), adresMaple(2999999999998221775298939.06592, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 540302.846170445585540654008380, -9000000000000.84147098480789651, 3000000000000000001.68294196962 };
  double g2  [3] = { 540302305866.645219584986211326, -1080606.89092674466986488139871, -841470984808.643755560477519688 };
  double gres[3] = { 540302846169.491390030571751980, -9000001080607.73239772947776139, 2999999158529015193.03918640913 };
  double h1  [9] = { 841471.826278881314549008974132, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -18000000., 9000000000000., -1.08060461173627943480187321489, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { 1.49449781595039611669398835430, 1080609.17011720990492788958253, 841470984809.391004468452717747, 1080609.17011720990492788958253, .62251797447810501243983355548, -1682939.69042532777824199645944, 841470984809.391004468452717747, -1682939.69042532777824199645944, 540302305868.139717400936607443 };
  double hres[9] = { 841473.320776697264945125668120, 1080609.71041951577306760698346, 841470984808.310399856716438312, 1080609.71041951577306760698346, -17999999.3774820255218949875602, 8999998317060.30957467222175801, 841470984808.310399856716438312, 8999998317060.30957467222175801, 540302305866.456775431320814430 };
  adreal<3,DO_HESS_TEST,double> ad1(-3000000000000841471.82627888131, g1,h1), ad2(-540302305867.392468492961409385, g2,h2), adresMaple(-3000000540303147339.21874737427, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 540302.305868139717941238913311, 8999999.15852901519210349334750, 2999999999999999999.99999831706 };
  double g2  [3] = { 999999999999.500001494497857617, -1999999.99999672080953476502032, 999999.252750925358135274994673 };
  double gres[3] = { 1000000540301.80586963421579886, 6999999.15853229438256872832718, 3000000000000999999.25274924241 };
  double h1  [9] = { 841470.984807896507493973306438, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, 18.000000, 9000000000000., .108060461173627943480187321489e-5, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 1999999.99999444161906952995731, -999998.505502017382937216647679, 1999999.99999444161906952995731, -2.00000170312158621438444732504, 4.27919046523472967485048593544, -999998.505502017382937216647679, 4.27919046523472967485048593544, 999999999999.500000000000041667 };
  double hres[9] = { 841470.984806402009678022910321, 2000000.54029674748720924735825, -999998.505500936778325480368244, 2000000.54029674748720924735825, 15.9999982968784137856155526750, 9000000000004.27919046523472968, -999998.505500936778325480368244, 9000000000004.27919046523472968, 999999999997.817058030384248654 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999158529.01519210349250603, g1,h1), ad2(-999999999999.500000747248949642, g2,h2), adresMaple(1999999158529.51519135624355638, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 540302.846170445585540654008380, 8999999999999.15852901519210349, 2999999999999999998.31705803038 };
  double g2  [3] = { 540302305869.634215216887003560, -1080602.33254581419973886503107, 841470984807.149257744527123572 };
  double gres[3] = { 540302846172.480385662472544214, 8999998919396.82598320099236463, 3000000841470984805.46631577490 };
  double h1  [9] = { 841471.826278881314549008974132, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 18000000., 9000000000000., 1.08060461173627943480187321489, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { -1.49449781595039611669398835430, 1080600.05335534896467585684725, -841470984806.402008836551925513, 1080600.05335534896467585684725, -2.78372719795066388204357998526, 1682944.24880625824836801282708, -841470984806.402008836551925513, 1682944.24880625824836801282708, 540302305868.139717400936607443 };
  double hres[9] = { 841470.331781065364152892280144, 1080600.59365765483281557424819, -841470984805.321404224815646079, 1080600.59365765483281557424819, 17999997.2162728020493361179564, 9000001682944.24880625824836801, -841470984805.321404224815646079, 9000001682944.24880625824836801, 540302305866.456775431320814430 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999158528.17372111869, g1,h1), ad2(-540302305868.886966308911805501, g2,h2), adresMaple(2999999459696852659.28675480977, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 540356.336098726531372676701104, 89999999999999.1585290151921035, 2999999999999999983.17058030384 };
  double g2  [3] = { -839071529061.507474099359986657, 1678165.85005755725514780973384, -544021110890.117062312722859909 };
  double gres[3] = { -839070988705.171375372828613980, 90000001678165.0085865724472513, 2999999455978889093.05351799111 };
  double h1  [9] = { 841555.131906377296303167571862, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 180000000., 9000000000000., 10.8060461173627943480187321489, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { -14.9449781595039611669398835430, -1678188.64196220960577789157204, 544021110890.864311220698057968, -1678188.64196220960577789157204, -15.3530828039909395678993398080, -1088039.94258827439174648713988, 544021110890.864311220698057968, -1088039.94258827439174648713988, -839071529076.452452258863947824 };
  double hres[9] = { 841540.186928217792342000631978, -1678188.10165990373763817417110, 544021110901.670357338060852316, -1678188.10165990373763817417110, 179999984.646917196009060432101, 8999998911960.05741172560825351, 544021110901.670357338060852316, 8999998911960.05741172560825351, -839071529078.135394228479740837 };
  adreal<3,DO_HESS_TEST,double> ad1(29999999999999158444.8680936227, g1,h1), ad2(839071529068.979963179111967241, g2,h2), adresMaple(30000000839070687513.8480568018, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 540302305867.599415095068467726, 8999999.15852901519210349334750, -1682944.96961579301330500464326 };
  double g2  [3] = { 6229631.83537173645517268616837, 6851039.51513377458817293174417, -3.46480895148109741313160210170 };
  double gres[3] = { 540308535499.434786831523640412, 15851038.6736627897802764250917, -1682948.43442474449440241777486 };
  double h1  [9] = { 841470984807.055035667694425123, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, -18000000., 9., 1080604.61173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -6229630.89861960892202789922984, -13702077.1567632941100562896113, 6.57962440079090187414555171662, -13702077.1567632941100562896113, -21339719.7634548900314502643316, 7.55102464597210542611866284066, 6.57962440079090187414555171662, 7.55102464597210542611866284066, .936752127533144786938532535075 };
  double hres[9] = { 841464755176.156416058772397224, -13702076.6164609882419165722104, 1080611.19136068022570374736044, -13702076.6164609882419165722104, -39339719.7634548900314502643316, 16.5510246459721054261186628407, 1080611.19136068022570374736044, 16.5510246459721054261186628407, -.746189842082648226366472108185 };
  adreal<3,DO_HESS_TEST,double> ad1(-841473984807.055035667694425123, g1,h1), ad2(-3114816.38606193199415873655345, g2,h2), adresMaple(-841477099623.441097599688583860, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 0., -9.84147098480789650665250232163, -1.31705803038420698669499535674 };
  double g2  [3] = { -5.68932859275146920462696262240, -5.77043302989324008708148465221, -3.95628643411770096766645193655 };
  double gres[3] = { -5.68932859275146920462696262240, -15.6119040147011365937339869738, -5.27334446450190795436144729329 };
  double h1  [9] = { 0., .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., -1.08060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, 12.6214706715227596089648425193, 7.07110188342750542868040155147, 12.6214706715227596089648425193, 20.2591132782143555303588172396, 8.53397961124531253518836251036, 7.07110188342750542868040155147, 8.53397961124531253518836251036, .540302305868139717400936607443 };
  double hres[9] = { 6.22963089861960892202789922984, 13.1617729773908993263657791268, 5.99049727169122599387852833658, 13.1617729773908993263657791268, 38.2591132782143555303588172396, 17.5339796112453125351883625104, 5.99049727169122599387852833658, 17.5339796112453125351883625104, -1.14263966374765329590406803582 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(2.57451314344166474361301300748, g2,h2), adresMaple(5.57451314344166474361301300748, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -.540302305867599415095068467726, -.841461984807896506652502321630, -3.00000168294196961579301330500 };
  double g2  [3] = { 1.00000622963039861960892206957, 2.00000685103664162951952196669, -3.11481444930980446118061628159 };
  double gres[3] = { .459703923762799204513853601840, 1.15854486622874512286701964506, -6.11481613225177407697362958659 };
  double h1  [9] = { -.841470984807055035667694425123, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, -.18e-4, 9., .108060461173627943480187321489e-5, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -.622963089861960892202789922984e-5, -2.00001370207428325903904385005, 6.22962989861960892219456589651, -2.00001370207428325903904385005, -2.00002133971688995063496524402, 6.85103564162951952221669120043, 6.22962989861960892219456589651, 6.85103564162951952221669120043, .999999999999500000000000041667 };
  double hres[9] = { -.841477214437953655276616453022, -1.45971139620614354163810724260, 6.22963097922422065847400069838, -1.45971139620614354163810724260, -2.00003933971688995063496524402, 15.8510356416295195222166912004, 6.22963097922422065847400069838, 15.8510356416295195222166912004, -.682941969616293013305004601593 };
  adreal<3,DO_HESS_TEST,double> ad1(.841467984807055035667694425123, g1,h1), ad2(-1.00000311481494930980446105562, g2,h2), adresMaple(-.158535130007894274136766630494, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 0., 8.15852901519210349334749767837, -4.68294196961579301330500464326 };
  double g2  [3] = { 6.76993320448774863942883583728, 7.93164225336579895668523108199, -2.27334446450190795436144729329 };
  double gres[3] = { 6.76993320448774863942883583728, 16.0901712685579024500327287604, -6.95628643411770096766645193655 };
  double h1  [9] = { 0., .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, -18., 9., 1.08060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -6.22963089861960892202789922984, -14.7826798949953184785685889491, 5.38815991381171241537539690821, -14.7826798949953184785685889491, -22.4203225016869143999625636694, 5.16809567201372650857835322384, 5.38815991381171241537539690821, 5.16809567201372650857835322384, .540302305868139717400936607443 };
  double hres[9] = { -6.22963089861960892202789922984, -14.2423775891271787611676523417, 6.46876452554799185017727012310, -14.2423775891271787611676523417, -40.4203225016869143999625636694, 14.1680956720137265085783532238, 6.46876452554799185017727012310, 14.1680956720137265085783532238, -1.14263966374765329590406803582 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(-3.65511775517794417841488622236, g2,h2), adresMaple(-6.65511775517794417841488622236, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 53.4899282809458320226927241369, 89.1585290151921034933474976784, -19.8294196961579301330500464326 };
  double g2  [3] = { 61.4572374571196367680201283506, 66.8322333581422903143158507754, -3.65883656019917427441869727677 };
  double gres[3] = { 114.947165738065468790712852487, 155.990762373334393807663348453, -23.4882562563571044074687437094 };
  double h1  [9] = { 83.3056274959817541585977298414, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, -180., 9., 10.8060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -62.2963089861960892202789922984, -135.342609774437485533149429446, 6.77365200950897873543264689169, -135.342609774437485533149429446, -211.719035841353444747089176649, 7.93907986340825914869285319080, 6.77365200950897873543264689169, 7.93907986340825914869285319080, -.839071529076452452258863947824 };
  double hres[9] = { 21.0093185097856649383187375430, -134.802307468569345815748492839, 17.5796981268717730834513790406, -134.802307468569345815748492839, -391.719035841353444747089176649, 16.9390798634082591486928531908, 17.5796981268717730834513790406, 16.9390798634082591486928531908, -2.52201349869224546556386859108 };
  adreal<3,DO_HESS_TEST,double> ad1(-113.305627495981754158597729841, g1,h1), ad2(-30.3090829640215921578806322014, g2,h2), adresMaple(-143.614710460003346316478362042, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 540302305868.139717941238913311, -.841461984807896506652502321630, -1682941.96961579301330500164326 };
  double g2  [3] = { -4.00000000000039658120580072189, 2000000.00000012649574493504376, .199999965000716449537371481569e-5 };
  double gres[3] = { 540302305864.139717941238516730, 1999999.15853814168784842839126, -1682941.96961379301365499447876 };
  double h1  [9] = { 841470984807.896507493973306438, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18.000000, .9e-11, 1080604.61173627943480187321489, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { 4.00000000000133333333333386668, -4000000.00000212649574493637710, -.399999965000783116204038174903e-5, -4000000.00000212649574493637710, 2.12649574493904375945627279653, 1.99999930001499565741409709803, -.399999965000783116204038174903e-5, 1.99999930001499565741409709803, .936752127533144786938532535075e-12 };
  double hres[9] = { 841470984811.896507493974639771, -3999999.45969982062760521897616, 1080604.61173227943515186538373, -3999999.45969982062760521897616, 20.1264957449390437594562727966, 1.99999930002399565741409709803, 1080604.61173227943515186538373, 1.99999930002399565741409709803, -1.68294196961485626117747149847 };
  adreal<3,DO_HESS_TEST,double> ad1(-841470984807.896507493970306438, g1,h1), ad2(1.99999999999972991453913378855, g2,h2), adresMaple(-841470984805.896507493970576523, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380, -.841470984816896506652502321630, 1.68294196961579301630500464326 };
  double g2  [3] = { .400000054030363920147305126762e-5, -2.00000108060661173627943613520, .199999915852968185877016028084e-5 };
  double gres[3] = { .540306846170985889179855481431, -2.84147206542350824293193845683, 1.68294396961495154598686341342 };
  double h1  [9] = { .841471826278881314549008974132, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -.18e-4, .9e-11, -1.08060461173627943480187321489, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { -.400000000000133333333333386668e-5, 4.00000108060861173627943746854, -.399999915853034852543682721418e-5, 4.00000108060861173627943746854, -1.08060861173627944013520654823, 1.99999831706003038420698802833, -.399999915853034852543682721418e-5, 1.99999831706003038420698802833, .540302305868139717400936607443e-12 };
  double hres[9] = { .841467826278881313215675640798, 4.54030338647675145368037407599, -1.08060861173543796515039865171, 4.54030338647675145368037407599, -1.08062661173627944013520654823, 1.99999831706903038420698802833, -1.08060861173543796515039865171, 1.99999831706903038420698802833, -1.68294196961525271099913650354 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841471826278881317549008974132, g1,h1), ad2(-.200000054030297253480638433428e-5, g2,h2), adresMaple(-.841473826279421620521543780516, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380e-6, -.841470984807896497652502321630, -.168294196961279301330500464326e-5 };
  double g2  [3] = { -.300000000000183333333333382501e-11, .300000000000125000e-17, .200000000000166666666666676667e-5 };
  double gres[3] = { .540299846170445583707320675046e-6, -.841470984807896494652502321629, .317058030388873653361662123413e-6 };
  double h1  [9] = { .841471826278881314549008974132e-6, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .18e-10, .9e-11, .108060461173627943480187321489e-5, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-11, -.200000000000500000000000258334e-5, -.400000000000233333333333370001e-5, -.200000000000500000000000258334e-5, -1.99999999999499999999999475000, 2.00000000000400000000000100000, -.400000000000233333333333370001e-5, 2.00000000000400000000000100000, .999999999999500000000000041667e-12 };
  double hres[9] = { .841475826278881315882342307466e-6, .540300305868139712400936607440, -.291939538826605389853146048512e-5, .540300305868139712400936607440, -1.99999999997699999999999475000, 2.00000000001300000000000100000, -.291939538826605389853146048512e-5, 2.00000000001300000000000100000, -1.68294196961479301330500514326 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841471826278881311549008974132e-6, g1,h1), ad2(.100000000000116666666666689167e-11, g2,h2), adresMaple(-.841470826278881310382342307465e-6, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380, -.841470984798896506652502321630, -1.68294196961579301030500464326 };
  double g2  [3] = { -.399999945969902746519361646574e-5, 1.99999891939738826372056653146, .200000084147165147456317358584e-5 };
  double gres[3] = { .540298846170985886513188814763, 1.15852793459849175706806420983, -1.68293996961495153865353008008 };
  double h1  [9] = { .841471826278881314549008974132, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, .18e-4, .9e-11, 1.08060461173627943480187321489, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-5, -3.99999891939938826372056786480, -.400000084147231814122984051918e-5, -3.99999891939938826372056786480, -1.08060061173627942946853988155, 2.00000168294396961579301463833, -.400000084147231814122984051918e-5, 2.00000168294396961579301463833, .540302305868139717400936607443e-12 };
  double hres[9] = { .841475826278881315882342307466, -3.45969661353124854631963125736, 1.08060061173543796248373198505, -3.45969661353124854631963125736, -1.08058261173627942946853988155, 2.00000168295296961579301463833, 1.08060061173543796248373198505, 2.00000168295296961579301463833, -1.68294196961525271099913650354 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841471826278881311549008974132, g1,h1), ad2(.199999945969836079852694953240e-5, g2,h2), adresMaple(-.841469826279421613188210447182, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 54.0302311271162776082333781452, -.841470984717896506652502321630, -16.8294196961579301300500464326 };
  double g2  [3] = { -.400000008390848624097857909257e-4, 20.0000016781630581529049178510, .199999945597955577729685352859e-5 };
  double gres[3] = { 54.0301911271154385233709683594, 19.1585306934451616462524155294, -16.8294176961584741504942691357 };
  double h1  [9] = { 84.1470993222606354731467388155, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, .180e-3, .9e-11, 10.8060461173627943480187321489, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-4, -40.0000016781830581529049311844, -.399999945598022244396352046193e-5, -40.0000016781830581529049311844, 1.67818305815290495785106122903, 1.99999891195977822126037452383, -.399999945598022244396352046193e-5, 1.99999891195977822126037452383, -.839071529076452452258863947824e-12 };
  double hres[9] = { 84.1471393222606354864800721488, -39.4596993723149184355039945770, 10.8060421173633383677962881854, -39.4596993723149184355039945770, 1.67836305815290495785106122903, 1.99999891196877822126037452383, 10.8060421173633383677962881854, 1.99999891196877822126037452383, -1.68294196961663208483408109571 };
  adreal<3,DO_HESS_TEST,double> ad1(-84.1470993222606354431467388155, g1,h1), ad2(.200000008390781957431191215923e-4, g2,h2), adresMaple(-84.1470793222597963649509956963, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 540302305868.680019706804747160, 8999999.15852901519210349334750, -1682938.96961579301330500464326 };
  double g2  [3] = { -6229629.96186748138888311229131, 6851035.76812526445559378399003, 2.76482194713851150889629712814 };
  double gres[3] = { 540296076238.718152225415864048, 15851034.9266542796476972773375, -1682936.20479384587479349574696 };
  double h1  [9] = { 841470984808.737977637310218137, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18000000., 9., 1080604.61173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { 6229630.89861960892202789922984, -13702073.4097547839774771418571, -5.87963739644831596991024674306, -13702073.4097547839774771418571, 21339716.0164463798988711165774, 6.15105063728693361764805289354, -5.87963739644831596991024674306, 6.15105063728693361764805289354, .936752127533144786938532535075 };
  double hres[9] = { 841477214439.636597246232246036, -13702072.8694524781093374244562, 1080598.73209888298648590330464, -13702072.8694524781093374244562, 39339716.0164463798988711165774, 15.1510506372869336176480528935, 1080598.73209888298648590330464, 15.1510506372869336176480528935, -.746189842082648226366472108185 };
  adreal<3,DO_HESS_TEST,double> ad1(-841467984808.737977637310218137, g1,h1), ad2(3114814.51255767692786916267639, g2,h2), adresMaple(-841464869994.225419960382348974, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 1.08060461173627943480187321489, -9.84147098480789650665250232163, 4.68294196961579301330500464326 };
  double g2  [3] = { 6.76993320448774863942883583728, -7.93164225336579895668523108199, 2.27334446450190795436144729329 };
  double gres[3] = { 7.85053781622402807423070905217, -17.7731132381736954633377334036, 6.95628643411770096766645193655 };
  double h1  [9] = { 1.68294196961579301330500464326, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -18., 9., -1.08060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -6.22963089861960892202789922984, 14.7826798949953184785685889491, -5.38815991381171241537539690821, 14.7826798949953184785685889491, -22.4203225016869143999625636694, 5.16809567201372650857835322384, -5.38815991381171241537539690821, 5.16809567201372650857835322384, .540302305868139717400936607443 };
  double hres[9] = { -4.54668892900381590872289458658, 15.3229822008634581959695255565, -6.46876452554799185017727012310, 15.3229822008634581959695255565, -40.4203225016869143999625636694, 14.1680956720137265085783532238, -6.46876452554799185017727012310, 14.1680956720137265085783532238, -1.14263966374765329590406803582 };
  adreal<3,DO_HESS_TEST,double> ad1(-4.68294196961579301330500464326, g1,h1), ad2(-3.65511775517794417841488622236, g2,h2), adresMaple(-8.33805972479373719171989086562, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { .540302305868680019706804747160, -.841461984807896506652502321630, 2.99999831705803038420698669500 };
  double g2  [3] = { .999993770368601380391078013768, -1.99999314896135837048047819997, 3.11481644930980446084728294825 };
  double gres[3] = { 1.54029607623728140009788276093, -2.84145513376925487713298052160, 6.11481476636783484505426964325 };
  double h1  [9] = { .841470984808737977637310218137, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .18e-4, 9., .108060461173627943480187321489e-5, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { .622963089861960892202789922984e-5, 1.99998629792371674096095631661, -6.22963189861960892186123256317, 1.99998629792371674096095631661, -1.99997866028111004936503492264, 6.85103964162951952155002453377, -6.22963189861960892186123256317, 6.85103964162951952155002453377, .999999999999500000000000041667 };
  double hres[9] = { .841477214439636597246232246036, 2.54028860379185645836189292406, -6.22963081801499718558179776130, 2.54028860379185645836189292406, -1.99996066028111004936503492264, 15.8510396416295195215500245338, -6.22963081801499718558179776130, 15.8510396416295195215500245338, -.682941969616293013305004601593 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841467984808737977637310218137, g1,h1), ad2(-.999996885184050690195539027717, g2,h2), adresMaple(-1.84146486999278866783284924585, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 1.08060461173627943480187321489, 8.15852901519210349334749767837, 1.31705803038420698669499535674 };
  double g2  [3] = { -5.68932859275146920462696262240, 5.77043302989324008708148465221, 3.95628643411770096766645193655 };
  double gres[3] = { -4.60872398101518976982508940751, 13.9289620450853435804289823306, 5.27334446450190795436144729329 };
  double h1  [9] = { 1.68294196961579301330500464326, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., 1.08060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, -12.6214706715227596089648425193, -7.07110188342750542868040155147, -12.6214706715227596089648425193, 20.2591132782143555303588172396, 8.53397961124531253518836251036, -7.07110188342750542868040155147, 8.53397961124531253518836251036, .540302305868139717400936607443 };
  double hres[9] = { 7.91257286823540193533290387310, -12.0811683656546198915639059119, -5.99049727169122599387852833658, -12.0811683656546198915639059119, 38.2591132782143555303588172396, 17.5339796112453125351883625104, -5.99049727169122599387852833658, 17.5339796112453125351883625104, -1.14263966374765329590406803582 };
  adreal<3,DO_HESS_TEST,double> ad1(1.31705803038420698669499535674, g1,h1), ad2(2.57451314344166474361301300748, g2,h2), adresMaple(3.89157117382587173030800836422, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 54.5705328926821114574945973517, 89.1585290151921034933474976784, -13.8294196961579301330500464326 };
  double g2  [3] = { -63.1353805152725416725378562462, 70.1885194744481001233513065666, 2.57079433842043464760920195307 };
  double gres[3] = { -8.56484762259043021504325889452, 159.347048489640203616698804245, -11.2586253577374954854408444796 };
  double h1  [9] = { 84.9885694655975471719027344846, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 180., 9., 10.8060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { 62.2963089861960892202789922984, -138.698895890743295342184885238, -5.68560978773023910862315156799, -138.698895890743295342184885238, 215.075321957659254556124632441, 5.76299541985077989507386254340, -5.68560978773023910862315156799, 5.76299541985077989507386254340, -.839071529076452452258863947824 };
  double hres[9] = { 147.284878451793636392181726783, -138.158593584875155624783948631, 5.12043632963255523939558058091, -138.158593584875155624783948631, 395.075321957659254556124632441, 14.7629954198507798950738625434, 5.12043632963255523939558058091, 14.7629954198507798950738625434, -2.52201349869224546556386859108 };
  adreal<3,DO_HESS_TEST,double> ad1(-54.9885694655975471719027344846, g1,h1), ad2(31.9872260221744970623983600970, g2,h2), adresMaple(-23.0013434434230501095043743876, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 540302305873.542740459618004617, 899999999.158529015192103493347, -1679941.96961579301330500464326 };
  double g2  [3] = { -2593349.63462359337055780587879, 2840724.79012431245089475586426, -33.7026285622111218692469988121 };
  double gres[3] = { 540299712523.908116866247446811, 902840723.948653327642998249211, -1679975.67224435522442687389026 };
  double h1  [9] = { 841470984816.311216500581286697, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 180000000., 900., 1080604.61173627943480187321489, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { 2593443.30983634668503649973204, -5681468.31529117556468525049916, 32.4059069072929485267287489461, -5681468.31529117556468525049916, 3683651.77164820527435596129954, -4.15912651825899592856255510071, 32.4059069072929485267287489461, -4.15912651825899592856255510071, 93.6752127533144786938532535075 };
  double hres[9] = { 841473578259.621052847266323197, -5681467.77498886969654553309822, 1080637.01764318672775039994364, -5681467.77498886969654553309822, 183683651.771648205274355961300, 895.840873481741004071437444899, 1080637.01764318672775039994364, 895.840873481741004071437444899, 91.9922707836986856805482488642 };
  adreal<3,DO_HESS_TEST,double> ad1(-838470984816.311216500581286697, g1,h1), ad2(1296627.97970542002803955601277, g2,h2), adresMaple(-838469688188.331511080553247141, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 5.94332536454953689141030268187, -900.841470984807896506652502322, 3001.68294196961579301330500464 };
  double g2  [3] = { 56.6236738966503184251301604763, -13.6467896425296574618092267838, -82.8503768258714773227319822970 };
  double gres[3] = { 62.5669992611998553165404631582, -914.488260627337553968461729106, 2918.83256514374431569057302235 };
  double h1  [9] = { 9.25618083288686157317752553793, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -180., 900., -1.08060461173627943480187321489, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { -2.59344330983634668503649973204, 16.4875331676965205755997214187, 81.5536551709533039802137324310, 16.4875331676965205755997214187, -4.76425825688873977544740839150, -13.9886761709910670192595517977, 81.5536551709533039802137324310, -13.9886761709910670192595517977, 54.0302305868139717400936607443 };
  double hres[9] = { 6.66273752305051488814102580589, 17.0278354735646602930006580261, 80.4730505592170245454118592161, 17.0278354735646602930006580261, -184.764258256888739775447408392, 886.011323829008932980740448202, 80.4730505592170245454118592161, 886.011323829008932980740448202, 52.3472886171981787267886561010 };
  adreal<3,DO_HESS_TEST,double> ad1(-3009.25618083288686157317752554, g1,h1), ad2(-55.3269522417321450826119106103, g2,h2), adresMaple(-3064.58313307461900665578943615, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 5.40302305868193747631523421415, -.840570984807896506652502321630, 2999.99999831705803038420698669 };
  double g2  [3] = { 99.9999974065066901636533191302, -19.9999971592464748331368870428, 1.29682165491817332585158319935 };
  double gres[3] = { 105.403020465188627639968553344, -20.8405681440543713397893893644, 3001.29681997197620371005856989 };
  double h1  [9] = { 8.41470984807980653750983111281, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .180e-3, 900., .108060461173627943480187321489e-5, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { .259344330983634668503649973204e-5, 19.9999943185029496662737732523, -2.59354330983634666836983306537, 19.9999943185029496662737732523, -1.99999631634535484753965943779, 2.84076352516686311045716130158, -2.59354330983634666836983306537, 2.84076352516686311045716130158, 99.9999999999500000000000041667 };
  double hres[9] = { 8.41471244152311637385651614931, 20.5402966243710893836747098598, -2.59354222923173493209039826350, 20.5402966243710893836747098598, -1.99981631634535484753965943779, 902.840763525166863110457161302, -2.59354222923173493209039826350, 902.840763525166863110457161302, 98.3170580303342069866949995234 };
  adreal<3,DO_HESS_TEST,double> ad1(-8.41170984807980653750983111281, g1,h1), ad2(-99.9999987032283450818266616485, g2,h2), adresMaple(-108.411708551308151619336492761, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 5.94332536454953689141030268187, 899.158529015192103493347497678, 2998.31705803038420698669499536 };
  double g2  [3] = { 51.4367872769776250550571610123, -7.96530259219593123422823751399, 85.4438201357078240077684820290 };
  double gres[3] = { 57.3801126415271619464674636941, 891.193226422996172259119260164, 3083.76087816609203099446347739 };
  double h1  [9] = { 9.25618083288686157317752553793, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 180., 900., 1.08060461173627943480187321489, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { 2.59344330983634668503649973204, 5.12455906702906812043774287909, -86.7405417906259973502867318950, 5.12455906702906812043774287909, 2.60304903341618090584366196172, 19.6701632213247932468405410675, -86.7405417906259973502867318950, 19.6701632213247932468405410675, 54.0302305868139717400936607443 };
  double hres[9] = { 11.8496241427232082582140252700, 5.66486137289720783783867948653, -85.6599371788897179154848586802, 5.66486137289720783783867948653, 182.603049033416180905843661962, 919.670163221324793246840541068, -85.6599371788897179154848586802, 919.670163221324793246840541068, 52.3472886171981787267886561010 };
  adreal<3,DO_HESS_TEST,double> ad1(2990.74381916711313842682247446, g1,h1), ad2(-52.7335089318957983975754108783, g2,h2), adresMaple(2938.01031023521734002924706359, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 59.4332536454953689141030268187, 8999.15852901519210349334749768, 2983.17058030384206986694995357 };
  double g2  [3] = { -109.841586006008712076251392103, 45.1888658331976801830822253056, -53.1053894340188079979565163191 };
  double gres[3] = { -50.4083323605133431621483652841, 9044.34739484838978367642972299, 2930.06519086982326186899343725 };
  double h1  [9] = { 92.5618083288686157317752553793, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 1800., 900., 10.8060461173627943480187321489, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { 25.9344330983634668503649973204, -73.5963010848663113209871716546, 51.8086677791006346554382664531, -73.5963010848663113209871716546, 38.5146795096775083109730796618, -8.03967869262053315430445860209, 51.8086677791006346554382664531, -8.03967869262053315430445860209, -83.9071529076452452258863947824 };
  double hres[9] = { 118.496241427232082582140252700, -73.0559987789981716035862350472, 62.6147138964634290034569986020, -73.0559987789981716035862350472, 1838.51467950967750831097307967, 891.960321307379466845695541398, 62.6147138964634290034569986020, 891.960321307379466845695541398, -85.5900948772610382391913994257 };
  adreal<3,DO_HESS_TEST,double> ad1(29907.4381916711313842682247446, g1,h1), ad2(96.8743694568269786510688934426, g2,h2), adresMaple(30004.3125611279583629192936381, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 1000000999999.49999950000004167, 9000000000000000000.00000100000, 3000000000000000002.00000000000 };
  double g2  [3] = { 936752127531.650289122582138958, 1.87350653425675480894007325397, 349993.502171292951370403578806 };
  double gres[3] = { 1936753127531.15028862258218062, 9000000000000000001.87350753426, 3000000000000349995.50217129295 };
  double h1  [9] = { -1000000.99999983333316666667500, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, 18000000000000., 9000000000000., 1999999.99999900000000000008333, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { -1494497.81595039611669398835430, 1873508.81344722004400308143779, 349993502171.292950623154670831, 1873508.81344722004400308143779, .17038166885190512663535829978e-6, .699987004344865094700540036570, 349993502171.292950623154670831, .699987004344865094700540036570, -936752.127533144786938532535075 };
  double hres[9] = { -2494498.81595022944986065502930, 1873509.81344722004350308143779, 349995502171.292949623154670831, 1873509.81344722004350308143779, 18000000000000.0000001703816689, 9000000000000.69998700434486509, 349995502171.292949623154670831, 9000000000000.69998700434486509, -936752.127531144786938532868408 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000000001000001.00000, g1,h1), ad2(936752.127532397538030557337017, g2,h2), adresMaple(3000000000000000001936753.12753, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 1000000.99999949999950000004167, -8999999999999.99999900000000000, 2999999999999999999.99999800000 };
  double g2  [3] = { 540302305868.139718895434423393, 1.08060461173400024433663815188, 841470.984807896505905253413655 };
  double gres[3] = { 540303305869.139718395433923393, -8999999999998.91939438826599976, 3000000000000841470.98480589651 };
  double h1  [9] = { -1.00000099999983333316666667500, .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, -18000000., 9000000000000., -1.99999999999900000000000008333, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { 1.49449781595039611669398835430, 1080604.61173172105387140308887, 841470984807.896505158004505680, 1080604.61173172105387140308887, .108060631485886564918632045660e-5, 1.68294196961807220377023970627, 841470984807.896505158004505680, 1.68294196961807220377023970627, -540302.305868139717400936607443 };
  double hres[9] = { .49449681595056278352732167930, 1080605.61173172105337140308887, 841470984805.896505158005505680, 1080605.61173172105337140308887, -17999999.9999989193936851411344, 9000000000001.68294196961807220, 841470984805.896505158005505680, 9000000000001.68294196961807220, -540302.305866139717400936940776 };
  adreal<3,DO_HESS_TEST,double> ad1(-2999999999999999998.99999900000, g1,h1), ad2(540302.305868139718148185515418, g2,h2), adresMaple(-2999999999999459696.69413086028, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 999999.999999500001000000041667, 9000000.00000099999999999983333, 3000000000000000000.00000000000 };
  double g2  [3] = { 999999999999.499999999998547169, 1.99999999999900000227919054857, -1.00000000000058058224130853973 };
  double gres[3] = { 1000000999999.49999949999954717, 9000002.00000099999900000211252, 2999999999999999999.00000000000 };
  double h1  [9] = { -.999999999999833334333333341667, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, 18.000000, 9000000000000., .199999999999900000000000008333e-5, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 1999999.99999900000455838101380, -1000000.00000132783114928373778, 1999999.99999900000455838101380, .199999999999729687741378569888e-5, -.199999772080920143160365849951e-5, -1000000.00000132783114928373778, -.199999772080920143160365849951e-5, -999999.999999500000000000041667 };
  double hres[9] = { -1.00000149449764928472945003566, 2000000.99999900000405838101380, -999999.999999327831149284737784, 2000000.99999900000405838101380, 18.0000019999999999972968774138, 8999999999999.99999800000227919, -999999.999999327831149284737784, 8999999999999.99999800000227919, -999999.999997500000000000375000 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000.99999999999983333, g1,h1), ad2(999999.999999499999999999294418, g2,h2), adresMaple(3000001000000.99999949999983333, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 1000000.99999949999950000004167, 9000000000000.00000100000000000, 3000000000000000000.00000200000 };
  double g2  [3] = { 540302305868.139715906438791493, 1.08060461173855862526710827790, -841470.984807896507399751229605 };
  double gres[3] = { 540303305869.139715406438291493, 9000000000001.08060561173855862, 2999999999999158529.01519410349 };
  double h1  [9] = { -1.00000099999983333316666667500, .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, 18000000., 9000000000000., 1.99999999999900000000000008333, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { -1.49449781595039611669398835430, 1080604.61174083781573234334091, -841470984807.896508147000137580, 1080604.61174083781573234334091, .108060290861369322041742597318e-5, -1.68294196961351382283976958025, -841470984807.896508147000137580, -1.68294196961351382283976958025, -540302.305868139717400936607443 };
  double hres[9] = { -2.49449881595022944986065502930, 1080605.61174083781523234334091, -841470984805.896508147001137580, 1080605.61174083781523234334091, 18000000.0000010806029086136932, 8999999999998.31705803038648618, -841470984805.896508147001137580, 8999999999998.31705803038648618, -540302.305866139717400936940776 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000000001.00000100000, g1,h1), ad2(540302.305868139716653687699468, g2,h2), adresMaple(3000000000000540303.30586913972, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 1000099.99999949995000000004167, 90000000000000.0000010000000000, 3000000000000000000.00002000000 };
  double g2  [3] = { -839071529076.452467203842107328, -1.67814305813011299986537726557, 544021.110889369812657498753876 };
  double gres[3] = { -839070528976.452467703892107328, 89999999999998.3218579418698870, 3000000000000544021.11090936981 };
  double h1  [9] = { -1.00009999999983331666666667500, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, 180000000., 9000000000000., 19.9999999999900000000000008333, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { -14.9449781595039611669398835430, -1678143.05810732109521302663549, 544021110889.369811910249845901, -1678143.05810732109521302663549, -.167816008937876704836220031272e-5, 1.08804222178101881727473038671, 544021110889.369811910249845901, 1.08804222178101881727473038671, 839071.529076452452258863947824 };
  double hres[9] = { -15.9450781595037944836065502180, -1678142.05810732109571302663549, 544021110909.369811910239845901, -1678142.05810732109571302663549, 179999999.999998321839910621233, 9000000000001.08804222178101882, 544021110909.369811910239845901, 9000000000001.08804222178101882, 839071.529078452452258863614491 };
  adreal<3,DO_HESS_TEST,double> ad1(30000000000000000001.0001000000, g1,h1), ad2(-839071.529076452459731353027576, g2,h2), adresMaple(29999999999999160929.4710235475, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 999999999998.500000000000541667, 9000000.00000099999999999983333, -1.00000000000033333333333331667 };
  double g2  [3] = { -5.29287877108646413508936669476, .497753338656322994800629279695e-5, .349990387355843642313191472831e-6 };
  double gres[3] = { 999999999993.207121228914077532, 9000000.00000597753338656306328, -.999999650009945977489691003478 };
  double h1  [9] = { -999999.999998833333333333508334, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, -18000000., 9., 1999999.99999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -6229630.89861960892202789922984, 11.8285710281927494698896506640, .349987272540394332508730458882, 11.8285710281927494698896506640, -.194662136348843453912836253844e-4, -.699980153304944274715783090204e-6, .349987272540394332508730458882, -.699980153304944274715783090204e-6, -.936752127533144786938532535075e-6 };
  double hres[9] = { -7229630.89861844225536123273817, 12.8285710281922494698896507058, 2000000.34998627254039433259206, 12.8285710281922494698896507058, -18000000.0000194662136348843454, 8.99999930001984669505572528422, 2000000.34998627254039433259206, 8.99999930001984669505572528422, .106324787246652187972813414826e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(-2000000.00000116666666666649167, g1,h1), ad2(-.217806332177665967407541707984e-5, g2,h2), adresMaple(-2000000.00000334472998844315134, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 0., -8.99999900000000000016666666667, -3.00000199999999999966666666667 };
  double g2  [3] = { .540308535499038337009858635342, -.108061146277392106432139509825e-5, .841467869992447196848041307680e-6 };
  double gres[3] = { .540308535499038337009858635342, -9.00000008061146277408773098806, -3.00000115853213000721946981863 };
  double h1  [9] = { 0., .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, 18., 9., -1.99999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 6.22963089861960892202789922984, -1.08061831381156269384091698161, .841464755176997887043580293731, -1.08061831381156269384091698161, .108062595145416938543683837558e-5, -.168293511857815138378548275990e-5, .841464755176997887043580293731, -.168293511857815138378548275990e-5, -.540302305868139717400936607443e-6 };
  double hres[9] = { 6.22963089861960892202789922984, -.80618313812062693840916939939e-1, -1.15853524482200211295641978960, -.80618313812062693840916939939e-1, 18.0000010806259514541693854369, 8.99999831706488142184861621452, -1.15853524482200211295641978960, 8.99999831706488142184861621452, .145969769413152694926573007589e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(.540305420683589027205397621393e-6, g2,h2), adresMaple(3.00000054030542068358902720540, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -.999999999998500000000000541667, .999999999999983333333333334167e-5, -2.99999999999800000000000033333 };
  double g2  [3] = { .999999999993270369101380432745, -.199999999999214896235837056381e-5, -.411481544930963779434728295659e-11 };
  double gres[3] = { -.522963089862010892202789918817e-11, .800000000000768437097496277787e-5, -3.00000000000211481544930997113 };
  double h1  [9] = { .999999999998833333333333508334e-6, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, -.18e-4, 9., .199999999999900000000000008333e-5, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -.622963089861960892202789922984e-5, -1.99999999998529792471674104429, -.722963089861944225536123257151e-5, -1.99999999998529792471674104429, .199999999997766028211004944836e-5, .885103764162918618855002455043e-11, -.722963089861944225536123257151e-5, .885103764162918618855002455043e-11, -.999999999999500000000000041667e-6 };
  double hres[9] = { -.522963089862077558869456572151e-5, -.999999999985797924716741002623, -.522963089862044225536123248818e-5, -.999999999985797924716741002623, -.160000000000223397178899505517e-4, 9.00000000000885103764162918619, -.522963089862044225536123248818e-5, 9.00000000000885103764162918619, .100000000000016666666666664166e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(-.399999999999883333333333350833e-5, g1,h1), ad2(.999999999996385184550690237206e-6, g2,h2), adresMaple(-.300000000000244814878264327112e-5, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 0., 9.00000099999999999983333333333, -2.99999800000000000033333333333 };
  double g2  [3] = { .540296076237241097792014579544, -.108059776069863780528235133153e-5, -.841474099623345816456963335580e-6 };
  double gres[3] = { .540296076237241097792014579544, 8.99999991940223930119552805098, -2.99999884147409962367914979029 };
  double h1  [9] = { 0., .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, -18., 9., 1.99999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -6.22963089861960892202789922984, -1.08059090966099617576282944817, -.841477214438795126261424349529, -1.08059090966099617576282944817, .108058327201838948416690805420e-5, .168294882065343464282452652662e-5, -.841477214438795126261424349529, .168294882065343464282452652662e-5, -.540302305868139717400936607443e-6 };
  double hres[9] = { -6.22963089861960892202789922984, -.8059090966149617576282940650e-1, 1.15852278556020487373857573380, -.8059090966149617576282940650e-1, -17.9999989194167279816105158331, 9.00000168294882065343464282452, 1.15852278556020487373857573380, 9.00000168294882065343464282452, .145969769413152694926573007589e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(.540299191052690407596475593493e-6, g2,h2), adresMaple(-2.99999945970080894730959240352, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 98.9999999999505000000000041250, 90.0000009999999999998333333333, -2.99998000000000000333333333333 };
  double g2  [3] = { -.839133825385438648348084226816, .167821156852932119971294672923e-5, .544017996073920503600286647901e-6 };
  double gres[3] = { 98.1608661745650613516519198982, 90.0000026782115685291545330462, -2.99997945598200392941282973304 };
  double h1  [9] = { -.989999999999835000000000008250e-4, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, -180., 9., 19.9999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -62.2963089861960892202789922984, 1.67828007890573749490816556281, .544014881258471193795825633952, 1.67828007890573749490816556281, -.167835645533180441086737950255e-5, -.108803537074109799728997344034e-5, .544014881258471193795825633952, -.108803537074109799728997344034e-5, .839071529076452452258863947824e-6 };
  double hres[9] = { -62.2964079861960892037789922984, 2.67828007890523749490816560448, 20.5440148812484711937958264673, 2.67828007890523749490816560448, -180.000001678356455331804410868, 8.99999891196462925890200271002, 20.5440148812484711937958264673, 8.99999891196462925890200271002, .283907152907611911892553063115e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(-29.9999010000000000165000000000, g1,h1), ad2(-.839102677230945550303474087320e-6, g2,h2), adresMaple(-29.9999018391026772474455503035, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 999999999999.500001000000041667, .999999999999983333333333334167e-5, 1.99999999999966666966666668333 };
  double g2  [3] = { .400000093675346086647812080521e-5, .200000187350625506628957521040e-5, .234999350217195961878431942012e-17 };
  double gres[3] = { 999999999999.500005000000978420, .120000018735060883996229085521e-4, 1.99999999999966667201666018550 };
  double h1  [9] = { -999999.999999833334333333341667, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, 18.000000, .9e-11, 1999999.99999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { 4.00000000000133333333333386668, 4.00000187350825506628957654374, .434999350217262628545098635346e-11, 4.00000187350825506628957654374, .187350825506628957921039840349e-5, .269998700434458590423530630689e-11, .434999350217262628545098635346e-11, .269998700434458590423530630689e-11, -.936752127533144786938532535075e-18 };
  double hres[9] = { -999995.999999833333000000008333, 5.00000187350775506628957658541, 1999999.99999900000434999358550, 5.00000187350775506628957658541, 18.0000018735082550662895792104, .116999870043445859042353063069e-10, 1999999.99999900000434999358550, .116999870043445859042353063069e-10, .199999999999872991453913353854e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(999999.999999833337333333341667, g1,h1), ad2(.200000093675279419981145387187e-11, g2,h2), adresMaple(999999.999999833339333334278420, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 1.00000099999949999950000004167, .999990999999833333333333341667e-6, -.199999999999666666666666668333e-5 };
  double g2  [3] = { -.345969769413319361593239725924e-11, -.91939538826572056519812811844e-12, .284147098480856317331916925497e-17 };
  double gres[3] = { 1.00000099999604030180586684806, .999990080604445067612768143539e-6, -.199999999999382519568185812015e-5 };
  double h1  [9] = { -.100000099999983333316666667500e-5, .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, -.18e-4, .9e-11, -1.99999999999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { -.400000000000133333333333386668e-5, -.291939538826772056519812945178e-5, .484147098480922983998583618831e-11, -.291939538826772056519812945178e-5, .108060461173227943480186788156e-5, .368294196961779301330500597659e-11, .484147098480922983998583618831e-11, .368294196961779301330500597659e-11, -.540302305868139717400936607443e-18 };
  double hres[9] = { -.500000100000116666650000054168e-5, .999997080604111732279434843537, -1.99999999999415852901519085349, .999997080604111732279434843537, -.169193953882677205651981321184e-4, .126829419696177930133050059766e-10, -1.99999999999415852901519085349, .126829419696177930133050059766e-10, .199999999999912636436079854361e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000099999683333316666667500e-5, g1,h1), ad2(-.145969769413252694926573032590e-17, g2,h2), adresMaple(.100000099999537363547253414805e-5, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { .100000099999949999950000004167e-5, .100000000000883333333333334167e-5, .200000299999966666666666668333e-11 };
  double g2  [3] = { .100000399999950000133333337500e-11, .200000199999900000200000008333e-11, .199999900000066666683333360001e-17 };
  double gres[3] = { .100000200000349999900000137500e-5, .100000200001083333233333534167e-5, .200000499999866666733333351667e-11 };
  double h1  [9] = { -.100000099999983333316666667500e-11, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, .18e-10, .9e-11, .199999999999900000000000008333e-5, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { .400000000000133333333333386668e-11, .200000399999900000400000008333e-5, .399999900000133333350000053335e-11, .200000399999900000400000008333e-5, .199999999999900000400000008334e-5, .199999800000200000033333466666e-11, .399999900000133333350000053335e-11, .199999800000200000033333466666e-11, -.999999999999500000000000041667e-18 };
  double hres[9] = { .299999900000150000016666719168e-11, 1.00000200000349999900000404167, .200000399999800000133333358333e-5, 1.00000200000349999900000404167, .200001799999900000400000008334e-5, .109999980000020000003333346666e-10, .200000399999800000133333358333e-5, .109999980000020000003333346666e-10, .199999999999866666666666718333e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000100000283333316666667500e-11, g1,h1), ad2(.100000199999950000066666670833e-17, g2,h2), adresMaple(.100000200000483333266666734167e-11, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 1.00000099999949999950000004167, .100000899999983333333333334167e-5, .200000000000266666666666668333e-5 };
  double g2  [3] = { .454030230586947305073427047412e-11, .308060461173827943480187454822e-11, .115852901519277016001416461171e-17 };
  double gres[3] = { 1.00000100000404030180586951472, .100001208060444507161276814354e-5, .200000000000382519568185945349e-5 };
  double h1  [9] = { -.100000099999983333316666667500e-5, .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, .18e-4, .9e-11, 1.99999999999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { .400000000000133333333333386668e-5, .508060461174027943480187588156e-5, .315852901519343682668083154505e-11, .508060461174027943480187588156e-5, .108060461174027943480187854822e-5, .31705803038620698669499669007e-12, .315852901519343682668083154505e-11, .31705803038620698669499669007e-12, -.540302305868139717400936607443e-18 };
  double hres[9] = { .299999900000150000016666719168e-5, 1.00000508060411174027943484354, 2.00000000000215852901519352015, 1.00000508060411174027943484354, .190806046117402794348018785482e-4, .931705803038620698669499669004e-11, 2.00000000000215852901519352015, .931705803038620698669499669004e-11, .199999999999912636436079854361e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000100000283333316666667500e-5, g1,h1), ad2(.254030230586880638406760354078e-17, g2,h2), adresMaple(.100000100000537363547253548139e-5, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 100.000000999949999999500004167, .100008999999983333333333334167e-5, .199999999999996666666666668333e-4 };
  double g2  [3] = { .391609284709368808810744747190e-10, .183218569418670950954822854376e-10, .254402111089003648007141459519e-17 };
  double gres[3] = { 100.000000999989160927970941048, .100010832185677520042842882395e-5, .200000000000022106877775568698e-4 };
  double h1  [9] = { -.100000000999983333333166667500e-3, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, .180e-3, .9e-11, 19.9999999999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { .400000000000133333333333386668e-4, .383218569418870950954822987710e-4, .454402111089070314673808152853e-11, .383218569418870950954822987710e-4, -.167814305811290490451767456232e-5, .308804222178073962680949665703e-11, .454402111089070314673808152853e-11, .308804222178073962680949665703e-11, .839071529076452452258863947824e-18 };
  double hres[9] = { -.600000009999699999998333288332e-4, 1.00003832185644188709509552397, 19.9999999999945440211108915364, 1.00003832185644188709509552397, .178321856941887095095482325437e-3, .120880422217807396268094966570e-10, 19.9999999999945440211108915364, .120880422217807396268094966570e-10, .200000000000050573819574313578e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000001000013333333166667500e-3, g1,h1), ad2(.191609284709302142144078053856e-16, g2,h2), adresMaple(.100000001000032494261637597715e-3, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 1000000000000.49999999999954167, 9000000.00000099999999999983333, 4.99999999999966666666666668333 };
  double g2  [3] = { 7.16638302615275370896643176492, .872454189669580909576042293725e-5, .349996616986742261922113500731e-6 };
  double gres[3] = { 1000000000007.66638302615229538, 9000000.00000972454189669564242, 5.00000034999628365340892860544 };
  double h1  [9] = { -1000000.00000083333333333317500, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, 18000000., 9., 1999999.99999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 6229630.89861960892202789922984, 15.5755795383253286176437808044, .349999731802191571726574514680, 15.5755795383253286176437808044, .232132221450169245390377555246e-4, .699993855380227533754826856920e-6, .349999731802191571726574514680, .699993855380227533754826856920e-6, -.936752127533144786938532535075e-6 };
  double hres[9] = { 5229630.89861877558869456605484, 16.5755795383248286176437808460, 2000000.34999873180219157180990, 16.5755795383248286176437808460, 18000000.0000232132221450169246, 9.00000069999385538022753375482, 2000000.34999873180219157180990, 9.00000069999385538022753375482, .106324787246652187972813414826e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(4000000.00000083333333333317500, g1,h1), ad2(.405156757684294924795248215000e-5, g2,h2), adresMaple(4000000.00000488490091017612425, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 1.99999999999900000000000008333, -8.99999900000000000016666666667, 2.99999800000000000033333333333 };
  double g2  [3] = { .540296076237241097792014579544, .108059776069863780528235133153e-5, .841474099623345816456963335580e-6 };
  double gres[3] = { 2.54029607623624109779201466287, -8.99999791940223930152886138432, 2.99999884147409962367914979029 };
  double h1  [9] = { -.199999999999966666666666668333e-5, .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, -18., 9., -1.99999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -6.22963089861960892202789922984, 1.08059090966099617576282944817, .841477214438795126261424349529, 1.08059090966099617576282944817, .108058327201838948416690805420e-5, .168294882065343464282452652662e-5, .841477214438795126261424349529, .168294882065343464282452652662e-5, -.540302305868139717400936607443e-6 };
  double hres[9] = { -6.22963289861960892169456589651, 2.08059090966049617576282948984, -1.15852278556020487373857573380, 2.08059090966049617576282948984, -17.9999989194167279816105158331, 9.00000168294882065343464282452, -1.15852278556020487373857573380, 9.00000168294882065343464282452, .145969769413152694926573007589e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(-2.99999800000000000033333333333, g1,h1), ad2(.540299191052690407596475593493e-6, g2,h2), adresMaple(-2.99999745970080894764292573685, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 1.00000000000049999999999954167, .999999999999983333333333334167e-5, 3.00000000000199999999999966667 };
  double g2  [3] = { 1.00000000000572963089861965059, .200000000000585103764162960285e-5, .211481544930997112768061627325e-11 };
  double gres[3] = { 2.00000000000622963089861919225, .120000000000056843709749629445e-4, 3.00000000000411481544930963779 };
  double h1  [9] = { -.100000000000083333333333317500e-5, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, .18e-4, 9., .199999999999900000000000008333e-5, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { .622963089861960892202789922984e-5, 2.00000000001270207528325912237, .522963089861977558869456588817e-5, 2.00000000001270207528325912237, .200000000002033971788995071830e-5, .485103764162985285521669118377e-11, .522963089861977558869456588817e-5, .485103764162985285521669118377e-11, -.999999999999500000000000041667e-6 };
  double hres[9] = { .522963089861877558869456605484e-5, 3.00000000001220207528325916404, .722963089861877558869456597150e-5, 3.00000000001220207528325916404, .200000000000203397178899507183e-4, 9.00000000000485103764162985285, .722963089861877558869456597150e-5, 9.00000000000485103764162985285, .100000000000016666666666664166e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(.400000000000083333333333317500e-5, g1,h1), ad2(.100000000000261481544930984613e-5, g2,h2), adresMaple(.500000000000344814878264302113e-5, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 1.99999999999900000000000008333, 9.00000099999999999983333333333, 3.00000199999999999966666666667 };
  double g2  [3] = { .540308535499038337009858635342, .108061146277392106432139509825e-5, -.841467869992447196848041307680e-6 };
  double gres[3] = { 2.54030853549803833700985871867, 9.00000208061146277375439765472, 3.00000115853213000721946981863 };
  double h1  [9] = { -.199999999999966666666666668333e-5, .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, 18., 9., 1.99999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 6.22963089861960892202789922984, 1.08061831381156269384091698161, -.841464755176997887043580293731, 1.08061831381156269384091698161, .108062595145416938543683837558e-5, -.168293511857815138378548275990e-5, -.841464755176997887043580293731, -.168293511857815138378548275990e-5, -.540302305868139717400936607443e-6 };
  double hres[9] = { 6.22962889861960892236123256317, 2.08061831381106269384091702328, 1.15853524482200211295641978960, 2.08061831381106269384091702328, 18.0000010806259514541693854369, 8.99999831706488142184861621452, 1.15853524482200211295641978960, 8.99999831706488142184861621452, .145969769413152694926573007589e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(3.00000199999999999966666666667, g1,h1), ad2(.540305420683589027205397621393e-6, g2,h2), adresMaple(3.00000254030542068325569387207, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 100.999999999949500000000004208, 90.0000009999999999998333333333, 3.00001999999999999666666666667 };
  double g2  [3] = { -.839009232767466256169643668832, -.167807454777648860932250906207e-5, .544024225704819123209208675801e-6 };
  double gres[3] = { 100.160990767182033743830360539, 89.9999993219254522233447240108, 3.00002054402422570148578987588 };
  double h1  [9] = { -.100999999999983166666666667508e-3, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, 180., 9., 19.9999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 62.2963089861960892202789922984, -1.67800603740007231412729022849, .544027340520268433013669689750, -1.67800603740007231412729022849, -.167792966097400539816807628875e-5, .108804907281638125632901720706e-5, .544027340520268433013669689750, .108804907281638125632901720706e-5, .839071529076452452258863947824e-6 };
  double hres[9] = { 62.2962079861960892371123256317, -.67800603740057231412729018682, 20.5440273405102684330136705231, -.67800603740057231412729018682, 179.999998322070339025994601832, 9.00000108804907281638125632902, 20.5440273405102684330136705231, 9.00000108804907281638125632902, .283907152907611911892553063115e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(30.0001009999999999831666666667, g1,h1), ad2(-.839040380921959354214253808328e-6, g2,h2), adresMaple(30.0001001609596190612073124524, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 1000000000009.49999999999504167, 900000000.000000999999999999833, 3001.99999999999966666666666668 };
  double g2  [3] = { 96.2686560631508253788897532395, .215757860758297588525611453364e-4, .349993515138509501299385911963e-4 };
  double gres[3] = { 1000000000105.76865606314586705, 900000000.000022575786075829592, 3002.00003499935118051761679662 };
  double h1  [9] = { -1000000.00000983333333333167500, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, 180000000., 900., 1999999.99999900000000000008333, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { 2593443.30983634668503649973204, 24.4165296009966219663516399713, 34.9993528105726050481119337146, 24.4165296009966219663516399713, .555715790021874991452260024676e-5, .699987288416938420921616352611e-5, 34.9993528105726050481119337146, .699987288416938420921616352611e-5, -.936752127533144786938532535075e-4 };
  double hres[9] = { 1593443.30982651335170316805704, 25.4165296009961219663516400130, 2000034.99935181057260504819527, 25.4165296009961219663516400130, 180000000.000005557157900218750, 900.000006999872884169384209216, 2000034.99935181057260504819527, 900.000006999872884169384209216, -.916752127533148120271865868242e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(3001000000.00000983333333333168, g1,h1), ad2(.949719344082326520363715033735e-4, g2,h2), adresMaple(3001000000.00010480526774156433, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 10.9999999999945000000000004583, -899.999999000000000000166666667, 2999.99999800000000000033333333 };
  double g2  [3] = { 54.0302279933706619037469757078, .108060432766192691811556183584e-4, .841470997775113055834235746812e-4 };
  double gres[3] = { 65.0302279933651619037469761661, -899.999988193956723380897485511, 3000.00008214709977751163891675 };
  double h1  [9] = { -.109999999999981666666666667583e-4, .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, -180., 900., -1.99999999999900000000000008333, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { -2.59344330983634668503649973204, 10.8060404358757440142925045679, 84.1471010742329605015969171995, 10.8060404358757440142925045679, .108060092808263428234153256935e-5, .168294225369014552999131602231e-4, 84.1471010742329605015969171995, .168294225369014552999131602231e-4, -.540302305868139717400936607443e-4 };
  double hres[9] = { -2.59345430983634668320316639871, 11.8060404358752440142925046096, 82.1471010742339605015969171162, 11.8060404358752440142925046096, -179.999998919399071917365717658, 900.000016829422536901455299913, 82.1471010742339605015969171162, 900.000016829422536901455299913, -.520302305868143050734269940610e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(-2999.99998900000000000183333333, g1,h1), ad2(.540302292900923168219203182261e-4, g2,h2), adresMaple(-2999.99993496977070990951651141, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 9.99999999999599999999999991667, .900999999999999833333333333342e-3, 3000.00000000000199999999999967 };
  double g2  [3] = { 99.9999999999525934433098405134, .199999999999928407435251676964e-4, -.987032783450651599908150843007e-10 };
  double gres[3] = { 109.999999999948593443309840430, .920999999999992674076858501038e-3, 2999.99999999990329672165493450 };
  double h1  [9] = { -.999999999999933333333333325000e-5, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, .180e-3, 900., .199999999999900000000000008333e-5, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { .259344330983634668503649973204e-5, 19.9999999999956814870503345595, -.974065566901469866482968344347e-4, 19.9999999999956814870503345595, .200000000000268365364515254367e-5, -.171592564748298035528761721984e-10, -.974065566901469866482968344347e-4, -.171592564748298035528761721984e-10, -.999999999999500000000000041667e-4 };
  double hres[9] = { -.740655669016298664829683351796e-5, 20.9999999999951814870503346012, -.954065566901479866482968343513e-4, 20.9999999999951814870503346012, .182000000000002683653645152543e-3, 899.999999999982840743525170196, -.954065566901479866482968343513e-4, 899.999999999982840743525170196, -.979999999999503333333333374834e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(.300999999999999933333333333325e-2, g1,h1), ad2(.999999999999512967216549223400e-4, g2,h2), adresMaple(.310999999999995063005498825559e-2, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 10.9999999999945000000000004583, 900.000000999999999999833333333, 3000.00000199999999999966666667 };
  double g2  [3] = { 54.0302331802572815764403457808, .108060489581063195148818459394e-4, -.841470971840679957470768896448e-4 };
  double gres[3] = { 65.0302331802517815764403462391, 900.000011806048958106152848215, 2999.99991785290281593167091959 };
  double h1  [9] = { -.109999999999981666666666667583e-4, .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, 180., 900., 1.99999999999900000000000008333, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { 2.59344330983634668503649973204, 10.8060517988498446817449597299, -84.1470958873463408289035471265, 10.8060517988498446817449597299, .108060829538992458726221386043e-5, -.168294168554144049661869326421e-4, -84.1470958873463408289035471265, -.168294168554144049661869326421e-4, -.540302305868139717400936607443e-4 };
  double hres[9] = { 2.59343230983634668686983306537, 11.8060517988493446817449597716, -82.1470958873473408289035470432, 11.8060517988493446817449597716, 180.000001080608295389924587262, 899.999983170583144585595033813, -82.1470958873473408289035470432, 899.999983170583144585595033813, -.520302305868143050734269940610e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(3000.00001099999999999816666667, g1,h1), ad2(.540302318835356266582670032625e-4, g2,h2), adresMaple(3000.00006503023188353379332493, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 109.999999999945000000000004583, 9000.00000099999999999983333333, 3000.00001999999999999666666667 };
  double g2  [3] = { -83.9071269732121468624195444174, -.167814021740937973765461410516e-4, .544021123856586362586481087033e-4 };
  double gres[3] = { 26.0928730267328531375804601656, 8999.99998421859782590603595678, 3000.00007440211238565530292531 };
  double h1  [9] = { -.109999999999981666666666667583e-3, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, 1800., 900., 19.9999999999900000000000008333, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { 25.9344330983634668503649973204, -16.7813737666585457079150031466, 54.4021136823802911768214512216, -16.7813737666585457079150031466, -.167810622161645337991432144030e-5, .108804250585309214349580670275e-4, 54.4021136823802911768214512216, .108804250585309214349580670275e-4, .839071529076452452258863947824e-4 };
  double hres[9] = { 25.9343230983634668686983306537, -15.7813737666590457079150031049, 74.4021136823702911768214520549, -15.7813737666590457079150031049, 1799.99999832189377838354662008, 900.000010880425058530921434958, 74.4021136823702911768214520549, 900.000010880425058530921434958, .859071529076449118925530614657e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(30000.0001099999999999816666667, g1,h1), ad2(-.839071399404286960441529695999e-4, g2,h2), adresMaple(30000.0000260928600595529706225, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 540302846170.445585540654008380, 9000000000000000000.84147098481, 3000000000001682941.96961579301 };
  double g2  [3] = { 936750633035.328836542415841087, 4152694.72030135258206088432226, 349993502170.545703209677288723 };
  double gres[3] = { 1477053479205.77442208306984947, 9000000000004152695.56177233739, 3000000349995185112.51531900268 };
  double h1  [9] = { -841471826278.881314549008974132, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18000000000000., 9000000000000., 1080604.61173627943480187321489, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { -1494497.81595039611669398835430, 6431885.18553641559024470357437, 349993502169.798454301702090664, 6431885.18553641559024470357437, -1703120.71271012938095213289330, 699989.283533051139298313157381, 349993502169.798454301702090664, 699989.283533051139298313157381, -936752127533.144786938532535075 };
  double hres[9] = { -841473320776.697264945125668120, 6431885.72583872145838442097531, 349994582774.410190581136892538, 6431885.72583872145838442097531, 17999998296879.2872898706190479, 9000000699989.28353305113929831, 349994582774.410190581136892538, 9000000699989.28353305113929831, -936752127531.461844968916742062 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000841471826278.88131, g1,h1), ad2(936751380284.236811740474188081, g2,h2), adresMaple(3000000000001778223206563.11812, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 540302.846170445585540654008380, -8999999999999.15852901519210349, 2999999999999999998.31705803038 };
  double g2  [3] = { 540302305869.634215216887003560, 1080602.33254581419973886503107, 841470984807.149257744527123572 };
  double gres[3] = { 540302846172.480385662472544214, -8999998919396.82598320099236463, 3000000841470984805.46631577490 };
  double h1  [9] = { -841471.826278881314549008974132, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -18000000., 9000000000000., -1.08060461173627943480187321489, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { 1.49449781595039611669398835430, 1080600.05335534896467585684725, 841470984806.402008836551925513, 1080600.05335534896467585684725, 2.78372719795066388204357998526, 1682944.24880625824836801282708, 841470984806.402008836551925513, 1682944.24880625824836801282708, -540302305868.139717400936607443 };
  double hres[9] = { -841470.331781065364152892280144, 1080600.59365765483281557424819, 841470984805.321404224815646079, 1080600.59365765483281557424819, -17999997.2162728020493361179564, 9000001682944.24880625824836801, 841470984805.321404224815646079, 9000001682944.24880625824836801, -540302305866.456775431320814430 };
  adreal<3,DO_HESS_TEST,double> ad1(-2999999999999158528.17372111869, g1,h1), ad2(540302305868.886966308911805501, g2,h2), adresMaple(-2999999459696852659.28675480977, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 540302.305868139717941238913311, 9000000.84147098480789650665250, 3000000000000000000.00000168294 };
  double g2  [3] = { 999999999999.499998505502225717, 2000000.00000127919046523514634, -1000000.74724874130853139168866 };
  double gres[3] = { 1000000540301.80586664522016696, 11000000.8414722639983617417988, 2999999999998999999.25275294163 };
  double h1  [9] = { -841470.984807896507493973306438, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, 18.000000, 9000000000000., .108060461173627943480187321489e-5, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 2000000.00000355838093047020935, -1000001.49449764928372945003566, 2000000.00000355838093047020935, 1.99999829687641378561555284162, .27919046523539634151715256878, -1000001.49449764928372945003566, .27919046523539634151715256878, -999999999999.500000000000041667 };
  double hres[9] = { -841470.984809391005309923702555, 2000000.54030586424907018761028, -1000001.49449656867911771375622, 2000000.54030586424907018761028, 19.9999982968764137856155528416, 9000000000000.27919046523539634, -1000001.49449656867911771375622, 9000000000000.27919046523539634, -999999999997.817058030384248654 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000841470.98480789650749397, g1,h1), ad2(999999999999.499999252751133692, g2,h2), adresMaple(4000000841470.48480714925862766, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 540302.846170445585540654008380, 9000000000000.84147098480789651, 3000000000000000001.68294196962 };
  double g2  [3] = { 540302305866.645219584986211326, 1080606.89092674466986488139871, -841470984808.643755560477519688 };
  double gres[3] = { 540302846169.491390030571751980, 9000001080607.73239772947776139, 2999999158529015193.03918640913 };
  double h1  [9] = { -841471.826278881314549008974132, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 18000000., 9000000000000., 1.08060461173627943480187321489, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { -1.49449781595039611669398835430, 1080609.17011720990492788958253, -841470984809.391004468452717747, 1080609.17011720990492788958253, -.62251797447810501243983355548, -1682939.69042532777824199645944, -841470984809.391004468452717747, -1682939.69042532777824199645944, -540302305868.139717400936607443 };
  double hres[9] = { -841473.320776697264945125668120, 1080609.71041951577306760698346, -841470984808.310399856716438312, 1080609.71041951577306760698346, 17999999.3774820255218949875602, 8999998317060.30957467222175801, -841470984808.310399856716438312, 8999998317060.30957467222175801, -540302305866.456775431320814430 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000841471.82627888131, g1,h1), ad2(540302305867.392468492961409385, g2,h2), adresMaple(3000000540303147339.21874737427, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 540356.336098726531372676701104, 90000000000000.8414709848078965, 3000000000000000016.82941969616 };
  double g2  [3] = { -839071529091.397430418367908991, -1678120.26624825255388764605746, 544021110888.622564496772463793 };
  double gres[3] = { -839070988735.061331691836536314, 89999998321880.5752227322540089, 3000000544021110905.45198419293 };
  double h1  [9] = { -841555.131906377296303167571862, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 180000000., 9000000000000., 10.8060461173627943480187321489, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { -14.9449781595039611669398835430, -1678097.47434360020325756421926, 544021110887.875315588797265734, -1678097.47434360020325756421926, -18.7093689202967493769347955994, 1088044.50096920486187250350752, 544021110887.875315588797265734, 1088044.50096920486187250350752, 839071529076.452452258863947824 };
  double hres[9] = { -841570.076884536800264334511746, -1678096.93404129433511784681833, 544021110898.681361706160060082, -1678096.93404129433511784681833, 179999981.290631079703250623065, 9000001088044.50096920486187251, 544021110898.681361706160060082, 9000001088044.50096920486187251, 839071529078.135394228479740837 };
  adreal<3,DO_HESS_TEST,double> ad1(30000000000000841555.1319063773, g1,h1), ad2(-839071529083.924941338615928407, g2,h2), adresMaple(29999999160929312471.2069650386, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 540302305867.599415095068467726, 9000000.84147098480789650665250, 1682938.96961579301330500464326 };
  double g2  [3] = { -6229629.96186748138888311229131, 6851035.76812526445559378399003, -2.76482194713851150889629712814 };
  double gres[3] = { 540296076237.637547613679584614, 15851036.6095962492634902906425, 1682936.20479384587479349574696 };
  double h1  [9] = { -841470984807.055035667694425123, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, -18000000., 9., 1080604.61173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -6229630.89861960892202789922984, 13702073.4097547839774771418571, -5.87963739644831596991024674306, 13702073.4097547839774771418571, -21339716.0164463798988711165774, 6.15105063728693361764805289354, -5.87963739644831596991024674306, 6.15105063728693361764805289354, -.936752127533144786938532535075 };
  double hres[9] = { -841477214437.953655276616453022, 13702073.9500570898456168592580, 1080598.73209888298648590330464, 13702073.9500570898456168592580, -39339716.0164463798988711165774, 15.1510506372869336176480528935, 1080598.73209888298648590330464, 15.1510506372869336176480528935, .746189842082648226366472108185 };
  adreal<3,DO_HESS_TEST,double> ad1(841467984807.055035667694425123, g1,h1), ad2(-3114814.51255767692786916267639, g2,h2), adresMaple(841464869992.542477990766555960, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 0., -8.15852901519210349334749767837, -4.68294196961579301330500464326 };
  double g2  [3] = { 6.76993320448774863942883583728, -7.93164225336579895668523108199, -2.27334446450190795436144729329 };
  double gres[3] = { 6.76993320448774863942883583728, -16.0901712685579024500327287604, -6.95628643411770096766645193655 };
  double h1  [9] = { 0., .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., -1.08060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, -14.7826798949953184785685889491, -5.38815991381171241537539690821, -14.7826798949953184785685889491, 22.4203225016869143999625636694, 5.16809567201372650857835322384, -5.38815991381171241537539690821, 5.16809567201372650857835322384, -.540302305868139717400936607443 };
  double hres[9] = { 6.22963089861960892202789922984, -14.2423775891271787611676523417, -6.46876452554799185017727012310, -14.2423775891271787611676523417, 40.4203225016869143999625636694, 14.1680956720137265085783532238, -6.46876452554799185017727012310, 14.1680956720137265085783532238, 1.14263966374765329590406803582 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(3.65511775517794417841488622236, g2,h2), adresMaple(6.65511775517794417841488622236, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -.540302305867599415095068467726, .841479984807896506652502321630, -2.99999831705803038420698669500 };
  double g2  [3] = { .999993770368601380391078013768, -1.99999314896135837048047819997, -3.11481644930980446084728294825 };
  double gres[3] = { .459691464501001965296009546042, -1.15851316415346186382797587834, -6.11481476636783484505426964325 };
  double h1  [9] = { .841470984807055035667694425123, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, -.18e-4, 9., .108060461173627943480187321489e-5, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -.622963089861960892202789922984e-5, -1.99998629792371674096095631661, -6.22963189861960892186123256317, -1.99998629792371674096095631661, 1.99997866028111004936503492264, 6.85103964162951952155002453377, -6.22963189861960892186123256317, 6.85103964162951952155002453377, -.999999999999500000000000041667 };
  double hres[9] = { .841464755176156416058772397224, -1.45968399205557702356001970917, -6.22963081801499718558179776130, -1.45968399205557702356001970917, 1.99996066028111004936503492264, 15.8510396416295195215500245338, -6.22963081801499718558179776130, 15.8510396416295195215500245338, .682941969616293013305004601593 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841473984807055035667694425123, g1,h1), ad2(.999996885184050690195539027717, g2,h2), adresMaple(.158522900376995654527844602594, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 0., 9.84147098480789650665250232163, -1.31705803038420698669499535674 };
  double g2  [3] = { -5.68932859275146920462696262240, 5.77043302989324008708148465221, -3.95628643411770096766645193655 };
  double gres[3] = { -5.68932859275146920462696262240, 15.6119040147011365937339869738, -5.27334446450190795436144729329 };
  double h1  [9] = { 0., .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, -18., 9., 1.08060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -6.22963089861960892202789922984, 12.6214706715227596089648425193, -7.07110188342750542868040155147, 12.6214706715227596089648425193, -20.2591132782143555303588172396, 8.53397961124531253518836251036, -7.07110188342750542868040155147, 8.53397961124531253518836251036, -.540302305868139717400936607443 };
  double hres[9] = { -6.22963089861960892202789922984, 13.1617729773908993263657791268, -5.99049727169122599387852833658, 13.1617729773908993263657791268, -38.2591132782143555303588172396, 17.5339796112453125351883625104, -5.99049727169122599387852833658, 17.5339796112453125351883625104, 1.14263966374765329590406803582 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(-2.57451314344166474361301300748, g2,h2), adresMaple(-5.57451314344166474361301300748, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 53.4899282809458320226927241369, 90.8414709848078965066525023216, 13.8294196961579301330500464326 };
  double g2  [3] = { -63.1353805152725416725378562462, 70.1885194744481001233513065666, -2.57079433842043464760920195307 };
  double gres[3] = { -9.64545223432670964984513210932, 161.029990459255996630003808889, 11.2586253577374954854408444796 };
  double h1  [9] = { -83.3056274959817541585977298414, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, -180., 9., 10.8060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -62.2963089861960892202789922984, 138.698895890743295342184885238, -5.68560978773023910862315156799, 138.698895890743295342184885238, -215.075321957659254556124632441, 5.76299541985077989507386254340, -5.68560978773023910862315156799, 5.76299541985077989507386254340, .839071529076452452258863947824 };
  double hres[9] = { -145.601936482177843378876722140, 139.239198196611435059585821845, 5.12043632963255523939558058091, 139.239198196611435059585821845, -395.075321957659254556124632441, 14.7629954198507798950738625434, 5.12043632963255523939558058091, 14.7629954198507798950738625434, 2.52201349869224546556386859108 };
  adreal<3,DO_HESS_TEST,double> ad1(53.3056274959817541585977298414, g1,h1), ad2(-31.9872260221744970623983600970, g2,h2), adresMaple(21.3184014738072570961993697444, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 540302305868.139717941238913311, .841479984807896506652502321630, 1682941.96961579301330500764326 };
  double g2  [3] = { 4.00000000000227008546086701147, 2000000.00000387350425506762290, .200000034999416883795961905099e-5 };
  double gres[3] = { 540302305872.139717941241183396, 2000000.84148385831215157427540, 1682941.96961779301365500181210 };
  double h1  [9] = { -841470984807.896507493973306438, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18.000000, .9e-11, 1080604.61173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { 4.00000000000133333333333386668, 4000000.00000587350425506895624, .400000034999483550462628598433e-5, 4000000.00000587350425506895624, 5.87350425507162290721040293683, 2.00000069998900434258590556863, .400000034999483550462628598433e-5, 2.00000069998900434258590556863, -.936752127533144786938532535075e-12 };
  double hres[9] = { -841470984803.896507493971973105, 4000000.54030817937239478635718, 1080604.61174027943515186805039, 4000000.54030817937239478635718, 23.8735042550716229072104029368, 2.00000069999800434258590556863, 1080604.61174027943515186805039, 2.00000069999800434258590556863, 1.68294196961485626117747149847 };
  adreal<3,DO_HESS_TEST,double> ad1(841470984807.896507493976306438, g1,h1), ad2(2.00000000000160341879420007813, g2,h2), adresMaple(841470984809.896507493977909857, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380, .841470984798896506652502321630, -1.68294196961579301030500464326 };
  double g2  [3] = { -.399999945969902746519361646574e-5, -1.99999891939738826372056653146, .200000084147165147456317358584e-5 };
  double gres[3] = { .540298846170985886513188814763, -1.15852793459849175706806420983, -1.68293996961495153865353008008 };
  double h1  [9] = { -.841471826278881314549008974132, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -.18e-4, .9e-11, -1.08060461173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { -.400000000000133333333333386668e-5, -3.99999891939938826372056786480, .400000084147231814122984051918e-5, -3.99999891939938826372056786480, 1.08060061173627942946853988155, 2.00000168294396961579301463833, .400000084147231814122984051918e-5, 2.00000168294396961579301463833, -.540302305868139717400936607443e-12 };
  double hres[9] = { -.841475826278881315882342307466, -3.45969661353124854631963125736, -1.08060061173543796248373198505, -3.45969661353124854631963125736, 1.08058261173627942946853988155, 2.00000168295296961579301463833, -1.08060061173543796248373198505, 2.00000168295296961579301463833, 1.68294196961525271099913650354 };
  adreal<3,DO_HESS_TEST,double> ad1(.841471826278881311549008974132, g1,h1), ad2(-.199999945969836079852694953240e-5, g2,h2), adresMaple(.841469826279421613188210447182, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380e-6, .841470984807896515652502321630, .168294196961879301330500464326e-5 };
  double g2  [3] = { .500000000000083333333333390835e-11, .400000000000100000000000141666e-5, .199999999999966666666666710001e-5 };
  double gres[3] = { .540307846170445586373987341714e-6, .841474984807896516652502321631, .368294196961845967997167174327e-5 };
  double h1  [9] = { -.841471826278881314549008974132e-6, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .18e-10, .9e-11, .108060461173627943480187321489e-5, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-11, .600000000000300000000000275000e-5, .400000000000033333333333403335e-5, .600000000000300000000000275000e-5, 2.00000000000300000000000541666, 2.00000000000000000000000166666, .400000000000033333333333403335e-5, 2.00000000000000000000000166666, -.999999999999500000000000041667e-12 };
  double hres[9] = { -.841467826278881313215675640798e-6, .540308305868139720400936607446, .508060461173661276813520724824e-5, .540308305868139720400936607446, 2.00000000002100000000000541666, 2.00000000000900000000000166666, .508060461173661276813520724824e-5, 2.00000000000900000000000166666, 1.68294196961479301330500514326 };
  adreal<3,DO_HESS_TEST,double> ad1(.841471826278881317549008974132e-6, g1,h1), ad2(.300000000000016666666666697501e-11, g2,h2), adresMaple(.841474826278881317715675640799e-6, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380, .841470984816896506652502321630, 1.68294196961579301630500464326 };
  double g2  [3] = { .400000054030363920147305126762e-5, 2.00000108060661173627943613520, .199999915852968185877016028084e-5 };
  double gres[3] = { .540306846170985889179855481431, 2.84147206542350824293193845683, 1.68294396961495154598686341342 };
  double h1  [9] = { -.841471826278881314549008974132, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, .18e-4, .9e-11, 1.08060461173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-5, 4.00000108060861173627943746854, .399999915853034852543682721418e-5, 4.00000108060861173627943746854, 1.08060861173627944013520654823, 1.99999831706003038420698802833, .399999915853034852543682721418e-5, 1.99999831706003038420698802833, -.540302305868139717400936607443e-12 };
  double hres[9] = { -.841467826278881313215675640798, 4.54030338647675145368037407599, 1.08060861173543796515039865171, 4.54030338647675145368037407599, 1.08062661173627944013520654823, 1.99999831706903038420698802833, 1.08060861173543796515039865171, 1.99999831706903038420698802833, 1.68294196961525271099913650354 };
  adreal<3,DO_HESS_TEST,double> ad1(.841471826278881317549008974132, g1,h1), ad2(.200000054030297253480638433428e-5, g2,h2), adresMaple(.841473826279421620521543780516, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 54.0302311271162776082333781452, .841470984897896506652502321630, 16.8294196961579301360500464326 };
  double g2  [3] = { .399999991609418042568808864079e-4, 19.9999983218769418470951088156, .200000054402177755603648033809e-5 };
  double gres[3] = { 54.0302711271154385500376350260, 20.8414693067748383537476111372, 16.8294216961584741578276024691 };
  double h1  [9] = { -84.1470993222606354731467388155, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, .180e-3, .9e-11, 10.8060461173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-4, 39.9999983218969418470951221490, .400000054402244422270314727143e-5, 39.9999983218969418470951221490, -1.67810305815290485118439456227, 2.00000108804422177873962814283, .400000054402244422270314727143e-5, 2.00000108804422177873962814283, .839071529076452452258863947824e-12 };
  double hres[9] = { -84.1470593222606354598134054822, 40.5403006277650815644960587564, 10.8060501173633383704629548520, 40.5403006277650815644960587564, -1.67792305815290485118439456227, 2.00000108805322177873962814283, 10.8060501173633383704629548520, 2.00000108805322177873962814283, 1.68294196961663208483408109571 };
  adreal<3,DO_HESS_TEST,double> ad1(84.1470993222606355031467388155, g1,h1), ad2(.199999991609351375902142170745e-4, g2,h2), adresMaple(84.1471193222597964382843290297, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 540302305868.680019706804747160, 9000000.84147098480789650665250, 1682944.96961579301330500464326 };
  double g2  [3] = { 6229631.83537173645517268616837, 6851039.51513377458817293174417, 3.46480895148109741313160210170 };
  double gres[3] = { 540308535500.515391443259919846, 15851040.3566047593960694383967, 1682948.43442474449440241777486 };
  double h1  [9] = { -841470984808.737977637310218137, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18000000., 9., 1080604.61173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { 6229630.89861960892202789922984, 13702077.1567632941100562896113, 6.57962440079090187414555171662, 13702077.1567632941100562896113, 21339719.7634548900314502643316, 7.55102464597210542611866284066, 6.57962440079090187414555171662, 7.55102464597210542611866284066, -.936752127533144786938532535075 };
  double hres[9] = { -841464755177.839358028388190238, 13702077.6970655999781960070122, 1080611.19136068022570374736044, 13702077.6970655999781960070122, 39339719.7634548900314502643316, 16.5510246459721054261186628407, 1080611.19136068022570374736044, 16.5510246459721054261186628407, .746189842082648226366472108185 };
  adreal<3,DO_HESS_TEST,double> ad1(841473984808.737977637310218137, g1,h1), ad2(3114816.38606193199415873655345, g2,h2), adresMaple(841477099625.124039569304376874, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 1.08060461173627943480187321489, -8.15852901519210349334749767837, 1.31705803038420698669499535674 };
  double g2  [3] = { -5.68932859275146920462696262240, -5.77043302989324008708148465221, 3.95628643411770096766645193655 };
  double gres[3] = { -4.60872398101518976982508940751, -13.9289620450853435804289823306, 5.27334446450190795436144729329 };
  double h1  [9] = { -1.68294196961579301330500464326, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -18., 9., -1.08060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -6.22963089861960892202789922984, -12.6214706715227596089648425193, 7.07110188342750542868040155147, -12.6214706715227596089648425193, -20.2591132782143555303588172396, 8.53397961124531253518836251036, 7.07110188342750542868040155147, 8.53397961124531253518836251036, -.540302305868139717400936607443 };
  double hres[9] = { -7.91257286823540193533290387310, -12.0811683656546198915639059119, 5.99049727169122599387852833658, -12.0811683656546198915639059119, -38.2591132782143555303588172396, 17.5339796112453125351883625104, 5.99049727169122599387852833658, 17.5339796112453125351883625104, 1.14263966374765329590406803582 };
  adreal<3,DO_HESS_TEST,double> ad1(-1.31705803038420698669499535674, g1,h1), ad2(-2.57451314344166474361301300748, g2,h2), adresMaple(-3.89157117382587173030800836422, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { .540302305868680019706804747160, .841479984807896506652502321630, 3.00000168294196961579301330500 };
  double g2  [3] = { 1.00000622963039861960892206957, 2.00000685103664162951952196669, 3.11481444930980446118061628159 };
  double gres[3] = { 1.54030853549907863931572681673, 2.84148683584453813617202428832, 6.11481613225177407697362958659 };
  double h1  [9] = { -.841470984808737977637310218137, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .18e-4, 9., .108060461173627943480187321489e-5, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { .622963089861960892202789922984e-5, 2.00001370207428325903904385005, 6.22962989861960892219456589651, 2.00001370207428325903904385005, 2.00002133971688995063496524402, 6.85103564162951952221669120043, 6.22962989861960892219456589651, 6.85103564162951952221669120043, -.999999999999500000000000041667 };
  double hres[9] = { -.841464755177839358028388190238, 2.54031600794242297643998045749, 6.22963097922422065847400069838, 2.54031600794242297643998045749, 2.00003933971688995063496524402, 15.8510356416295195222166912004, 6.22963097922422065847400069838, 15.8510356416295195222166912004, .682941969616293013305004601593 };
  adreal<3,DO_HESS_TEST,double> ad1(.841473984808737977637310218137, g1,h1), ad2(1.00000311481494930980446105562, g2,h2), adresMaple(1.84147709962368728744177127375, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 1.08060461173627943480187321489, 9.84147098480789650665250232163, 4.68294196961579301330500464326 };
  double g2  [3] = { 6.76993320448774863942883583728, 7.93164225336579895668523108199, 2.27334446450190795436144729329 };
  double gres[3] = { 7.85053781622402807423070905217, 17.7731132381736954633377334036, 6.95628643411770096766645193655 };
  double h1  [9] = { -1.68294196961579301330500464326, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., 1.08060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, 14.7826798949953184785685889491, 5.38815991381171241537539690821, 14.7826798949953184785685889491, 22.4203225016869143999625636694, 5.16809567201372650857835322384, 5.38815991381171241537539690821, 5.16809567201372650857835322384, -.540302305868139717400936607443 };
  double hres[9] = { 4.54668892900381590872289458658, 15.3229822008634581959695255565, 6.46876452554799185017727012310, 15.3229822008634581959695255565, 40.4203225016869143999625636694, 14.1680956720137265085783532238, 6.46876452554799185017727012310, 14.1680956720137265085783532238, 1.14263966374765329590406803582 };
  adreal<3,DO_HESS_TEST,double> ad1(4.68294196961579301330500464326, g1,h1), ad2(3.65511775517794417841488622236, g2,h2), adresMaple(8.33805972479373719171989086562, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 54.5705328926821114574945973517, 90.8414709848078965066525023216, 19.8294196961579301330500464326 };
  double g2  [3] = { 61.4572374571196367680201283506, 66.8322333581422903143158507754, 3.65883656019917427441869727677 };
  double gres[3] = { 116.027770349801748225514725702, 157.673704342950186820968353097, 23.4882562563571044074687437094 };
  double h1  [9] = { -84.9885694655975471719027344846, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 180., 9., 10.8060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { 62.2963089861960892202789922984, 135.342609774437485533149429446, 6.77365200950897873543264689169, 135.342609774437485533149429446, 211.719035841353444747089176649, 7.93907986340825914869285319080, 6.77365200950897873543264689169, 7.93907986340825914869285319080, .839071529076452452258863947824 };
  double hres[9] = { -22.6922604794014579516237421862, 135.882912080305625250550366053, 17.5796981268717730834513790406, 135.882912080305625250550366053, 391.719035841353444747089176649, 16.9390798634082591486928531908, 17.5796981268717730834513790406, 16.9390798634082591486928531908, 2.52201349869224546556386859108 };
  adreal<3,DO_HESS_TEST,double> ad1(114.988569465597547171902734485, g1,h1), ad2(30.3090829640215921578806322014, g2,h2), adresMaple(145.297652429619139329783366686, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 540302305873.542740459618004617, 900000000.841470984807896506653, 1685941.96961579301330500464326 };
  double g2  [3] = { 2593536.98504909999951519358529, 2840762.26020941377668623340556, 36.2960718720474685542834985441 };
  double gres[3] = { 540304899410.527789559617519811, 902840763.101680398584582740059, 1685978.26568766506077355892676 };
  double h1  [9] = { -841470984816.311216500581286697, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 180000000., 900., 1080604.61173627943480187321489, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { 2593443.30983634668503649973204, 5681505.78537627689047672804046, 37.5927935269656418968017484101, 5681505.78537627689047672804046, 3683655.51865671540693510905368, 9.84061356859272215614354437053, 37.5927935269656418968017484101, 9.84061356859272215614354437053, -93.6752127533144786938532535075 };
  double hres[9] = { -841468391373.001380153896250197, 5681506.32567858275861644544140, 1080642.20452980640044377001664, 5681506.32567858275861644544140, 183683655.518656715406935109054, 909.840613568592722156143544371, 1080642.20452980640044377001664, 909.840613568592722156143544371, -91.9922707836986856805482488642 };
  adreal<3,DO_HESS_TEST,double> ad1(844470984816.311216500581286697, g1,h1), ad2(1296815.33013092665699694371927, g2,h2), adresMaple(844472281631.641347427238283641, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 5.94332536454953689141030268187, -899.158529015192103493347497678, 2998.31705803038420698669499536 };
  double g2  [3] = { 51.4367872769776250550571610123, 7.96530259219593123422823751399, 85.4438201357078240077684820290 };
  double gres[3] = { 57.3801126415271619464674636941, -891.193226422996172259119260164, 3083.76087816609203099446347739 };
  double h1  [9] = { -9.25618083288686157317752553793, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -180., 900., -1.08060461173627943480187321489, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { -2.59344330983634668503649973204, 5.12455906702906812043774287909, 86.7405417906259973502867318950, 5.12455906702906812043774287909, -2.60304903341618090584366196172, 19.6701632213247932468405410675, 86.7405417906259973502867318950, 19.6701632213247932468405410675, -54.0302305868139717400936607443 };
  double hres[9] = { -11.8496241427232082582140252700, 5.66486137289720783783867948653, 85.6599371788897179154848586802, 5.66486137289720783783867948653, -182.603049033416180905843661962, 919.670163221324793246840541068, 85.6599371788897179154848586802, 919.670163221324793246840541068, -52.3472886171981787267886561010 };
  adreal<3,DO_HESS_TEST,double> ad1(-2990.74381916711313842682247446, g1,h1), ad2(52.7335089318957983975754108783, g2,h2), adresMaple(-2938.01031023521734002924706359, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 5.40302305868193747631523421415, .842370984807896506652502321630, 3000.00000168294196961579301331 };
  double g2  [3] = { 100.000002593393309836346689203, 20.0000028407335251668631146238, 1.29662165491817335918491653269 };
  double gres[3] = { 105.403025652075247312661923417, 20.8423738255414216735156169454, 3001.29662333786014297497792985 };
  double h1  [9] = { -8.41470984807980653750983111281, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .180e-3, 900., .108060461173627943480187321489e-5, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { .259344330983634668503649973204e-5, 20.0000056814770503337262284143, 2.59334330983634670170316639871, 20.0000056814770503337262284143, 2.00000368365264515246034072887, 2.84072352516686311712382796824, 2.59334330983634670170316639871, 2.84072352516686311712382796824, -99.9999999999500000000000041667 };
  double hres[9] = { -8.41470725463649670116314607631, 20.5403079873451900511271650217, 2.59334439044095843798260120058, 20.5403079873451900511271650217, 2.00018368365264515246034072887, 902.840723525166863117123827968, 2.59334439044095843798260120058, 902.840723525166863117123827968, -98.3170580303342069866949995234 };
  adreal<3,DO_HESS_TEST,double> ad1(8.41770984807980653750983111281, g1,h1), ad2(100.000001296671654918173346685, g2,h2), adresMaple(108.417711144751461455683177798, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 5.94332536454953689141030268187, 900.841470984807896506652502322, 3001.68294196961579301330500464 };
  double g2  [3] = { 56.6236738966503184251301604763, 13.6467896425296574618092267838, -82.8503768258714773227319822970 };
  double gres[3] = { 62.5669992611998553165404631582, 914.488260627337553968461729106, 2918.83256514374431569057302235 };
  double h1  [9] = { -9.25618083288686157317752553793, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 180., 900., 1.08060461173627943480187321489, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { 2.59344330983634668503649973204, 16.4875331676965205755997214187, -81.5536551709533039802137324310, 16.4875331676965205755997214187, 4.76425825688873977544740839150, -13.9886761709910670192595517977, -81.5536551709533039802137324310, -13.9886761709910670192595517977, -54.0302305868139717400936607443 };
  double hres[9] = { -6.66273752305051488814102580589, 17.0278354735646602930006580261, -80.4730505592170245454118592161, 17.0278354735646602930006580261, 184.764258256888739775447408392, 886.011323829008932980740448202, -80.4730505592170245454118592161, 886.011323829008932980740448202, -52.3472886171981787267886561010 };
  adreal<3,DO_HESS_TEST,double> ad1(3009.25618083288686157317752554, g1,h1), ad2(55.3269522417321450826119106103, g2,h2), adresMaple(3064.58313307461900665578943615, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 59.4332536454953689141030268187, 9000.84147098480789650665250232, 3016.82941969615793013305004643 };
  double g2  [3] = { -57.9727198092817783755213974620, 11.6260046701395820927276673926, 55.6988327438551546829930160511 };
  double gres[3] = { 1.4605338362135905385816293567, 9012.46747565494747859938016971, 3072.52825244001308481604306249 };
  double h1  [9] = { -92.5618083288686157317752553793, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 1800., 900., 10.8060461173627943480187321489, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { 25.9344330983634668503649973204, 40.0334399218082132306326137416, 56.9955543987733280255112659171, 40.0334399218082132306326137416, 35.1583933933716985019376238704, 13.7211657429542593818854478719, 56.9955543987733280255112659171, 13.7211657429542593818854478719, 83.9071529076452452258863947824 };
  double hres[9] = { -66.6273752305051488814102580589, 40.5737422276763529480335503490, 67.8016005161361223735299980660, 40.5737422276763529480335503490, 1835.15839339337169850193762387, 913.721165742954259381885447872, 67.8016005161361223735299980660, 913.721165742954259381885447872, 85.5900948772610382391913994257 };
  adreal<3,DO_HESS_TEST,double> ad1(30092.5618083288686157317752554, g1,h1), ad2(-70.9399363584635118007038961222, g2,h2), adresMaple(30021.6218719704051039310713593, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -839072368147.981528711316206688, 8999999999999999999.45597888911, 2999999999998911957.77822126037 };
  double g2  [3] = { 936737182554.985282977365595191, 246654089.074169196557152575912, 3499935021638.20463037900506198 };
  double gres[3] = { 97664814407.003754266049388503, 9000000000246654088.53014808567, 3000003499933933595.98285163937 };
  double h1  [9] = { 544021654910.480702774561066599, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, 18000000000000., 9000000000000., -1678143.05815290490451772789565, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { -1494497.81595039611669398835430, 47457313.5597675497375534501124, 349993502156.347973958148525614, 47457313.5597675497375534501124, -170312239.886395894061274938266, 7000097.96247238254865386811755, 349993502156.347973958148525614, 7000097.96247238254865386811755, -9367521275331.44786938532535075 };
  double hres[9] = { 544020160412.664752378444372611, 47457312.7206960206611009978534, 349991824013.289821053244007886, 47457312.7206960206611009978534, 17999829687760.1136041059387250, 9000007000097.96247238254865387, 349991824013.289821053244007886, 9000007000097.96247238254865387, -9367521275332.53591160710409038 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999455978345089.51930, g1,h1), ad2(9367446550440.65034957949065133, g2,h2), adresMaple(3000000000008823424895530.16965, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -839072.368147981528711316206688, -9000000000000.54402111088936981, 3000000000000000001.08804222178 };
  double g2  [3] = { 540302305883.084695560440568610, 10805818.1983162708417179137670, 8414709848004.24017572750341047 };
  double gres[3] = { 540301466810.716547578911857294, -8999989194182.34570484004765190, 3000008414709848005.32821794928 };
  double h1  [9] = { 544021.654910480702774561066599, -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, -18000000., 9000000000000., 1.67814305815290490451772789565, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { 1.49449781595039611669398835430, 1080559.02792697473354170953850, 841470984792.951528492998360463, 1080559.02792697473354170953850, 181.118304738801239072189409186, 16829647.6152044536393508648145, 841470984792.951528492998360463, 16829647.6152044536393508648145, -5403023058681.39717400936607443 };
  double hres[9] = { 544023.149408296653170677760587, 1080558.18885544565708925727964, 841470984794.629671551151265368, 1080558.18885544565708925727964, -17999818.8816952611987609278106, 9000016829647.61520445363935087, 841470984794.629671551151265368, 9000016829647.61520445363935087, -5403023058682.48521623114481406 };
  adreal<3,DO_HESS_TEST,double> ad1(-3000000000000544021.65491048070, g1,h1), ad2(5403023058756.12206480688588026, g2,h2), adresMaple(-2999994596977485265.53284567381, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -839071.529076452453097935476900, 8999999.45597888911063018659525, 2999999999999999999.99999891196 };
  double g2  [3] = { 999999999999.499985055021882163, 20000000.0002179190465235071341, -10000074.7248891308531391681161 };
  double gres[3] = { 999999160927.970908602568784228, 28999999.4561968081571536937294, 2999999999989999925.27510978111 };
  double h1  [9] = { 544021.110889369813948768772740, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, 18.000000, 9000000000000., -.167814305815290490451772789565e-5, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 2000000.00004458380930470134349, -1000014.94497799283729450028155, 2000000.00004458380930470134349, 19.9998296877313785615552766626, 207.919046523509634151715258378, -1000014.94497799283729450028155, 207.919046523509634151715258378, -9999999999995.00000000000041667 };
  double hres[9] = { 544021.110887875316132818376623, 1999999.16097305473285224908463, -1000014.94497967098035265318646, 1999999.16097305473285224908463, 37.9998296877313785615552766626, 9000000000207.91904652350963415, -1000014.94497967098035265318646, 9000000000207.91904652350963415, -9999999999996.08804222177915630 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999455978.88911063018605123, g1,h1), ad2(9999999999994.99992527510961915, g2,h2), adresMaple(12999999455973.8890359052956704, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -839072.368147981528711316206688, 8999999999999.45597888911063019, 2999999999999999998.91195777822 };
  double g2  [3] = { 540302305853.194739241432646276, 10806274.0364093178543195505308, -8414709848153.68995732254302213 };
  double gres[3] = { 540301466780.826591259903934960, 9000010806273.49238820696494974, 2999991585290151845.22200045568 };
  double h1  [9] = { 544021.654910480702774561066599, -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, 18000000., 9000000000000., -1.67814305815290490451772789565, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { -1.49449781595039611669398835430, 1080650.19554558413606203689128, -841470984822.841484812006282797, 1080650.19554558413606203689128, -159.506212504075650376151944888, -16829191.7771114066267492280507, -841470984822.841484812006282797, -16829191.7771114066267492280507, -5403023058681.39717400936607443 };
  double hres[9] = { 544020.160412664752378444372611, 1080649.35647405505960958463241, -841470984824.519627870159187701, 1080649.35647405505960958463241, 17999840.4937874959243496238480, 8999983170808.22288859337325077, -841470984824.519627870159187701, 8999983170808.22288859337325077, -5403023058682.48521623114481406 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999455978.34508951930, g1,h1), ad2(5403023058606.67228321184626860, g2,h2), adresMaple(3000005403022514585.01737273115, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -839155.436229360097504089834219, 89999999999999.4559788891106302, 2999999999999999989.11957778221 };
  double g2  [3] = { -839071529225.902233853903559493, -16779151.3910638139821690951372, 5440211108818.97324324995681268 };
  double gres[3] = { -839072368381.338463214001063583, 89999983220848.0649150751284611, 3000005440211108808.09282103217 };
  double h1  [9] = { 544075.513000458750386088136617, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, 180000000., 9000000000000., -16.7814305815290490451772789565, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { -14.9449781595039611669398835430, -1677687.22005985789191609113180, 544021110874.424835245243700684, -1677687.22005985789191609113180, -1719.90401679591349628688404933, 10880650.1368339197743957716189, 544021110874.424835245243700684, 10880650.1368339197743957716189, 8390715290764.52452258863947824 };
  double hres[9] = { 544060.568022299246424921196733, -1677688.05913138696836854339066, 544021110857.643404663714651639, -1677688.05913138696836854339066, 179998280.095983204086503713116, 9000010880650.13683391977439577, 544021110857.643404663714651639, 9000010880650.13683391977439577, 8390715290763.43648036686073861 };
  adreal<3,DO_HESS_TEST,double> ad1(29999999999999455924.4869995412, g1,h1), ad2(-8390715291511.77343056383753659, g2,h2), adresMaple(29999991609284164412.7135689774, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -839071529075.613380729787495372, 8999999.45597888911063018659525, -1088045.22177873962680949532370 };
  double g2  [3] = { -62296308.0494439616871342053599, 685103745.427909401525440047939, -307.981609909267516580218436624 };
  double gres[3] = { -839133825383.662824691474629577, 694103744.883888290636070234534, -1088353.20338864889432607554214 };
  double h1  [9] = { 544021110888.825792293858292038, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, -18000000., 9., -1678143.05815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -6229630.89861960892202789922984, 137020750.959086135371377583465, -61.9463154840247962681613398116, 137020750.959086135371377583465, -2133971770.26002094585317330668, 678.103894119526093145982736974, -61.9463154840247962681613398116, 678.103894119526093145982736974, -9.36752127533144786938532535075 };
  double hres[9] = { 544014881257.927172684936264139, 137020750.120014606294925131206, -1678205.00446838892931399605699, 137020750.120014606294925131206, -2151971770.26002094585317330668, 687.103894119526093145982736974, -1678205.00446838892931399605699, 687.103894119526093145982736974, -10.4555634971101874961948206744 };
  adreal<3,DO_HESS_TEST,double> ad1(-544024110888.825792293858292038, g1,h1), ad2(-311481535.563459170769947092107, g2,h2), adresMaple(-544335592424.389251464628239130, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 0., -9.54402111088936981340474766185, -1.91195777822126037319050467630 };
  double g2  [3] = { 62.8366112920642289376799289058, -695.909810280314746536354518859, -303.066835082901481034869938276 };
  double gres[3] = { 62.8366112920642289376799289058, -705.453831391204116349759266521, -304.978792861122741408060442952 };
  double h1  [9] = { 0., -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, 18., 9., 1.67814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { 6.22963089861960892202789922984, -138.101357444326669872469030557, -61.4548380013881927136264899768, -138.101357444326669872469030557, 2144.77783511242629086408777760, 668.274344466794022055285740277, -61.4548380013881927136264899768, 668.274344466794022055285740277, -5.40302305868139717400936607443 };
  double hres[9] = { 6.22963089861960892202789922984, -138.940428973403122324727894505, -59.7766949432352878091087620812, -138.940428973403122324727894505, 2162.77783511242629086408777760, 677.274344466794022055285740277, -59.7766949432352878091087620812, 677.274344466794022055285740277, -6.49106528046013680081886139813 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(316.884567989661843275404327566, g2,h2), adresMaple(319.884567989661843275404327566, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { .839071529075613380729787495372, -.544012110889369813404747661851, -3.00000108804222177873962680950 };
  double g2  [3] = { .999937703690513803910779762675, -19.9993148962258370480478124975, -311.481554930980446099728294825 };
  double gres[3] = { 1.83900923276612718464056725805, -20.5433270071152068614525601594, -314.481556019022667878467921635 };
  double h1  [9] = { -.544021110888825792293858292038, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, -.18e-4, 9., -.167814305815290490451772789565e-5, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -.622963089861960892202789922984e-5, -1.99986297924616740960956241617, -62.2963099861960892201123256317, -1.99986297924616740960956241617, 19.9978660282010049365034847643, 685.103784162951952185002453377, -62.2963099861960892201123256317, 685.103784162951952185002453377, -9.99999999999500000000000041667 };
  double hres[9] = { -.544027340519724411902780319937, -2.83893450832261986186842636400, -62.2963116643391473730172301494, -2.83893450832261986186842636400, 19.9978480282010049365034847643, 694.103784162951952185002453377, -62.2963116643391473730172301494, 694.103784162951952185002453377, -11.0880422217737396268094957404 };
  adreal<3,DO_HESS_TEST,double> ad1(.544018110888825792293858292038, g1,h1), ad2(9.99968851845006901955389902171, g2,h2), adresMaple(10.5437066293388948118477573137, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { 0., 8.45597888911063018659525233815, -4.08804222177873962680949532370 };
  double g2  [3] = { -61.7560066803279495028780556910, 674.297718045589157840317054561, -319.896254779059411167919984708 };
  double gres[3] = { -61.7560066803279495028780556910, 682.753696934699788026912306899, -323.984297000838150794729480032 };
  double h1  [9] = { 0., -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, -18., 9., -1.67814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -6.22963089861960892202789922984, 135.940148220854111002865284127, -63.1377799710039857269314946200, 135.940148220854111002865284127, -2123.16574287770070216805031330, 701.933183859109882321385833143, -63.1377799710039857269314946200, 701.933183859109882321385833143, -5.40302305868139717400936607443 };
  double hres[9] = { -6.22963089861960892202789922984, 135.101076691777658550606420179, -64.8159230291568906314492225156, 135.101076691777658550606420179, -2141.16574287770070216805031330, 710.933183859109882321385833143, -64.8159230291568906314492225156, 710.933183859109882321385833143, -6.49106528046013680081886139813 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(-306.078521872299048927385595418, g2,h2), adresMaple(-309.078521872299048927385595418, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -83.0680813785687927736275308346, 89.4559788891106301865952523381, -13.8804222177873962680949532370 };
  double g2  [3] = { -623.802161391037344655048786932, 6867.81907221104857092853514606, -306.041333822086747967347484873 };
  double gres[3] = { -706.870242769606137428676317766, 6957.27505110015920111513039840, -319.921756039874144235442438111 };
  double h1  [9] = { 53.8580899780476115270700185232, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, -180., 9., -16.7814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -62.2963089861960892202789922984, 1371.88567138405680928118930132, -61.7522878753067194068742446365, 1371.88567138405680928118930132, -21356.4993205321640142058677335, 674.223341945164555920240833473, -61.7522878753067194068742446365, 674.223341945164555920240833473, 8.39071529076452452258863947824 };
  double hres[9] = { -8.4382190081484776932089737752, 1371.04659985498035682893043737, -78.5337184568357684520515235930, 1371.04659985498035682893043737, -21536.4993205321640142058677335, 683.223341945164555920240833473, -78.5337184568357684520515235930, 683.223341945164555920240833473, 7.30267306898578489577914415454 };
  adreal<3,DO_HESS_TEST,double> ad1(-83.8580899780476115270700185232, g1,h1), ad2(-3123.20616460056898553653825440, g2,h2), adresMaple(-3207.06425457861659706360827292, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -839071529076.452453097935476900, -.544012110889369813404747661851, -1088042.22177873962680949232370 };
  double g2  [3] = { 40.0000000000142700854608718116, 200000000.000218735042550796229, .200000003500001688379596214511e-3 };
  double gres[3] = { -839071529036.452453097921206815, 199999999.456206624153180982824, -1088042.22157873962330949063532 };
  double h1  [9] = { 544021110889.369813948768772740, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, 18.000000, .9e-11, -1678143.05815290490451772789565, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { 4.00000000000133333333333386668, 40000000.0000418735042550929563, .400000003500068355046262907845e-4, 40000000.0000418735042550929563, 418.735042551196229072104437370, 200.000007000070043425859175686, .400000003500068355046262907845e-4, 200.000007000070043425859175686, -.936752127533144786938532535075e-11 };
  double hres[9] = { 544021110893.369813948770106073, 39999999.1609703444278026406974, -1678143.05811290490416772106015, 39999999.1609703444278026406974, 436.735042551196229072104437370, 200.000007000079043425859175686, -1678143.05811290490416772106015, 200.000007000079043425859175686, -1.08804222178810714808482677157 };
  adreal<3,DO_HESS_TEST,double> ad1(-544021110889.369813948765772740, g1,h1), ad2(200.000000000076034187942024782, g2,h2), adresMaple(-544021110689.369813948689738552, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -.839072368147981528711316206688, -.544021110898369813404747661851, 1.08804222177873962980949532370 };
  double g2  [3] = { -.399999994597110274651936212659e-4, -199.999989194153882637205785314, .200000008414776514745631759859e-3 };
  double gres[3] = { -.839112368147441239738781400310, -200.544010305052252450610532976, 1.08824222178715440632424095546 };
  double h1  [9] = { .544021654910480702774561066599, -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, -.18e-4, .9e-11, 1.67814305815290490451772789565, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { -.400000000000133333333333386668e-5, -39.9999989194353882637205918648, .400000008414843181412298453193e-4, -39.9999989194353882637205918648, 10.8056461173627938146853988151, 200.000016829619696157930266383, .400000008414843181412298453193e-4, 200.000016829619696157930266383, -.540302305868139717400936607443e-11 };
  double hres[9] = { .544017654910480701441227733265, -40.8390704485118407159794558126, 1.67818305815374638883586912550, -40.8390704485118407159794558126, 10.8056281173627938146853988151, 200.000016829628696157930266383, 1.67818305815374638883586912550, 200.000016829628696157930266383, -1.08804222178414264986817672087 };
  adreal<3,DO_HESS_TEST,double> ad1(-.544021654910480705774561066599, g1,h1), ad2(-.199999994597043607985269519325e-3, g2,h2), adresMaple(-.544221654905077749382546336118, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -.839072368147981528711316206688e-6, -.544021110889369804404747661851, -.108804222177573962680949532370e-5 };
  double g2  [3] = { .410000000000128333333333387085e-10, .220000000000190000000000134166e-3, .200000000000056666666666695001e-3 };
  double gres[3] = { -.839031368147981515877982873349e-6, -.543801110889369614404747661717, .198911957778280927039857199677e-3 };
  double h1  [9] = { .544021654910480702774561066599e-6, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, .18e-10, .9e-11, -.167814305815290490451772789565e-5, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { .400000000000133333333333386668e-11, .420000000000390000000000267500e-4, .400000000000123333333333388335e-4, .420000000000390000000000267500e-4, 20.0000000003900000000005341666, 200.000000000180000000000136666, .400000000000123333333333388335e-4, 200.000000000180000000000136666, -.999999999999500000000000041667e-11 };
  double hres[9] = { .544025654910480704107894399933e-6, -.839029529076452413258863947797, .383218569418594284288156109379e-4, -.839029529076452413258863947797, 20.0000000004080000000005341666, 200.000000000189000000000136666, .383218569418594284288156109379e-4, 200.000000000189000000000136666, -1.08804222178873962680949032370 };
  adreal<3,DO_HESS_TEST,double> ad1(-.544021654910480699774561066599e-6, g1,h1), ad2(.210000000000061666666666693751e-9, g2,h2), adresMaple(-.543811654910480638107894399906e-6, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -.839072368147981528711316206688, -.544021110880369813404747661851, -1.08804222177873962380949532370 };
  double g2  [3] = { .400000005403156392014730560677e-4, 200.000010806246117362794481352, .199999991585356818587701626809e-3 };
  double gres[3] = { -.839032368147441213072114733632, 199.455989695365747549389733690, -1.08784222178715426699090762208 };
  double h1  [9] = { .544021654910480702774561066599, -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, .18e-4, .9e-11, -1.67814305815290490451772789565, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { .400000000000133333333333386668e-5, 40.0000010806446117362794614686, .399999991585423485254368320143e-4, 40.0000010806446117362794614686, 10.8064461173627948813520654827, 199.999983170780303842070000283, .399999991585423485254368320143e-4, 199.999983170780303842070000283, -.540302305868139717400936607443e-11 };
  double hres[9] = { .544025654910480704107894399933, 39.1609295515681592840205975208, -1.67810305815374636216920245882, 39.1609295515681592840205975208, 10.8064641173627948813520654827, 199.999983170789303842070000283, -1.67810305815374636216920245882, 199.999983170789303842070000283, -1.08804222178414264986817672087 };
  adreal<3,DO_HESS_TEST,double> ad1(-.544021654910480699774561066599, g1,h1), ad2(.200000005403089725348063867343e-3, g2,h2), adresMaple(-.543821654905077610049213002732, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -83.9071537467167743023388470413, -.544021110799369813404747661851, -10.8804222177873962650949532370 };
  double g2  [3] = { .399999999161061804256880934409e-3, 1999.99998322056941847095228815, .200000005440277775560364827381e-3 };
  double gres[3] = { -83.9067537467176132405345901603, 1999.45596210977004865754754049, -10.8802222177819559873193928722 };
  double h1  [9] = { 54.4021116329580922298445795898, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, .180e-3, .9e-11, -16.7814305815290490451772789565, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { .400000000000133333333333386668e-4, 399.999998322256941847095362149, .400000005440344442227031520715e-4, 399.999998322256941847095362149, -16.7774305815290437118439456186, 200.000010880622217787396401428, .400000005440344442227031520715e-4, 200.000010880622217787396401428, .839071529076452452258863947824e-11 };
  double hres[9] = { 54.4021516329580922431779129231, 399.160926793180489394836498201, -16.7813905815285050107330562534, 399.160926793180489394836498201, -16.7772505815290437118439456186, 200.000010880631217787396401428, -16.7813905815285050107330562534, 200.000010880631217787396401428, -1.08804222177034891151873079918 };
  adreal<3,DO_HESS_TEST,double> ad1(-54.4021116329580921998445795898, g1,h1), ad2(.199999999160995137590214241075e-2, g2,h2), adresMaple(-54.4001116329664822484686774474, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -839071529077.291523787940400276, 8999999.45597888911063018659525, -1088039.22177873962680949532370 };
  double g2  [3] = { 62296309.9229482167534237792369, 685103782.897994502851231525481, 314.981479952693375622571486360 };
  double gres[3] = { -839009232767.368575571186976497, 694103782.353973391961861712076, -1087724.24029878693343387275222 };
  double h1  [9] = { 544021110889.913834515637031664, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, 18000000., 9., -1678143.05815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { 6229630.89861960892202789922984, 137020754.706094645503956731219, 62.6463024883673821723966447852, 137020754.706094645503956731219, 2133971807.73010604717896478422, 692.103634206377811230688836446, 62.6463024883673821723966447852, 692.103634206377811230688836446, -9.36752127533144786938532535075 };
  double hres[9] = { 544027340520.812454124559059563, 137020753.867023116427504278960, -1678080.41185041653713555549901, 137020753.867023116427504278960, 2151971807.73010604717896478422, 701.103634206377811230688836446, -1678080.41185041653713555549901, 701.103634206377811230688836446, -10.4555634971101874961948206744 };
  adreal<3,DO_HESS_TEST,double> ad1(-544018110889.913834515637031664, g1,h1), ad2(311481554.298501721432842830877, g2,h2), adresMaple(-543706629335.615332794204188834, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -1.67814305815290490451772789565, -9.54402111088936981340474766185, 4.08804222177873962680949532370 };
  double g2  [3] = { -61.7560066803279495028780556910, -674.297718045589157840317054561, 319.896254779059411167919984708 };
  double gres[3] = { -63.4341497384808544073957835866, -683.841739156478527653721802223, 323.984297000838150794729480032 };
  double h1  [9] = { 1.08804222177873962680949532370, -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, -18., 9., 1.67814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -6.22963089861960892202789922984, -135.940148220854111002865284127, 63.1377799710039857269314946200, -135.940148220854111002865284127, -2123.16574287770070216805031330, 701.933183859109882321385833143, 63.1377799710039857269314946200, 701.933183859109882321385833143, -5.40302305868139717400936607443 };
  double hres[9] = { -5.14158867684086929521840390614, -136.779219749930563455124148075, 64.8159230291568906314492225156, -136.779219749930563455124148075, -2141.16574287770070216805031330, 710.933183859109882321385833143, 64.8159230291568906314492225156, 710.933183859109882321385833143, -6.49106528046013680081886139813 };
  adreal<3,DO_HESS_TEST,double> ad1(-4.08804222177873962680949532370, g1,h1), ad2(-306.078521872299048927385595418, g2,h2), adresMaple(-310.166564094077788554195090742, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -.839071529077291523787940400276, -.544012110889369813404747661851, 2.99999891195777822126037319050 };
  double g2  [3] = { 1.00006229630848619608922032066, 20.0006851037541629519521891691, 311.481534930980446103061628159 };
  double gres[3] = { .160990767231194672301279920383, 19.4566729928647931385474415072, 314.481533842938224324322001349 };
  double h1  [9] = { .544021110889913834515637031664, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, .18e-4, 9., -.167814305815290490451772789565e-5, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { .622963089861960892202789922984e-5, 2.00013702075183259039043775049, 62.2963079861960892204456589651, 2.00013702075183259039043775049, 20.0021339717789950634965169023, 685.103744162951952191669120043, 62.2963079861960892204456589651, 685.103744162951952191669120043, -9.99999999999500000000000041667 };
  double hres[9] = { .544027340520812454124559059563, 1.16106549167538013813157380266, 62.2963063080530310675407544474, 1.16106549167538013813157380266, 20.0021519717789950634965169023, 694.103744162951952191669120043, 62.2963063080530310675407544474, 694.103744162951952191669120043, -11.0880422217737396268094957404 };
  adreal<3,DO_HESS_TEST,double> ad1(-.544018110889913834515637031664, g1,h1), ad2(10.0003114815399309804461018116, g2,h2), adresMaple(9.45629337065001714593046477997, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -1.67814305815290490451772789565, 8.45597888911063018659525233815, 1.91195777822126037319050467630 };
  double g2  [3] = { 62.8366112920642289376799289058, 695.909810280314746536354518859, 303.066835082901481034869938276 };
  double gres[3] = { 61.1584682339113240331622010102, 704.365789169425376722949771197, 304.978792861122741408060442952 };
  double h1  [9] = { 1.08804222177873962680949532370, -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, 18., 9., -1.67814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { 6.22963089861960892202789922984, 138.101357444326669872469030557, 61.4548380013881927136264899768, 138.101357444326669872469030557, 2144.77783511242629086408777760, 668.274344466794022055285740277, 61.4548380013881927136264899768, 668.274344466794022055285740277, -5.40302305868139717400936607443 };
  double hres[9] = { 7.31767312039834854883739455354, 137.262285915250217420210166609, 59.7766949432352878091087620812, 137.262285915250217420210166609, 2162.77783511242629086408777760, 677.274344466794022055285740277, 59.7766949432352878091087620812, 677.274344466794022055285740277, -6.49106528046013680081886139813 };
  adreal<3,DO_HESS_TEST,double> ad1(1.91195777822126037319050467630, g1,h1), ad2(316.884567989661843275404327566, g2,h2), adresMaple(318.796525767883103648594832242, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -84.7462244367216976781452587302, 89.4559788891106301865952523381, -7.8804222177873962680949532370 };
  double g2  [3] = { 622.124018332884439750531059036, 6834.25621104799047283818058814, 316.921756039874144235442438111 };
  double gres[3] = { 537.377793896162742072385800306, 6923.71218993710110302477584048, 309.041333822086747967347484873 };
  double h1  [9] = { 54.9461321998263511538795138470, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, 180., 9., -16.7814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { 62.2963089861960892202789922984, 1368.52938526775099947215384552, 62.8403300970854590336837399603, 1368.52938526775099947215384552, 21322.9364593691059161155131755, 695.984186380739348456430739947, 62.8403300970854590336837399603, 695.984186380739348456430739947, 8.39071529076452452258863947824 };
  double hres[9] = { 117.242441186022440374158506145, 1367.69031373867454701989498158, 46.0588995155564099885064610038, 1367.69031373867454701989498158, 21502.9364593691059161155131755, 704.984186380739348456430739947, 46.0588995155564099885064610038, 704.984186380739348456430739947, 7.30267306898578489577914415454 };
  adreal<3,DO_HESS_TEST,double> ad1(-24.9461321998263511538795138470, g1,h1), ad2(3106.42473401903993649136097544, g2,h2), adresMaple(3081.47860181921358533748146159, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -839071529084.843167549628472347, 899999999.455978889110630186595, -1085042.22177873962680949532370 };
  double g2  [3] = { 25934526.7735762201648436911737, 284074539.867111818008006851198, 479.665667663110286369477473383 };
  double gres[3] = { -839045594558.069591329463628656, 1184074539.32309070711863703780, -1084562.55611107651652312584622 };
  double h1  [9] = { 544021110894.810024513641359985, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, 180000000., 900., -1678143.05815290490451772789565, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { 2593443.30983634668503649973204, 56814889.2383798129387056314688, 60.9337833154927620621302459985, 56814889.2383798129387056314688, 368365383.250288584727449256432, 354.073052950944901802579960847, 60.9337833154927620621302459985, 354.073052950944901802579960847, -936.752127533144786938532535075 };
  double hres[9] = { 544023704338.119860860326396485, 56814888.3993082838622531792099, -1678082.12436958941175566576540, 56814888.3993082838622531792099, 548365383.250288584727449256432, 1254.07305295094490180257996085, -1678082.12436958941175566576540, 1254.07305295094490180257996085, -937.840169754923526565342030399 };
  adreal<3,DO_HESS_TEST,double> ad1(-541021110894.810024513641359985, g1,h1), ad2(129673102.243944867396611925135, g2,h2), adresMaple(-540891437792.566079646244748059, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -9.22978681984097697484750342606, -900.544021110889369813404747662, 3001.08804222177873962680949532 };
  double g2  [3] = { 28.0957974884505048897286634239, -176.013891343058367898862142002, 971.143150299713840904327308232 };
  double gres[3] = { 18.8660106686095279148811599978, -1076.55791245394773771226688966, 3972.23119252149258053113680355 };
  double h1  [9] = { 5.98423221978306794745222428036, -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, -180., 900., 1.67814305815290490451772789565, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { -2.59344330983634668503649973204, -46.0088243859744679277911605492, 110.081531579153117515615229483, -46.0088243859744679277911605492, -357.559318397883239716534785512, 452.368549478265612709549927817, 110.081531579153117515615229483, 452.368549478265612709549927817, -540.302305868139717400936607443 };
  double hres[9] = { 3.39078890994672126241572454832, -46.8478959150509203800500244970, 111.759674637306022420132957379, -46.8478959150509203800500244970, -537.559318397883239716534785512, 1352.36854947826561270954992782, 111.759674637306022420132957379, 1352.36854947826561270954992782, -541.390348089918457027746102767 };
  adreal<3,DO_HESS_TEST,double> ad1(-3005.98423221978306794745222428, g1,h1), ad2(410.630140376322383149111620841, g2,h2), adresMaple(-2595.35409184346068479834060344, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -8.39071529076536359411771593069, -.543121110889369813404747661851, 2999.99999891195777822126037319 };
  double g2  [3] = { 100.000025934383098363466854532, 200.000284074252516686311387382, 129.671165491817334418491653269 };
  double gres[3] = { 91.6093106436177347693491386010, 199.457162963363146872906639721, 3129.67116440377511263975202646 };
  double h1  [9] = { 5.44021110889424215515836598832, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, .180e-3, 900., -.167814305815290490451772789565e-5, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { .259344330983634668503649973204e-5, 20.0000568148605033372622766432, 25.9343330983634668670316639871, 20.0000568148605033372622766432, 20.0003683653545152460340653868, 284.074152516686311412382796824, 25.9343330983634668670316639871, 284.074152516686311412382796824, -999.999999999500000000000041667 };
  double hres[9] = { 5.44021370233755199150505102482, 19.1609852857840508850034126954, 25.9343314202204087141267594694, 19.1609852857840508850034126954, 20.0005483653545152460340653868, 1184.07415251668631141238279682, 25.9343314202204087141267594694, 1184.07415251668631141238279682, -1001.08804222127873962680953699 };
  adreal<3,DO_HESS_TEST,double> ad1(-5.43721110889424215515836598832, g1,h1), ad2(1000.00012967166549181733429349, g2,h2), adresMaple(994.562918562771249662175927504, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -9.22978681984097697484750342606, 899.455978889110630186595252338, 2998.91195777822126037319050468 };
  double g2  [3] = { 79.9646636851774385904586580647, 392.134813690314254859236784980, -711.798819316079172400677335028 };
  double gres[3] = { 70.7348768653364616156111546386, 1291.59079257942488504583203732, 2287.11313846214208797251316965 };
  double h1  [9] = { 5.98423221978306794745222428036, -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, 180., 900., -1.67814305815290490451772789565, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { 2.59344330983634668503649973204, 67.6209166207000566238286248470, -58.2126653824261838148852348426, 67.6209166207000566238286248470, 379.171410632608828412572249810, 115.780155555107010048548999165, -58.2126653824261838148852348426, 115.780155555107010048548999165, -540.302305868139717400936607443 };
  double hres[9] = { 8.57767552961941463248872401240, 66.7818450916236041715697608992, -59.8908084405790887194029627382, 66.7818450916236041715697608992, 559.171410632608828412572249810, 1015.78015555510701004854899916, -59.8908084405790887194029627382, 1015.78015555510701004854899916, -541.390348089918457027746102767 };
  adreal<3,DO_HESS_TEST,double> ad1(2994.01576778021693205254777572, g1,h1), ad2(669.974471359957051652761594045, g2,h2), adresMaple(3663.99023914017398370530936976, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1+ad2" << endl;
  double g1  [3] = { -92.2978681984097697484750342606, 8999.45597888911063018659525234, 2989.11957778221260373190504676 };
  double g2  [3] = { 175.437178075989423277763578422, 2672.92921935157262333872184534, 673.693276381187147656572648453 };
  double gres[3] = { 83.139309877579653529288544161, 11672.3851982406832535253170976, 3662.81285416339975138847769521 };
  double h1  [9] = { 59.8423221978306794745222428036, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, 1800., 900., -16.7814305815290490451772789565, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { 25.9344330983634668503649973204, 551.367274451843573712921648024, 80.3365441873004481908397635055, 551.367274451843573712921648024, 3666.87221457093129160035789765, 392.878574694560274059998995861, 80.3365441873004481908397635055, 392.878574694560274059998995861, 839.071529076452452258863947824 };
  double hres[9] = { 85.7767552961941463248872401240, 550.528202922767121260662784077, 63.5551136057713991456624845490, 550.528202922767121260662784077, 5466.87221457093129160035789765, 1292.87857469456027405999899586, 63.5551136057713991456624845490, 1292.87857469456027405999899586, 837.983486854673712632054452500 };
  adreal<3,DO_HESS_TEST,double> ad1(29940.1576778021693205254777572, g1,h1), ad2(457.650125841720890259385918196, g2,h2), adresMaple(30397.8078036438902107848636754, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1+ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 936753064285.272320083319473608, 8999999999999999999.65000649783, 2999999999999300012.99565741410 };
  double g2  [3] = { -557745688417.251329755455819225, 2279192338739318074.47339312918, 349992754922384976.919594139787 };
  double gres[3] = { -.167323688773383716887300333488e37, .683757872174613254163427678253e43, .104997883327669110915379334842e43 };
  double h1  [9] = { 349993852164.795123410604604433, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, 18000000000000., 9000000000000., 1873504.25506628957387706507015, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { -1494497.81595039611669398835430, 4558382803974.38108265721238129, 349992007673.477001721535792793, 4558382803974.38108265721238129, -1703122586212510942.98664048080, 2979177469577.64891241912422567, 349992007673.477001721535792793, 2979177469577.64891241912422567, -936752127533144786.938532535075 };
  double hres[9] = { -.441716953097991399934779925050e31, .136751455272507594965025722521e38, .104997467764038394502668541545e37, .136751455272507594965025722521e38, -.510932673317142838084788209052e43, .189250459247787036755355867008e38, .104997467764038394502668541545e37, .189250459247787036755355867008e38, -.281025428264257696951007808764e43 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999650006147835.20488, g1,h1), ad2(189503219557946728.591538357925, g2,h2), adresMaple(.568509658673773860812804357056e42, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 936753.064285272320083319473608, -9000000000000.34999350217129295, 3000000000000000000.69998700434 };
  double g2  [3] = { 540303800365.955667797053301431, -1198585853498.78357338194603722, 841470237558988531.454443974636 };
  double gres[3] = { -.162091089496751545631690707652e31, -.126696991755684811812289448787e31, -.90350155332611702559806724067e36 };
  double h1  [9] = { 349993.852164795123410604604433, .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, -18000000., 9000000000000., -1.87350425506628957387706507015, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { 1.49449781595039611669398835430, -3477776.31873384658156576528933, 841469490310.080556256385627642, -3477776.31873384658156576528933, 1703123666818.99618352114157224, 3962132434850.85602148882389537, 841469490310.080556256385627642, 3962132434850.85602148882389537, -540302305868139717.400936607443 };
  double hres[9] = { 189099275665868860980592.889682, 5570594136260030278119413.02831, -.90349628158385789597866967782e30, 5570594136260030278119413.02831, -.510935915136717776129143911409e31, -.181926595250280675662594222110e32, -.90349628158385789597866967782e30, -.181926595250280675662594222110e32, .666972834295853944421466932783e37 };
  adreal<3,DO_HESS_TEST,double> ad1(-3000000000000349993.85216479512, g1,h1), ad2(540303053117047692.598994954437, g2,h2), adresMaple(-.162090915935133218054388169875e37, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 936752.127533144787875284662608, 8999999.65000649782870704788235, 2999999999999999999.99999930001 };
  double g2  [3] = { 999999999998.005502184049645550, 2000002279189.46523506300826715, -1747248907975.03139168032751882 };
  double gres[3] = { 3936751777532490760764433.28802, 15000005787575866250071870.8183, .299999999999101650716367450113e37 };
  double h1  [9] = { 349993.502171292952467645988952, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, 18.000000, 9000000000000., .187350425506628957387706507015e-5, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 2000004.55837993047012601645097, -2494497.81595022945002732169597, 2000004.55837993047012601645097, 296877.41378461555275829331296, 2279188465235.06300851715258544, -2494497.81595022945002732169597, 2279188465235.06300851715258544, -999999999999500000.000000041667 };
  double hres[9] = { 349995375675111481523647.124169, 17810271142773585623.1944124959, .299999999998489627671898425557e31, 17810271142773585623.1944124959, 54890671762861000554.8538886281, .150000136751060432294929669935e32, .299999999998489627671898425557e31, .150000136751060432294929669935e32, -.134834930978558861659683487880e32 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999650006.49782870704753235, g1,h1), ad2(999999999998752751.092024843609, g2,h2), adresMaple(.299999965000275608241965107656e31, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 936753.064285272320083319473608, 8999999999999.65000649782870705, 2999999999999999999.30001299566 };
  double g2  [3] = { 540300811370.323767004819913455, 3359795076971.34244298569246700, -841471732056804481.850560668624 };
  double gres[3] = { .162090294023992287372618348296e31, .149420992584857479991267784775e32, -.90351052031242370938826095066e36 };
  double h1  [9] = { 349993.852164795123410604604433, .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, 18000000., 9000000000000., 1.87350425506628957387706507015, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { -1.49449781595039611669398835430, 5638985.54220640545116951171911, -841472479305.712457048619015618, 5638985.54220640545116951171911, -1703121505609.77271096227196850, 596248495619.26999487881460885, -841472479305.712457048619015618, 596248495619.26999487881460885, -540302305868139717.400936607443 };
  double hres[9] = { 189098752595221304039956.439025, 21779667582376935814023385.7212, -.90351579205608281669319961761e30, 21779667582376935814023385.7212, -.510929431508928142284684233229e31, .915759915683376848074321811544e31, -.90351579205608281669319961761e30, .915759915683376848074321811544e31, -.666973730994505694002097503800e37 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999650006.14783520488, g1,h1), ad2(540301558619231742.202878260449, g2,h2), adresMaple(.162090467585750612438480299357e37, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 936845.802745898101417226388329, 89999999999999.6500064978287070, 2999999999999999993.00012995657 };
  double g2  [3] = { -839086474054.611956220030887708, 21113761594197.7251773204646254, 544020363640461838.206689314857 };
  double gres[3] = { -.251725950077257057713074739723e32, .557895737685026760191929728036e33, .138033739045170681167230989016e38 };
  double h1  [9] = { 350028.501521510081412864252030, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, 180000000., 9000000000000., 18.7350425506628957387706507015, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { -14.9449781595039611669398835430, 43905666.2465483552591586571466, 544019616391.553863008630967863, 43905666.2465483552591586571466, -17031227540286.9026253219722214, 3367232687013.80263499331457581, 544019616391.553863008630967863, 3367232687013.80263499331457581, 839071529076452452.258863947824 };
  double hres[9] = { -294151487110215880575540.753695, 1241652223725850396971987890.06, .138033295792300637091673776565e32, 1241652223725850396971987890.06, -.510933176765734443564648372289e33, .205768387106557661003410222725e33, .138033295792300637091673776565e32, .205768387106557661003410222725e33, .284362680541360508910272630348e38 };
  adreal<3,DO_HESS_TEST,double> ad1(29999999999999649971.4984784899, g1,h1), ad2(-839079001565532204.239447417766, g2,h2), adresMaple(-.251723700469656724256178463849e38, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 936752127532.208034810999390288, 8999999.65000649782870704788235, -699990.004342585904235304973562 };
  double g2  [3] = { -6229630898618.67216990036608505, 6851037641627646017.62829157753, -3114815099316.30228972099749727 };
  double gres[3] = { -.291780781866124798277315175999e31, -.239786724414909595135165007757e31, 3270514069558012073600691.97360 };
  double h1  [9] = { 349993502170.942958615481193829, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, -18000000., 9., 1873504.25506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -6229630.89861960892202789922984, 13702075283257.1655395116494446, -6229630.54862610675073494711219, 13702075283257.1655395116494446, -21339717889948761460.9056241649, 6851036941642.51517929745363180, -6229630.54862610675073494711219, 6851036941642.51517929745363180, -936752.127533144786938532535075 };
  double hres[9] = { -.109017683895758555135387820560e31, .641771929086053231983657076764e31, -8753423128152110675967651.32081, .641771929086053231983657076764e31, .746900600414760320260860903949e31, -7193552901006797860906432.90351, -8753423128152110675967651.32081, -7193552901006797860906432.90351, 6868869173273050958.80534080133 };
  adreal<3,DO_HESS_TEST,double> ad1(-349996502170.942958615481193829, g1,h1), ad2(-3114815449308867708.88641647013, g2,h2), adresMaple(.109017451216611778413706731295e31, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 0., -9.34999350217129295211765248678, -2.30001299565741409576469502644 };
  double g2  [3] = { 6229631.43892191479016761663078, -6851038722234.13125816279266897, -3114814607838.81965311744296242 };
  double gres[3] = { 18688894.3167657443705028498923, -49676625430034.8708787461713249, -16508561078705.8216630637495843 };
  double h1  [9] = { 0., .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, 18., 9., -1.87350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { 6.22963089861960892202789922984, -13702076.3638636507800461505361, -6229630.05714862411413139257734, -13702076.3638636507800461505361, 21339718970555.2467014401252564, 6851035958687.54990609034456210, -6229630.05714862411413139257734, 6851035958687.54990609034456210, -540302.305868139717400936607443 };
  double hres[9] = { 18.6888926958588267660836976895, 2917711151900.83573007037723719, -5835654027410.24344812837066540, 2917711151900.83573007037723719, 248200179796709.815697568442123, 93467426221223.4972430645079937, -5835654027410.24344812837066540, 93467426221223.4972430645079937, 12147895819631.7883048683311301 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(3114815989612.11032915366701586, g2,h2), adresMaple(9344447968836.33098746100104757, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -.936752127532208034810999390288, -.349984502171292952117652486781, -3.00000069998700434258590423530 };
  double g2  [3] = { -5.22963089862010892202789918817, 4851037.64163051952188335778377, -3114815449310.80446101394944825 };
  double gres[3] = { 1981056.04115826578440617648023, 2437969.73245543848455287103360, -1090149478826.27150153602672192 };
  double h1  [9] = { -.349993502170942958615481193829, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, -.18e-4, 9., .187350425506628957387706507015e-5, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -.622963089861960892202789922984e-5, 11.7020752832600390437667156509, -6229630.89862060892202789906317, 11.7020752832600390437667156509, -19339717.8899516349651606903712, 6851037641631.51952188335753377, -6229630.89862060892202789906317, 6851037641631.51952188335753377, -999999.999999500000000000041667 };
  double hres[9] = { 740181.463282890422300740869939, -6525271.77711263391576403173125, 2917807818712.16680477655920175, -6525271.77711263391576403173125, -10164255.4975109752892668708962, 3487901652513.77798904930952045, 2917807818712.16680477655920175, 3487901652513.77798904930952045, 18688898186878.3265816070757573 };
  adreal<3,DO_HESS_TEST,double> ad1(.349990502170942958615481193829, g1,h1), ad2(-2114815.44931030446101394957325, g2,h2), adresMaple(-740165.321102981821913943282060, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 0., 8.65000649782870704788234751322, -3.69998700434258590423530497356 };
  double g2  [3] = { -6229630.35831730305388818182890, 6851036561024.90778560392306523, -3114816290780.78926891045626742 };
  double gres[3] = { 18688891.0749519091616645454867, -47496278885523.3190748357627994, 20869223556602.6468210422580885 };
  double h1  [9] = { 0., .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, -18., 9., 1.87350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -6.22963089861960892202789922984, 13702074.2026544273074872809323, -6229631.74009059372992440588234, 13702074.2026544273074872809323, -21339716809346.0232288812556526, 6851039324571.48913767637117210, -6229631.74009059372992440588234, 6851039324571.48913767637117210, -540302.305868139717400936607443 };
  double hres[9] = { 18.6888926958588267660836976895, -2917904485450.41957577012126442, -5835577247322.87828983107618010, -2917904485450.41957577012126442, 238608840329628.027573821545370, -100878379551646.573623030107684, -5835577247322.87828983107618010, -100878379551646.573623030107684, 25229891171751.6957667780343503 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(-3114814909007.49859287423221398, g2,h2), adresMaple(9344444727022.49577862269664195, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 92.7384606257813339069147209724, 89.6500064978287070478823475132, -9.99987004342585904235304973562 };
  double g2  [3] = { -62296309.8252676182967314445573, 68510378094438.2533717384831887, -3114814905288.69357164413621017 };
  double gres[3] = { -2888627949421772.99578664279038, -7221584200028363.48866140893346, 512848285327214.833287364729164 };
  double h1  [9] = { 34.6493567149580022596475961913, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, -180., 9., 18.7350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -62.2963089861960892202789922984, 137020754.510733448590572061860, -6229630.35459849803265808582509, 137020754.510733448590572061860, -213397180577649.407804511809063, 6851036553587.29774314373105760, -6229630.35459849803265808582509, 6851036553587.29774314373105760, 839071.529076452452258863947824 };
  double hres[9] = { -1079275099640989.02920616868061, 6324354457424094.91378602064741, -872424129276969.215386520788149, 6324354457424094.91378602064741, 31686570091591469.2406103695909, -1687586558078625.22604965356875, -872424129276969.215386520788149, -1687586558078625.22604965356875, 84098738220753.8534484660384846 };
  adreal<3,DO_HESS_TEST,double> ad1(-64.6493567149580022596475961913, g1,h1), ad2(-31148155332169.5736865919484081, g2,h2), adresMaple(2013708205082351.93199386368532, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 936752127533.144787875284662608, -.349984502171292952117652486781, -699987.004342585904235301973562 };
  double g2  [3] = { 4000000.00000133333427008599421, 2000000000002000001.87350558840, 2000000.00000101666016883822629 };
  double gres[3] = { 1873502855092905392407961.35200, -699987004343285893295312350374., -2099961013028580196.51750923334 };
  double h1  [9] = { 349993502171.292952467645988952, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, 18.000000, .9e-11, 1873504.25506628957387706507015, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { 4.00000000000133333333333386668, 4000000000004.00000187350692174, 4.00000000000168332683550515963, 4000000000004.00000187350692174, 4000001873509.58839962291174375, 2000000000002.69998700434391923, 4.00000000000168332683550515963, 2000000000002.69998700434391923, -.936752127533144786938532535075e-6 };
  double hres[9] = { 699994498358439527912221.549895, .187350285509415439706236428083e31, 5620508565279044029.63466040865, .187350285509415439706236428083e31, -1399976064303362691923894.98052, -2099961013030102667333422.97187, 5620508565279044029.63466040865, -2099961013030102667333422.97187, -4199921698200.24760014746368696 };
  adreal<3,DO_HESS_TEST,double> ad1(-349993502171.292952467642988952, g1,h1), ad2(2000000000000.66666760341906087, g2,h2), adresMaple(-699987004342819234264590.757654, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { .936753064285272320083319473608, -.349993502180292952117652486781, .699987004342585907235304973562 };
  double g2  [3] = { -4.00000000000079303102746572696, -2000000000000.91939538826505390, 2000000.00000150813765147482985 };
  double gres[3] = { -1873504.72859525435291077204027, 699988404316.916396184941583049, -2099961.71301537835960842481215 };
  double h1  [9] = { .349993852164795123410604604433, .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, -.18e-4, .9e-11, -1.87350425506628957387706507015, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { -.400000000000133333333333386668e-5, -4000000.00000291939538826638724, 4.00000000000217480431814176319, -4000000.00000291939538826638724, -2919395.38826905389853146465179, 2000000000003.68294196961712634, 4.00000000000217480431814176319, 2000000000003.68294196961712634, -.540302305868139717400936607443e-6 };
  double hres[9] = { -699995.198352748781826271030169, -1873506602098.85231881083441534, 5620510.43878134725381438326219, -1873506602098.85231881083441534, 1399975030528.25330571818520952, -2099962413003.69901827644550935, 5620510.43878134725381438326219, -2099962413003.69901827644550935, 4199922.02605790434682114962430 };
  adreal<3,DO_HESS_TEST,double> ad1(-.349993852164795126410604604433, g1,h1), ad2(-2000000.00000012636436079879362, g2,h2), adresMaple(699987.704329634479570621520673, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { .936753064285272320083319473608e-6, -.349993502171292943117652486781, -.699987004339585904235304973562e-6 };
  double g2  [3] = { .400000100000133333283333386668e-5, 2000002.00000199999900000133333, 2000000.00000066666566666693334 };
  double gres[3] = { .187350566534847477351413486431e-5, -1.39997575865431594412048519690, -.699989104304532236348797689530 };
  double h1  [9] = { .349993852164795123410604604433e-6, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, .18e-10, .9e-11, .187350425506628957387706507015e-5, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { .400000000000133333333333386668e-11, 4.00000200000399999900000266667, 4.00000000000133333233333386668, 4.00000200000399999900000266667, 2000003.99999900000533333341667, 2000000000001.99999800000133333, 4.00000000000133333233333386668, 2000000000001.99999800000133333, -.999999999999500000000000041667e-6 };
  double hres[9] = { .699995548348663556072591115537e-6, 3.74701039394712099644954158501, 1.87350847560334417099147288136, 3.74701039394712099644954158501, -1399976.10864968469959997153463, -1399976.10864851807929276260589, 1.87350847560334417099147288136, -1399976.10864851807929276260589, -4.19992272603156974640428367752 };
  adreal<3,DO_HESS_TEST,double> ad1(-.349993852164795120410604604433e-6, g1,h1), ad2(2.00000100000066666616666693334, g2,h2), adresMaple(-.699988054323675734676109316803e-6, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { .936753064285272320083319473608, -.349993502162292952117652486781, -.699987004342585901235304973562 };
  double g2  [3] = { 4.00000000000187363563920200640, 2000000000003.08060461173761276, 1999999.99999982519568185903683 };
  double gres[3] = { 1873504.72859626661221391582625, -699988404317.672758504603421981, -2099961.71301554572545055723454 };
  double h1  [9] = { .349993852164795123410604604433, .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, .18e-4, .9e-11, 1.87350425506628957387706507015, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { .400000000000133333333333386668e-5, 4000000.00000508060461173894610, 4.00000000000049186234852597017, 4000000.00000508060461173894610, 5080604.61174161276813521108157, 2000000000000.31705803038554032, 4.00000000000049186234852597017, 2000000000000.31705803038554032, -.540302305868139717400936607443e-6 };
  double hres[9] = { 699995.198353126988821519016063, 1873506602100.87683842942827813, 5620510.43878179526993812170958, 1873506602100.87683842942827813, -1399975786795.70758133459709997, -2099962413004.03370137169160019, 5620510.43878179526993812170958, -2099962413004.03370137169160019, -4199922.02605592645201988152209 };
  adreal<3,DO_HESS_TEST,double> ad1(-.349993852164795120410604604433, g1,h1), ad2(2000000.00000120696897253507306, g2,h2), adresMaple(-699987.704330012672541350143889, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 93.6752136900666062269980404460, -.349993502081292952117652486781, -6.99987004342585903935304973562 };
  double g2  [3] = { 40.0000000000124942618042622143, 20000000000018.3218569418604284, 2000000.00000121068777755630315 };
  double gres[3] = { 1873502873.82785534041058884385, -699987018342967.241783211524246, -209996102.002845941187760270746 };
  double h1  [9] = { 34.9993505671227973830582007958, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, .180e-3, .9e-11, 18.7350425506628957387706507015, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { .400000000000133333333333386668e-4, 40000000.0000383218569418737618, 4.00000000000187735444422323649, 40000000.0000383218569418737618, 38321856.9419004284288156507712, 2000000000003.08804222178007296, 4.00000000000187735444422323649, 2000000000003.08804222178007296, .839071529076452452258863947824e-6 };
  double hres[9] = { 699994505.358355143352965959486, 1873502892564054.29307932568181, 562050858.401409713229839090656, 1873502892564054.29307932568181, -14001081319770.0358479248632157, -209996102702986.109566020453867, 562050858.401409713229839090656, -209996102702986.109566020453867, -41999220.2606055497557903383960 };
  adreal<3,DO_HESS_TEST,double> ad1(-34.9993505671227973530582007958, g1,h1), ad2(20000000.0000058275951375928809, g2,h2), adresMaple(-699987011.342659909106347889368, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 936752127534.081539066065679862, 8999999.65000649782870704788235, -699984.004342585904235304973562 };
  double g2  [3] = { 6229630898620.54567415543237463, 6851037641631393026.13842415667, 3114815799303.30663230690173257 };
  double gres[3] = { .291780781870621639224339830865e31, -.239777007125344599403619238406e31, -3270476936767015239167417.89895 };
  double h1  [9] = { 349993502171.642945619823779733, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, 18000000., 9., 1873504.25506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { 6229630.89861960892202789922984, 13702075283260.9125480217820238, 6229631.24861311109332085134749, 13702075283260.9125480217820238, 21339717889952508469.4157567441, 6851038341616.52386446926210240, 6229631.24861311109332085134749, 6851038341616.52386446926210240, -936752.127533144786938532535075 };
  double hres[9] = { .109017683896042166023516326830e31, .641771929107705919881290587988e31, 8753423783950282451837657.46268, .641771929107705919881290587988e31, -.746851919515482991159666822947e31, -7193359045190328227132050.15274, 8753423783950282451837657.46268, -7193359045190328227132050.15274, -6213118459889113162.03508082910 };
  adreal<3,DO_HESS_TEST,double> ad1(-349990502171.642945619823779733, g1,h1), ad2(3114815449310741213.14148275971, g2,h2), adresMaple(-.109015582327625796996130707501e31, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 1.87350425506628957387706507015, -9.34999350217129295211765248678, 3.69998700434258590423530497356 };
  double g2  [3] = { -6229630.35831730305388818182890, -6851036561024.90778560392306523, 3114816290780.78926891045626742 };
  double gres[3] = { -5835595936218.09856161226595332, 54472245401754.4592359529720579, -23049554481063.7764776462340378 };
  double h1  [9] = { .699987004342585904235304973562, .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, -18., 9., -1.87350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -6.22963089861960892202789922984, -13702074.2026544273074872809323, 6229631.74009059372992440588234, -13702074.2026544273074872809323, -21339716809346.0232288812556526, 6851039324571.48913767637117210, 6229631.74009059372992440588234, 6851039324571.48913767637117210, -540302.305868139717400936607443 };
  double hres[9] = { -2180353299692.70127752435596298, -15753146697079.7637334105194829, 11671194461189.2241985089378141, -15753146697079.7637334105194829, 263137637890507.989603233719530, -107854348969547.753046894666858, 11671194461189.2241985089378141, -107854348969547.753046894666858, 25229891549956.2882908087282035 };
  adreal<3,DO_HESS_TEST,double> ad1(-3.69998700434258590423530497356, g1,h1), ad2(-3114814909007.49859287423221398, g2,h2), adresMaple(11524774684260.2790143108892862, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { .936752127534081539066065679862, -.349984502171292952117652486781, 2.99999930001299565741409576470 };
  double g2  [3] = { 7.22963089861910892202789927151, 8851037.64162851952188335795043, 3114815449308.80446101394978159 };
  double gres[3] = { 3854559.59624844987955716221490, -4537900.74548694186906767470490, -1090143478832.11251453801137996 };
  double h1  [9] = { .349993502171642945619823779733, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, .18e-4, 9., .187350425506628957387706507015e-5, 9., -.699987004342585904235304973562 };
  double h2  [9] = { .622963089861960892202789922984e-5, 15.7020752832580390437667158175, 6229630.89861860892202789939651, 15.7020752832580390437667158175, 23339717.8899496349651606905378, 6851037641627.51952188335820043, 6229630.89861860892202789939651, 6851037641627.51952188335820043, -999999.999999500000000000041667 };
  double hres[9] = { 1440172.21463581681741743608600, 12145782.4423905147928868181335, 2917807818733.80014813357362190, 12145782.4423905147928868181335, -14364057.5235793283388649755880, -3487871652526.06498498248973865, 2917807818733.80014813357362190, -3487871652526.06498498248973865, 18688885804865.3182695884331772 };
  adreal<3,DO_HESS_TEST,double> ad1(-.349990502171642945619823779733, g1,h1), ad2(4114815.44930930446101394965659, g2,h2), adresMaple(-1440146.32544739806598251936760, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 1.87350425506628957387706507015, 8.65000649782870704788234751322, 2.30001299565741409576469502644 };
  double g2  [3] = { 6229631.43892191479016761663078, 6851038722234.13125816279266897, 3114814607838.81965311744296242 };
  double gres[3] = { 5835635338520.07200225602827122, 42700656644576.1755734447989476, 14328231332282.1998002299525388 };
  double h1  [9] = { .699987004342585904235304973562, .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, 18., 9., 1.87350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { 6.22963089861960892202789922984, 13702076.3638636507800461505361, 6229630.05714862411413139257734, 13702076.3638636507800461505361, 21339718970555.2467014401252564, 6851035958687.54990609034456210, 6229630.05714862411413139257734, 6851035958687.54990609034456210, -540302.305868139717400936607443 };
  double hres[9] = { 2180354056143.31314565372567338, 15753346104179.0927480809539616, 11671268088278.8262894835944177, 15753346104179.0927480809539616, 223671377697374.743379787941724, 86491460337434.8412005104855316, 11671268088278.8262894835944177, 86491460337434.8412005104855316, 12147896197836.3808288990249832 };
  adreal<3,DO_HESS_TEST,double> ad1(2.30001299565741409576469502644, g1,h1), ad2(3114815989612.11032915366701586, g2,h2), adresMaple(7164117255189.36270371142069699, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 94.6119648808476234807917860426, 89.6500064978287070478823475132, -3.99987004342585904235304973562 };
  double g2  [3] = { 62296308.1471245601438265400395, 68510374738152.1370659286741533, 3114815993330.91535038376301967 };
  double gres[3] = { 2946987686373637.54224760979924, 2425946634666380.29043740568786, -141250788079468.123435402844668 };
  double h1  [9] = { 35.3493437193005881638829011649, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, 180., 9., 18.7350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { 62.2963089861960892202789922984, 137020751.154447332284762252824, 6229631.44264071981139771263459, 137020751.154447332284762252824, 213397177221363.291498702000027, 6851038729671.74130062298467660, 6229631.44264071981139771263459, 6851038729671.74130062298467660, 839071.529076452452258863947824 };
  double hres[9] = { 1101078577689675.87230733316064, 6511084119797234.40533306314777, 878260562952523.189245337319988, 6511084119797234.40533306314777, 16749043888927236.1186561717467, 248895500349626.905388175580266, 878260562952523.189245337319988, 248895500349626.905388175580266, -46721025620582.7829424611724852 };
  adreal<3,DO_HESS_TEST,double> ad1(-5.3493437193005881638829011649, g1,h1), ad2(31148153654026.5155336870438903, g2,h2), adresMaple(-166622180116976.406244791030149, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 936752127542.512308213863982944, 899999999.650006497828707047882, -696987.004342585904235304973562 };
  double g2  [3] = { 2593443309930.02189778981421073, 2840743525185598156.34115753065, 1296756654268.39047181346163127 };
  double gres[3] = { .121470586925481999811877772179e31, -984552495095460847076845618954., -1353764274725924366998932.57833 };
  double h1  [9] = { 349993502174.792887139365416302, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, 180000000., 900., 1873504.25506628957387706507015, 900., -.699987004342585904235304973562 };
  double h2  [9] = { 2593443.30983634668503649973204, 5681487050352.46127013165216555, 2593478.30918656381433171149729, 5681487050352.46127013165216555, 3683653645154333844.90060146618, 2840750525036.90653964953698796, 2593478.30918656381433171149729, 2840750525036.90653964953698796, -93675212.7533144786938532535075 };
  double hres[9] = { 453849012209667016958321053307., .266107057191644999187597239610e31, 3644150385575719479248758.05214, .266107057191644999187597239610e31, -.127285713088979636130609534069e31, -2963349162734246798844521.52785, 3644150385575719479248758.05214, -2963349162734246798844521.52785, 29789356761843830268.7464690904 };
  adreal<3,DO_HESS_TEST,double> ad1(-346993502174.792887139365416302, g1,h1), ad2(1296721655011848555.27156434471, g2,h2), adresMaple(-449953988418454903582977854450., gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 10.3042734028645926563238578858, -900.349993502171292952117652487, 3000.69998700434258590423530497 };
  double g2  [3] = { -2593389.27960575987106475963838, -2840732719120.74575099614661618, 1296805802016.65413216891511625 };
  double gres[3] = { -13353427565221.7273622897020023, 9700589462748255.81502936054047, -7786320540246077.53482518326293 };
  double h1  [9] = { 3.84992852388422247329417735459, .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, -180., 900., -1.87350425506628957387706507015, 900., -.699987004342585904235304973562 };
  double h2  [9] = { -2.59344330983634668503649973204, -5681476.24428760886478664125108, 2593527.45693482747468716498227, -5681476.24428760886478664125108, -3683652564547.84860436610037474, 2840760354586.55927172062768496, 2593527.45693482747468716498227, 2840760354586.55927172062768496, -54030230.5868139717400936607443 };
  double hres[9] = { -4992131112475.98072513647295089, -30466941498381.2047648765942228, 15776381296215.8392417048759546, -30466941498381.2047648765942228, 16413847035571181.0686711088425, -19391984379064853.0758095488488, 15776381296215.8392417048759546, -19391984379064853.0758095488488, 7783720255707579.64787116207993 };
  adreal<3,DO_HESS_TEST,double> ad1(-3003.84992852388422247329417735, g1,h1), ad2(-1296667624687.58652854650977236, g2,h2), adresMaple(3894994951737041.52663395282264, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 9.36752127533238462151285849554, -.349093502171292952117652486781, 2999.99999930001299565741409576 };
  double g2  [3] = { 102.593443309786346685036503899, 22840743.5251568631137904954682, 1296721654818.17334251826653269 };
  double gres[3] = { 948898836.460795385446345137830, -115234623.276060444070226799282, -4230661203253.97061003617818075 };
  double h1  [9] = { 3.49993502171327951467869616076, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, .180e-3, 900., .187350425506628957387706507015e-5, 900., -.699987004342585904235304973562 };
  double h2  [9] = { .259344330983634668503649973204e-5, 25.6814870503237262275809901031, 2593443.30973634668503651639871, 25.6814870503237262275809901031, 5683653.64515146034064553525994, 2840743525146.86311379049796824, 2593443.30973634668503651639871, 2840743525146.86311379049796824, -99999999.9999500000000000041667 };
  double hres[9] = { 354533865.797131830438570815058, 308850944.817451964411415290130, 12147058928560.8284306806291798, 308850944.817451964411415290130, -35804244.3719071916183377930659, -10226883344564.2708178494370051, 12147058928560.8284306806291798, -10226883344564.2708178494370051, 7780330205880776.87210211248883 };
  adreal<3,DO_HESS_TEST,double> ad1(-3.49693502171327951467869616076, g1,h1), ad2(101296721.654868173342518254033, g2,h2), adresMaple(-354228053.539650466960278053360, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
}
void test3() { 
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 10.3042734028645926563238578858, 899.650006497828707047882347513, 2999.30001299565741409576469503 };
  double g2  [3] = { 2593497.34006693349900823982570, 2840754331212.98047658484265364, 1296637507819.69255286758461579 };
  double gres[3] = { 13370101709200.6930870265037789, 9677970546080165.27655663499482, 7774339891051713.35716127475582 };
  double h1  [9] = { 3.84992852388422247329417735459, .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, 180., 900., 1.87350425506628957387706507015, 900., -.699987004342585904235304973562 };
  double h2  [9] = { 2.59344330983634668503649973204, 5681497.85637984359037533728854, 2593359.16273786589538583448181, 5681497.85637984359037533728854, 3683654725757.07207692496997848, 2840726695747.16695586036158486, 2593359.16273786589538583448181, 2840726695747.16695586036158486, -54030230.5868139717400936607443 };
  double hres[9] = { 4992547155315.38608986318432691, 30506022541293.9882247119699389, 15805970918822.3606734974940790, 30506022541293.9882247119699389, 16381571298266145.8516645498357, 19365136054000745.8687840871583, 15805970918822.3606734974940790, 19365136054000745.8687840871583, 7776940179302135.29272949656090 };
  adreal<3,DO_HESS_TEST,double> ad1(2996.15007147611577752670582265, g1,h1), ad2(1296775685148.76015648998995968, g2,h2), adresMaple(3885334561746946.75204178313502, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 103.042734028645926563238578858, 8999.65000649782870704788234751, 2993.00012995657414095764695026 };
  double g2  [3] = { 25934349.1912105592051197714340, 28407418470238.0496088559011718, 1296776057029.26227949959034079 };
  double gres[3] = { 1336945831968578.36519743244560, 967828544166649567.209475268583, 77663986442323807.8335115945866 };
  double h1  [9] = { 38.4992852388422247329417735459, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, 1800., 900., 18.7350425506628957387706507015, 900., -.699987004342585904235304973562 };
  double h2  [9] = { 25.9344330983634668503649973204, 56814853.7219066807467608475208, 2593497.71194743562201784020681, 56814853.7219066807467608475208, 36836534773381.5452535504472484, 2840754405589.08090118676272986, 2593497.71194743562201784020681, 2840754405589.08090118676272986, 83907152.9076452452258863947824 };
  double hres[9] = { 499230683784895.918236513726575, 2941260713305873.22989619601463, 376718458741732.158164306837213, 2941260713305873.22989619601463, 1638332349338176102.35196695060, 193477622354566994.540574837475, 376718458741732.158164306837213, 193477622354566994.540574837475, 7755938974315120.87184052364001 };
  adreal<3,DO_HESS_TEST,double> ad1(29961.5007147611577752670582265, g1,h1), ad2(12967132642028.8257799372727738, g2,h2), adresMaple(388514753922549403.847571717050, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 540302846170.445585540654008380, 8999999999999999999.15852901519, 2999999999998317058.03038420699 };
  double g2  [3] = { 936753622030.960737334649229063, 405686.21016877343430675418196, -349993502172.040201025627684839 };
  double gres[3] = { .281026086609158782997844084762e37, -.721371724253249592903697190452e31, -.104998331677445043798721028788e37 };
  double h1  [9] = { 841471826278.881314549008974132, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18000000000000., 9000000000000., 1080604.61173627943480187321489, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { -1494497.81595039611669398835430, -2684876.67540383644249057343407, 349993502172.787449933602882898, -2684876.67540383644249057343407, -1703124.45971863951353128064744, -699984.725152120669172296789743, 349993502172.787449933602882898, -699984.725152120669172296789743, 936752127533.144786938532535075 };
  double hres[9] = { -.448349322383978679951775817271e31, .37615257206961574873913395554e30, .104998331677874482793743539797e37, .37615257206961574873913395554e30, -.510938293835444844837224388551e31, -.524990290872137733186529173870e31, .104998331677874482793743539797e37, -.524990290872137733186529173870e31, .281025428263763307922890459288e37 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999158528173721.11869, g1,h1), ad2(-936752874782.052762136590882069, g2,h2), adresMaple(-.281025862434537003525745780005e37, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 540302.846170445585540654008380, -9000000000000.84147098480789651, 3000000000000000001.68294196962 };
  double g2  [3] = { 540302305866.645219584986211326, -1080606.89092674466986488139871, -841470984808.643755560477519688 };
  double gres[3] = { -.162090691760068223479667153745e31, 8104541425588130174998706.76439, .90350603682446193441959852234e30 };
  double h1  [9] = { 841471.826278881314549008974132, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -18000000., 9000000000000., -1.08060461173627943480187321489, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { 1.49449781595039611669398835430, 1080609.17011720990492788958253, 841470984809.391004468452717747, 1080609.17011720990492788958253, .62251797447810501243983355548, -1682939.69042532777824199645944, 841470984809.391004468452717747, -1682939.69042532777824199645944, 540302305868.139717400936607443 };
  double hres[9] = { -4354288868608965296.51116373811, -8104548263153676423494313.60921, -.90350603682940007645165913403e30, -8104548263153676423494313.60921, 27308811618861448220.4741910123, 4517516508969135126673485.10122, -.90350603682940007645165913403e30, 4517516508969135126673485.10122, -.666973282645673633665673274101e31 };
  adreal<3,DO_HESS_TEST,double> ad1(-3000000000000841471.82627888131, g1,h1), ad2(-540302305867.392468492961409385, g2,h2), adresMaple(.162090691760263205464694515362e31, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 540302.305868139717941238913311, 8999999.15852901519210349334750, 2999999999999999999.99999831706 };
  double g2  [3] = { 999999999999.500001494497857617, -1999999.99999672080953476502032, 999999.252750925358135274994673 };
  double gres[3] = { 2999998618225209329138153.12166, -14999997475572708014.8200924611, -.299999999999550000532496274594e31 };
  double h1  [9] = { 841470.984807896507493973306438, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, 18.000000, 9000000000000., .108060461173627943480187321489e-5, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 1999999.99999444161906952995731, -999998.505502017382937216647679, 1999999.99999444161906952995731, -2.00000170312158621438444732504, 4.27919046523472967485048593544, -999998.505502017382937216647679, 4.27919046523472967485048593544, 999999999999.500000000000041667 };
  double hres[9] = { 239133626923779870.370938656975, 14999995854658952849.6902510959, .299999999999550001034875638651e31, 14999995854658952849.6902510959, -60000000060469.3912589708396919, -14999999999963824875101354.6956, .299999999999550001034875638651e31, -14999999999963824875101354.6956, 8999994675034750283305489.67713 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999158529.01519210349250603, g1,h1), ad2(-999999999999.500000747248949642, g2,h2), adresMaple(-2999999158527515194765974.21857, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 540302.846170445585540654008380, 8999999999999.15852901519210349, 2999999999999999998.31705803038 };
  double g2  [3] = { 540302305869.634215216887003560, -1080602.33254581419973886503107, 841470984807.149257744527123572 };
  double gres[3] = { .162090691760815606960894478457e31, -8104527750456061350865139.32778, .90350603681407880108979702037e30 };
  double h1  [9] = { 841471.826278881314549008974132, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 18000000., 9000000000000., 1.08060461173627943480187321489, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { -1.49449781595039611669398835430, 1080600.05335534896467585684725, -841470984806.402008836551925513, 1080600.05335534896467585684725, -2.78372719795066388204357998526, 1682944.24880625824836801282708, -841470984806.402008836551925513, 1682944.24880625824836801282708, 540302305868.139717400936607443 };
  double hres[9] = { -4354288868604477793.01039210376, 8104520912890515108668185.73500, -.90350603680914065905773847373e30, 8104520912890515108668185.73500, -37527465085312451615.9636952033, 4517543859223568547037730.78401, -.90350603680914065905773847373e30, 4517543859223568547037730.78401, .666973282644686004757891476324e31 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999158528.17372111869, g1,h1), ad2(-540302305868.886966308911805501, g2,h2), adresMaple(-.162090691760620624975867323346e31, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 540356.336098726531372676701104, 89999999999999.1585290151921035, 2999999999999999983.17058030384 };
  double g2  [3] = { -839071529061.507474099359986657, 1678165.85005755725514780973384, -544021110890.117062312722859909 };
  double gres[3] = { -.251721458718440647004123088870e32, 125861413117932796017125173.159, -.138034187394961141702077018270e32 };
  double h1  [9] = { 841555.131906377296303167571862, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 180000000., 9000000000000., 10.8060461173627943480187321489, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { -14.9449781595039611669398835430, -1678188.64196220960577789157204, 544021110890.864311220698057968, -1678188.64196220960577789157204, -15.3530828039909395678993398080, -1088039.94258827439174648713988, 544021110890.864311220698057968, -1088039.94258827439174648713988, -839071529076.452452258863947824 };
  double hres[9] = { -448550015068118591498.215579106, -125862096874398482339837264.632, .138034187395406551484990177777e32, -125862096874398482339837264.632, -7489755876941391528.251043745, -69016956945963902531149450.8168, .138034187395406551484990177777e32, -69016956945963902531149450.8168, -.284362725376335697997919142689e32 };
  adreal<3,DO_HESS_TEST,double> ad1(29999999999999158444.8680936227, g1,h1), ad2(839071529068.979963179111967241, g2,h2), adresMaple(.251721458720686927704220344861e32, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 540302305867.599415095068467726, 8999999.15852901519210349334750, -1682944.96961579301330500464326 };
  double g2  [3] = { 6229631.83537173645517268616837, 6851039.51513377458817293174417, -3.46480895148109741313160210170 };
  double gres[3] = { -6925015600134587542.89781815665, -5764999554215065065.69098064777, 8157611163197.72559309373197039 };
  double h1  [9] = { 841470984807.055035667694425123, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, -18000000., 9., 1080604.61173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -6229630.89861960892202789922984, -13702077.1567632941100562896113, 6.57962440079090187414555171662, -13702077.1567632941100562896113, -21339719.7634548900314502643316, 7.55102464597210542611866284066, 6.57962440079090187414555171662, 7.55102464597210542611866284066, .936752127533144786938532535075 };
  double hres[9] = { 9352813614981020708.02235144000, 15231629979531744026.4062774446, -21258639540330.7072368251201395, 15231629979531744026.4062774446, 17956998409414943834.6629962479, -17883972503480.9594942724050856, -21258639540330.7072368251201395, -17883972503480.9594942724050856, -788235641310.987057231624904994 };
  adreal<3,DO_HESS_TEST,double> ad1(-841473984807.055035667694425123, g1,h1), ad2(-3114816.38606193199415873655345, g2,h2), adresMaple(2621036956321844235.41334835001, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 0., -9.84147098480789650665250232163, -1.31705803038420698669499535674 };
  double g2  [3] = { -5.68932859275146920462696262240, -5.77043302989324008708148465221, -3.95628643411770096766645193655 };
  double gres[3] = { -17.0679857782544076138808878672, -42.6482954908674339070851943589, -15.2596425122526352271911481622 };
  double h1  [9] = { 0., .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., -1.08060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, 12.6214706715227596089648425193, 7.07110188342750542868040155147, 12.6214706715227596089648425193, 20.2591132782143555303588172396, 8.53397961124531253518836251036, 7.07110188342750542868040155147, 8.53397961124531253518836251036, .540302305868139717400936607443 };
  double hres[9] = { 18.6888926958588267660836976895, 95.2467896710591686296862365204, 25.9244507850815899776240017998, 95.2467896710591686296862365204, 220.697674883535911219072741087, 95.3082304344845345873498118733, 25.9244507850815899776240017998, 95.3082304344845345873498118733, 7.70946833428859107347260524101 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(2.57451314344166474361301300748, g2,h2), adresMaple(7.72353943032499423083903902243, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -.540302305867599415095068467726, -.841461984807896506652502321630, -3.00000168294196961579301330500 };
  double g2  [3] = { 1.00000622963039861960892206957, 2.00000685103664162951952196669, -3.11481444930980446118061628159 };
  double gres[3] = { 1.38177721565089153293318652784, 2.52440634034837280480938824912, .37899438968344156014234297994 };
  double h1  [9] = { -.841470984807055035667694425123, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, -.18e-4, 9., .108060461173627943480187321489e-5, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -.622963089861960892202789922984e-5, -2.00001370207428325903904385005, 6.22962989861960892219456589651, -2.00001370207428325903904385005, -2.00002133971688995063496524402, 6.85103564162951952221669120043, 6.22962989861960892219456589651, 6.85103564162951952221669120043, .999999999999500000000000041667 };
  double hres[9] = { -.239142979704037414404179161192, -4.14532702845193429868298585878, 3.92495409374539788572930754632, -4.14532702845193429868298585878, -5.04879539525197808309658042107, -6.61412684831209351909481481325, 3.92495409374539788572930754632, -6.61412684831209351909481481325, 21.2133123764379884805707605439 };
  adreal<3,DO_HESS_TEST,double> ad1(.841467984807055035667694425123, g1,h1), ad2(-1.00000311481494930980446105562, g2,h2), adresMaple(-.841470605824113478278135717294, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 0., 8.15852901519210349334749767837, -4.68294196961579301330500464326 };
  double g2  [3] = { 6.76993320448774863942883583728, 7.93164225336579895668523108199, -2.27334446450190795436144729329 };
  double gres[3] = { -20.3097996134632459182865075118, -53.6153110196604818270700260464, 23.9367377331163816957682869487 };
  double h1  [9] = { 0., .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, -18., 9., 1.08060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -6.22963089861960892202789922984, -14.7826798949953184785685889491, 5.38815991381171241537539690821, -14.7826798949953184785685889491, -22.4203225016869143999625636694, 5.16809567201372650857835322384, 5.38815991381171241537539690821, 5.16809567201372650857835322384, .540302305868139717400936607443 };
  double hres[9] = { 18.6888926958588267660836976895, 97.6058676133694869210177923855, -51.8174211789107957035076922310, 97.6058676133694869210177923855, 262.474154022680835174610391530, -104.090913984072529440334316362, -51.8174211789107957035076922310, -104.090913984072529440334316362, 25.8223245648918563014965569518 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(-3.65511775517794417841488622236, g2,h2), adresMaple(10.9653532655338325352446586671, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 53.4899282809458320226927241369, 89.1585290151921034933474976784, -19.8294196961579301330500464326 };
  double g2  [3] = { 61.4572374571196367680201283506, 66.8322333581422903143158507754, -3.65883656019917427441869727677 };
  double gres[3] = { -8584.68152825524658387871734878, -10274.7813904737799008001928548, 1015.57829905786139776236694928 };
  double h1  [9] = { 83.3056274959817541585977298414, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, -180., 9., 10.8060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -62.2963089861960892202789922984, -135.342609774437485533149429446, 6.77365200950897873543264689169, -135.342609774437485533149429446, -211.719035841353444747089176649, 7.93907986340825914869285319080, 6.77365200950897873543264689169, 7.93907986340825914869285319080, -.839071529076452452258863947824 };
  double hres[9] = { 11108.2916530716998695752190171, 24372.9915182188420944539446045, -2509.38649976144435380178623522, 24372.9915182188420944539446045, 41361.9203763967279254264101919, -2823.78506244491377234561520735, -2509.38649976144435380178623522, -2823.78506244491377234561520735, 291.185165400411794058089209959 };
  adreal<3,DO_HESS_TEST,double> ad1(-113.305627495981754158597729841, g1,h1), ad2(-30.3090829640215921578806322014, g2,h2), adresMaple(3434.18966406623707642084794673, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 540302305868.139717941238913311, -.841461984807896506652502321630, -1682941.96961579301330500164326 };
  double g2  [3] = { -4.00000000000039658120580072189, 2000000.00000012649574493504376, .199999965000716449537371481569e-5 };
  double gres[3] = { 4446488550968.05324963887301565, -1682941969615899459.16992908226, -5048825.61433810853565446292991 };
  double h1  [9] = { 841470984807.896507493973306438, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18.000000, .9e-11, 1080604.61173627943480187321489, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { 4.00000000000133333333333386668, -4000000.00000212649574493637710, -.399999965000783116204038174903e-5, -4000000.00000212649574493637710, 2.12649574493904375945627279653, 1.99999930001499565741409709803, -.399999965000783116204038174903e-5, 1.99999930001499565741409709803, .936752127533144786938532535075e-12 };
  double hres[9] = { -6005360416562.68853638957714366, 4446488550969723200.71616393029, 13339465.1692937809086355710603, 4446488550969723200.71616393029, -1789387834495.59788962468550377, -5048825319830.52097336350544805, 13339465.1692937809086355710603, -5048825319830.52097336350544805, -10.8859003749352472792297287283 };
  adreal<3,DO_HESS_TEST,double> ad1(-841470984807.896507493970306438, g1,h1), ad2(1.99999999999972991453913378855, g2,h2), adresMaple(-1682941969615.56574590920322733, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380, -.841470984816896506652502321630, 1.68294196961579301630500464326 };
  double g2  [3] = { .400000054030363920147305126762e-5, -2.00000108060661173627943613520, .199999915852968185877016028084e-5 };
  double gres[3] = { -.444649374403394032017462506811e-5, 1.68294624480020598492651281751, -.504882779301433208893085178008e-5 };
  double h1  [9] = { .841471826278881314549008974132, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -.18e-4, .9e-11, -1.08060461173627943480187321489, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { -.400000000000133333333333386668e-5, 4.00000108060861173627943746854, -.399999915853034852543682721418e-5, 4.00000108060861173627943746854, -1.08060861173627944013520654823, 1.99999831706003038420698802833, -.399999915853034852543682721418e-5, 1.99999831706003038420698802833, .540302305868139717400936607443e-12 };
  double hres[9] = { .600536655112790835869736324633e-5, -4.44649893710224394404716186822, .133394704298238897361298212967e-4, -4.44649893710224394404716186822, 4.27518745991221923542165545873, -5.04882967718226003161999247424, .133394704298238897361298212967e-4, -5.04882967718226003161999247424, .100976494400527096456119149842e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841471826278881317549008974132, g1,h1), ad2(-.200000054030297253480638433428e-5, g2,h2), adresMaple(.168294410720749167786979958664e-5, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380e-6, -.841470984807896497652502321630, -.168294196961279301330500464326e-5 };
  double g2  [3] = { -.300000000000183333333333382501e-11, .300000000000125000e-17, .200000000000166666666666676667e-5 };
  double gres[3] = { .306471832500926257185639160167e-17, -.841470984811402629280282752652e-12, -.168294533550113469089826177082e-11 };
  double h1  [9] = { .841471826278881314549008974132e-6, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .18e-10, .9e-11, .108060461173627943480187321489e-5, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-11, -.200000000000500000000000258334e-5, -.400000000000233333333333370001e-5, -.200000000000500000000000258334e-5, -1.99999999999499999999999475000, 2.00000000000400000000000100000, -.400000000000233333333333370001e-5, 2.00000000000400000000000100000, .999999999999500000000000041667e-12 };
  double hres[9] = { -.576623255586143880063128987748e-17, .474765891285759315062203128831e-11, .444649912688980093528685278310e-11, .474765891285759315062203128831e-11, .168294365254850645605776964134e-5, -.336588562217832395339831144538e-5, .444649912688980093528685278310e-11, -.336588562217832395339831144538e-5, -.841471068954636458384886063601e-11 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841471826278881311549008974132e-6, g1,h1), ad2(.100000000000116666666666689167e-11, g2,h2), adresMaple(-.841471826279863028679667858329e-18, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380, -.841470984798896506652502321630, -1.68294196961579301030500464326 };
  double g2  [3] = { -.399999945969902746519361646574e-5, 1.99999891939738826372056653146, .200000084147165147456317358584e-5 };
  double gres[3] = { .444649225088185686704503813033e-5, -1.68294442620262439328264498036, -.504882739056773110754639512797e-5 };
  double h1  [9] = { .841471826278881314549008974132, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, .18e-4, .9e-11, 1.08060461173627943480187321489, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-5, -3.99999891939938826372056786480, -.400000084147231814122984051918e-5, -3.99999891939938826372056786480, -1.08060061173627942946853988155, 2.00000168294396961579301463833, -.400000084147231814122984051918e-5, 2.00000168294396961579301463833, .540302305868139717400936607443e-12 };
  double hres[9] = { -.600536629271874984576375260394e-5, 4.44649595079658383919770945335, .133394697689692979481386597174e-4, 4.44649595079658383919770945335, -2.45658715033229489053932335078, -5.04882887229047416768762631242, .133394697689692979481386597174e-4, -5.04882887229047416768762631242, -.100976541953435382819265932603e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841471826278881311549008974132, g1,h1), ad2(.199999945969836079852694953240e-5, g2,h2), adresMaple(-.168294319790915554276127850892e-5, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 54.0302311271162776082333781452, -.841470984717896506652502321630, -16.8294196961579301300500464326 };
  double g2  [3] = { -.400000008390848624097857909257e-4, 20.0000016781630581529049178510, .199999945597955577729685352859e-5 };
  double gres[3] = { .444648871137489707661662124949e-2, -1682.94214448718664262196129420, -.504882560911136634195048673246e-3 };
  double h1  [9] = { 84.1470993222606354731467388155, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, .180e-3, .9e-11, 10.8060461173627943480187321489, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-4, -40.0000016781830581529049311844, -.399999945598022244396352046193e-5, -40.0000016781830581529049311844, 1.67818305815290495785106122903, 1.99999891195977822126037452383, -.399999945598022244396352046193e-5, 1.99999891195977822126037452383, -.839071529076452452258863947824e-12 };
  double hres[9] = { -.600536049668153870443698092231e-2, 4446.48887178341201170795542397, .133394651775404058410129798574e-2, 4446.48887178341201170795542397, -174.873078684694491573471563741, -504.882530937703200578699801122, .133394651775404058410129798574e-2, -504.882530937703200578699801122, -.100976430672535438286249944209e-3 };
  adreal<3,DO_HESS_TEST,double> ad1(-84.1470993222606354431467388155, g1,h1), ad2(.200000008390781957431191215923e-4, g2,h2), adresMaple(-.168294205705120898520243061640e-2, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 540302305868.680019706804747160, 8999999.15852901519210349334750, -1682938.96961579301330500464326 };
  double g2  [3] = { -6229629.96186748138888311229131, 6851035.76812526445559378399003, 2.76482194713851150889629712814 };
  double gres[3] = { 6924975633604906197.97516493063, -5764899228328958559.69288650934, -7568551878521.74973480508232663 };
  double h1  [9] = { 841470984808.737977637310218137, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18000000., 9., 1080604.61173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { 6229630.89861960892202789922984, -13702073.4097547839774771418571, -5.87963739644831596991024674306, -13702073.4097547839774771418571, 21339716.0164463798988711165774, 6.15105063728693361764805289354, -5.87963739644831596991024674306, 6.15105063728693361764805289354, .936752127533144786938532535075 };
  double hres[9] = { -9352775789196467000.01293437434, 15231430456251903133.8751978961, 20291336260836.5787724409975939, 15231430456251903133.8751978961, -17956508447456362514.7811800669, -16705734343898.2043509425758077, 20291336260836.5787724409975939, -16705734343898.2043509425758077, -788261473125.881786721123464039 };
  adreal<3,DO_HESS_TEST,double> ad1(-841467984808.737977637310218137, g1,h1), ad2(3114814.51255767692786916267639, g2,h2), adresMaple(-2621016690934919877.81861758399, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 1.08060461173627943480187321489, -9.84147098480789650665250232163, 4.68294196961579301330500464326 };
  double g2  [3] = { 6.76993320448774863942883583728, -7.93164225336579895668523108199, 2.27334446450190795436144729329 };
  double gres[3] = { -35.6529414374756584573815015064, 73.1151557299045915815887234051, -27.7626445438203829108139852550 };
  double h1  [9] = { 1.68294196961579301330500464326, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -18., 9., -1.08060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -6.22963089861960892202789922984, 14.7826798949953184785685889491, -5.38815991381171241537539690821, 14.7826798949953184785685889491, -22.4203225016869143999625636694, 5.16809567201372650857835322384, -5.38815991381171241537539690821, 5.16809567201372650857835322384, .540302305868139717400936607443 };
  double hres[9] = { 37.6528910001163480051758450466, -146.398371053694522681131445069, 63.3419681492718448518106464938, -146.398371053694522681131445069, 326.903243005425663583160448940, -116.614425904198166947672249435, 63.3419681492718448518106464938, -116.614425904198166947672249435, 24.9130271380661746061005370859 };
  adreal<3,DO_HESS_TEST,double> ad1(-4.68294196961579301330500464326, g1,h1), ad2(-3.65511775517794417841488622236, g2,h2), adresMaple(17.1167043396106578326839450688, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { .540302305868680019706804747160, -.841461984807896506652502321630, 2.99999831705803038420698669500 };
  double g2  [3] = { .999993770368601380391078013768, -1.99999314896135837048047819997, 3.11481644930980446084728294825 };
  double gres[3] = { -1.38176336569979913103302417550, 2.52438956849648182562130341899, -5.62100729326525421631193467760 };
  double h1  [9] = { .841470984808737977637310218137, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .18e-4, 9., .108060461173627943480187321489e-5, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { .622963089861960892202789922984e-5, 1.99998629792371674096095631661, -6.22963189861960892186123256317, 1.99998629792371674096095631661, -1.99997866028111004936503492264, 6.85103964162951952155002453377, -6.22963189861960892186123256317, 6.85103964162951952155002453377, .999999999999500000000000041667 };
  double hres[9] = { .239124274152489289562044858147, -4.14528271560013771030255951667, 9.92495685732452921104236742602, -4.14528271560013771030255951667, 5.04873642243773119491109362339, -23.3858782005034050237903081302, 9.92495685732452921104236742602, -23.3858782005034050237903081302, 19.5303569545011534263889514673 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841467984808737977637310218137, g1,h1), ad2(-.999996885184050690195539027717, g2,h2), adresMaple(.841465363790838061800007452334, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 1.08060461173627943480187321489, 8.15852901519210349334749767837, 1.31705803038420698669499535674 };
  double g2  [3] = { -5.68932859275146920462696262240, 5.77043302989324008708148465221, 3.95628643411770096766645193655 };
  double gres[3] = { -4.71114513479907369158279714543, 28.6042353415774143249426161957, 8.60144202845434923815031339684 };
  double h1  [9] = { 1.68294196961579301330500464326, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., 1.08060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, -12.6214706715227596089648425193, -7.07110188342750542868040155147, -12.6214706715227596089648425193, 20.2591132782143555303588172396, 8.53397961124531253518836251036, -7.07110188342750542868040155147, 8.53397961124531253518836251036, .540302305868139717400936607443 };
  double hres[9] = { .24171219176137258820923768270, -55.4131897724053687199632936555, -9.74901528797489266453387134625, -55.4131897724053687199632936555, 167.180155022699263155274922068, 74.2878374950760427580264694238, -9.74901528797489266453387134625, 74.2878374950760427580264694238, 6.80017090746290937807658537510 };
  adreal<3,DO_HESS_TEST,double> ad1(1.31705803038420698669499535674, g1,h1), ad2(2.57451314344166474361301300748, g2,h2), adresMaple(3.39078320989953232419179235252, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 54.5705328926821114574945973517, 89.1585290151921034933474976784, -13.8294196961579301330500464326 };
  double g2  [3] = { -63.1353805152725416725378562462, 70.1885194744481001233513065666, 2.57079433842043464760920195307 };
  double gres[3] = { 5217.28422698972858591172094966, -1007.63225939458280988994269838, -583.729076636512429167228037749 };
  double h1  [9] = { 84.9885694655975471719027344846, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 180., 9., 10.8060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { 62.2963089861960892202789922984, -138.698895890743295342184885238, -5.68560978773023910862315156799, -138.698895890743295342184885238, 215.075321957659254556124632441, 5.76299541985077989507386254340, -5.68560978773023910862315156799, 5.76299541985077989507386254340, -.839071529076452452258863947824 };
  double hres[9] = { -7597.69905154178863128651670676, 5845.30389858083403277843495847, 1671.71428015643941483649620619, 5845.30389858083403277843495847, 6446.8267023788200043770041409, -770.472091824761734671904591116, 1671.71428015643941483649620619, -770.472091824761734671904591116, -78.7984898181239469340877535372 };
  adreal<3,DO_HESS_TEST,double> ad1(-54.9885694655975471719027344846, g1,h1), ad2(31.9872260221744970623983600970, g2,h2), adresMaple(-1758.93180013211183851369458968, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 540302305873.542740459618004617, 899999999.158529015192103493347, -1679941.96961579301330500464326 };
  double g2  [3] = { -2593349.63462359337055780587879, 2840724.79012431245089475586426, -33.7026285622111218692469988121 };
  double gres[3] = { 2875019509410856818.96983094141, -2380698347186997448.99269018111, 26080416399370.2284777020602017 };
  double h1  [9] = { 841470984816.311216500581286697, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 180000000., 900., 1080604.61173627943480187321489, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { 2593443.30983634668503649973204, -5681468.31529117556468525049916, 32.4059069072929485267287489461, -5681468.31529117556468525049916, 3683651.77164820527435596129954, -4.15912651825899592856255510071, 32.4059069072929485267287489461, -4.15912651825899592856255510071, 93.6752127533144786938532535075 };
  double hres[9] = { -3885837718087525667.14400779831, 6296262473312883871.54343015404, -39623201536917.8837473954445966, 6296262473312883871.54343015404, -3083288431040430274.05867129240, -1314111291813.48712884479004870, -39623201536917.8837473954445966, -1314111291813.48712884479004870, -78543836835378.2970540086229139 };
  adreal<3,DO_HESS_TEST,double> ad1(-838470984816.311216500581286697, g1,h1), ad2(1296627.97970542002803955601277, g2,h2), adresMaple(-1087184939083987524.50565656828, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 5.94332536454953689141030268187, -900.841470984807896506652502322, 3001.68294196961579301330500464 };
  double g2  [3] = { 56.6236738966503184251301604763, -13.6467896425296574618092267838, -82.8503768258714773227319822970 };
  double gres[3] = { -170723.966733562273580824685141, 90907.4991228567947259260422890, 83244.039772412542495126709820 };
  double h1  [9] = { 9.25618083288686157317752553793, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -180., 900., -1.08060461173627943480187321489, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { -2.59344330983634668503649973204, 16.4875331676965205755997214187, 81.5536551709533039802137324310, 16.4875331676965205755997214187, -4.76425825688873977544740839150, -13.9886761709910670192595517977, 81.5536551709533039802137324310, -13.9886761709910670192595517977, 54.0302305868139717400936607443 };
  double hres[9] = { 7965.28486949064474960631022912, -100735.165368100505510985641077, -75882.145031785648532855006057, -100735.165368100505510985641077, 48882.9131217316566606934235716, 25972.9728605004565099087856394, -75882.145031785648532855006057, 25972.9728605004565099087856394, -659878.819003163850073057875931 };
  adreal<3,DO_HESS_TEST,double> ad1(-3009.25618083288686157317752554, g1,h1), ad2(-55.3269522417321450826119106103, g2,h2), adresMaple(166492.973000078403107531867648, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 5.40302305868193747631523421415, -.840570984807896506652502321630, 2999.99999831705803038420698669 };
  double g2  [3] = { 99.9999974065066901636533191302, -19.9999971592464748331368870428, 1.29682165491817332585158319935 };
  double gres[3] = { -1381.47326185397403273498932770, 252.291270456762750756383168692, -300010.904428876718817337410148 };
  double h1  [9] = { 8.41470984807980653750983111281, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .180e-3, 900., .108060461173627943480187321489e-5, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { .259344330983634668503649973204e-5, 19.9999943185029496662737732523, -2.59354330983634666836983306537, 19.9999943185029496662737732523, -1.99999631634535484753965943779, 2.84076352516686311045716130158, -2.59354330983634666836983306537, 2.84076352516686311045716130158, 99.9999999999500000000000041667 };
  double hres[9] = { 239.133587999663115909439790477, -414.381921182413071166145404611, 300028.814834270710976868393131, -414.381921182413071166145404611, 50.4282233271648601931017149539, -150024.976026162407246409210715, 300028.814834270710976868393131, -150024.976026162407246409210715, 7108.05313511571656477469267655 };
  adreal<3,DO_HESS_TEST,double> ad1(-8.41170984807980653750983111281, g1,h1), ad2(-99.9999987032283450818266616485, g2,h2), adresMaple(841.170973899913753365035951179, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 5.94332536454953689141030268187, 899.158529015192103493347497678, 2998.31705803038420698669499536 };
  double g2  [3] = { 51.4367872769776250550571610123, -7.96530259219593123422823751399, 85.4438201357078240077684820290 };
  double gres[3] = { 153520.841225237800231367389948, -71237.9638164186858841234983636, 97428.797596593902318727587132 };
  double h1  [9] = { 9.25618083288686157317752553793, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 180., 900., 1.08060461173627943480187321489, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { 2.59344330983634668503649973204, 5.12455906702906812043774287909, -86.7405417906259973502867318950, 5.12455906702906812043774287909, 2.60304903341618090584366196172, 19.6701632213247932468405410675, -86.7405417906259973502867318950, 19.6701632213247932468405410675, 54.0302305868139717400936607443 };
  double hres[9] = { 7879.62477961547224428241620572, 61500.2369195035915337465014166, -104744.106178167410124339746263, 61500.2369195035915337465014166, -16031.1183239824527387533086429, 64313.2980295861796124370397369, -104744.106178167410124339746263, 64313.2980295861796124370397369, 674054.652443419959702621429154 };
  adreal<3,DO_HESS_TEST,double> ad1(2990.74381916711313842682247446, g1,h1), ad2(-52.7335089318957983975754108783, g2,h2), adresMaple(-157712.415901061113187486746599, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 59.4332536454953689141030268187, 8999.15852901519210349334749768, 2983.17058030384206986694995357 };
  double g2  [3] = { -109.841586006008712076251392103, 45.1888658331976801830822253056, -53.1053894340188079979565163191 };
  double gres[3] = { -3279322.88537815921944418345760, 2223271.01999845232969197070610, -1299253.38319345133465836241099 };
  double h1  [9] = { 92.5618083288686157317752553793, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 1800., 900., 10.8060461173627943480187321489, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { 25.9344330983634668503649973204, -73.5963010848663113209871716546, 51.8086677791006346554382664531, -73.5963010848663113209871716546, 38.5146795096775083109730796618, -8.03967869262053315430445860209, 51.8086677791006346554382664531, -8.03967869262053315430445860209, -83.9071529076452452258863947824 };
  double hres[9] = { 771542.836059141022163378987950, -3186820.60860757356717705544711, 1219678.94435300257198993474457, -3186820.60860757356717705544711, 2139572.79668867945567738433932, -496356.984220230518971356376315, 1219678.94435300257198993474457, -496356.984220230518971356376315, -2826455.89419692460831076254628 };
  adreal<3,DO_HESS_TEST,double> ad1(29907.4381916711313842682247446, g1,h1), ad2(96.8743694568269786510688934426, g2,h2), adresMaple(2897264.21688716653666179120815, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 1000000999999.49999950000004167, 9000000000000000000.00000100000, 3000000000000000002.00000000000 };
  double g2  [3] = { 936752127531.650289122582138958, 1.87350653425675480894007325397, 349993.502171292951370403578806 };
  double gres[3] = { .281025638259495086924125254544e37, 14051288750561842270968745.1396, .104998331677026145165382055376e31 };
  double h1  [9] = { -1000000.99999983333316666667500, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, 18000000000000., 9000000000000., 1999999.99999900000000000008333, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { -1494497.81595039611669398835430, 1873508.81344722004400308143779, 349993502171.292950623154670831, 1873508.81344722004400308143779, .17038166885190512663535829978e-6, .699987004344865094700540036570, 349993502171.292950623154670831, .699987004344865094700540036570, -936752.127533144786938532535075 };
  double hres[9] = { -.448349157434505978589432895619e31, .140512955881265127378595045322e32, .104998331677026144752032283158e37, .140512955881265127378595045322e32, 51095800918760457625.5478111233, 5249916583864982408977513.21554, .104998331677026144752032283158e37, 5249916583864982408977513.21554, -.281025428263842133399464104711e31 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000000001000001.00000, g1,h1), ad2(936752.127532397538030557337017, g2,h2), adresMaple(.281025638259719261502842507534e31, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 1000000.99999949999950000004167, -8999999999999.99999900000000000, 2999999999999999999.99999800000 };
  double g2  [3] = { 540302305868.139718895434423393, 1.08060461173400024433663815188, 841470.984807896505905253413655 };
  double gres[3] = { -.162090691760441915560569757784e31, -8104534588015258194.72267609619, -903506036819270362429732.94904 };
  double h1  [9] = { -1.00000099999983333316666667500, .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, -18000000., 9000000000000., -1.99999999999900000000000008333, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { 1.49449781595039611669398835430, 1080604.61173172105387140308887, 841470984807.896505158004505680, 1080604.61173172105387140308887, .108060631485886564918632045660e-5, 1.68294196961807220377023970627, 841470984807.896505158004505680, 1.68294196961807220377023970627, -540302.305868139717400936607443 };
  double hres[9] = { -3402887755511377780.20949987089, -8104534588008420628431303.08073, -.90350603681927035710476875552e30, -8104534588008420628431303.08073, -32418143461415.1162690439707622, -4517530184110026965.59000327114, -.90350603681927035710476875552e30, -4517530184110026965.59000327114, 6669732826451798187094025.17280 };
  adreal<3,DO_HESS_TEST,double> ad1(-2999999999999999998.99999900000, g1,h1), ad2(540302.305868139718148185515418, g2,h2), adresMaple(-1620906917604419153904253.70008, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 999999.999999500001000000041667, 9000000.00000099999999999983333, 3000000000000000000.00000000000 };
  double g2  [3] = { 999999999999.499999999998547169, 1.99999999999900000227919054857, -1.00000000000058058224130853973 };
  double gres[3] = { 3000000000000499999999993.97484, 14999999999995.5000068375632955, 2999999999995499999999995.14150 };
  double h1  [9] = { -.999999999999833334333333341667, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, 18.000000, 9000000000000., .199999999999900000000000008333e-5, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 1999999.99999900000455838101380, -1000000.00000132783114928373778, 1999999.99999900000455838101380, .199999999999729687741378569888e-5, -.199999772080920143160365849951e-5, -1000000.00000132783114928373778, -.199999772080920143160365849951e-5, -999999.999999500000000000041667 };
  double hres[9] = { 1999999999992516508.55214566149, 14999999999998500013.6751249659, .299999999999549999999998965802e31, 14999999999998500013.6751249659, 59999999.9999708906732667685673, 14999999999977500013.6751294659, .299999999999549999999998965802e31, 14999999999977500013.6751294659, -9000000000002983491.44785069671 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000.99999999999983333, g1,h1), ad2(999999.999999499999999999294418, g2,h2), adresMaple(2999999999999499999.99999721658, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 1000000.99999949999950000004167, 9000000000000.00000100000000000, 3000000000000000000.00000200000 };
  double g2  [3] = { 540302305868.139715906438791493, 1.08060461173855862526710827790, -841470.984807896507399751229605 };
  double gres[3] = { .162090691760441914879992206682e31, 8104534588028933327.30542212712, -903506036819270373079661.33608 };
  double h1  [9] = { -1.00000099999983333316666667500, .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, 18000000., 9000000000000., 1.99999999999900000000000008333, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { -1.49449781595039611669398835430, 1080604.61174083781573234334091, -841470984807.896508147000137580, 1080604.61174083781573234334091, .108060290861369322041742597318e-5, -1.68294196961351382283976958025, -841470984807.896508147000137580, -1.68294196961351382283976958025, -540302.305868139717400936607443 };
  double hres[9] = { -3402887755511377789.17649573358, 8104534588035770893596795.14260, -.90350603681927037840462552961e30, 8104534588035770893596795.14260, 32418133242761.6498190684187249, -4517530184082676711.95696815444, -.90350603681927037840462552961e30, -4517530184082676711.95696815444, -6669732826451798197141622.33142 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000000001.00000100000, g1,h1), ad2(540302.305868139716653687699468, g2,h2), adresMaple(1620906917604419150501365.94457, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 1000099.99999949995000000004167, 90000000000000.0000010000000000, 3000000000000000000.00002000000 };
  double g2  [3] = { -839071529076.452467203842107328, -1.67814305813011299986537726557, 544021.110889369812657498753876 };
  double gres[3] = { -.251721458722935740177935740923e32, -125860729360784111374.300472850, 13803418739451737001074962.2651 };
  double h1  [9] = { -1.00009999999983331666666667500, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, 180000000., 9000000000000., 19.9999999999900000000000008333, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { -14.9449781595039611669398835430, -1678143.05810732109521302663549, 544021110889.369811910249845901, -1678143.05810732109521302663549, -.167816008937876704836220031272e-5, 1.08804222178101881727473038671, 544021110889.369811910249845901, 1.08804222178101881727473038671, 839071.529076452452258863947824 };
  double hres[9] = { -450027655657575876937.171645421, -125860729360100354909771353.527, .138034187394517369567840865182e32, -125860729360100354909771353.527, -503443428378544.794183312076168, 69017093697395436521.8706289792, .138034187394517369567840865182e32, 69017093697395436521.8706289792, 28436272537629792444550086.4769 };
  adreal<3,DO_HESS_TEST,double> ad1(30000000000000000001.0001000000, g1,h1), ad2(-839071.529076452459731353027576, g2,h2), adresMaple(-25172145872293573792779746.2635, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 999999999998.500000000000541667, 9000000.00000099999999999983333, -1.00000000000033333333333331667 };
  double g2  [3] = { -5.29287877108646413508936669476, .497753338656322994800629279695e-5, .349990387355843642313191472831e-6 };
  double gres[3] = { 8407694.22040571071631891340128, -29.5576366691243821482974385063, -.699978596648773829359269519322 };
  double h1  [9] = { -999999.999998833333333333508334, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, -18000000., 9., 1999999.99999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -6229630.89861960892202789922984, 11.8285710281927494698896506640, .349987272540394332508730458882, 11.8285710281927494698896506640, -.194662136348843453912836253844e-4, -.699980153304944274715783090204e-6, .349987272540394332508730458882, -.699980153304944274715783090204e-6, -.936752127533144786938532535075e-6 };
  double hres[9] = { 1873504255091.6141762271479674, -66315517.6096291834492829015563, -349983.220973750789682790235622, -66315517.6096291834492829015563, 167.733168019919369629385181682, 4.54984921271036540932364171980, -349983.220973750789682790235622, 4.54984921271036540932364171980, 1.87350355508225161279502276386 };
  adreal<3,DO_HESS_TEST,double> ad1(-2000000.00000116666666666649167, g1,h1), ad2(-.217806332177665967407541707984e-5, g2,h2), adresMaple(4.35612664355586042202623988148, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 0., -8.99999900000000000016666666667, -3.00000199999999999966666666667 };
  double g2  [3] = { .540308535499038337009858635342, -.108061146277392106432139509825e-5, .841467869992447196848041307680e-6 };
  double gres[3] = { 1.62092560649711501102957590603, -.810458263416864375431378758532e-5, .90348626731573314192997845496e-6 };
  double h1  [9] = { 0., .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, 18., 9., -1.99999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 6.22963089861960892202789922984, -1.08061831381156269384091698161, .841464755176997887043580293731, -1.08061831381156269384091698161, .108062595145416938543683837558e-5, -.168293511857815138378548275990e-5, .841464755176997887043580293731, -.168293511857815138378548275990e-5, -.540302305868139717400936607443e-6 };
  double hres[9] = { 18.6888926958588267660836976895, -8.10463068031207693234431858055, .90346649780596628556684481050, -8.10463068031207693234431858055, .324183795953747642563108592584e-4, -.451743000850161894538717913663e-5, .90346649780596628556684481050, -.451743000850161894538717913663e-5, -.666971642281974093552091387669e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(.540305420683589027205397621393e-6, g2,h2), adresMaple(.162091626205076708161619286418e-5, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -.999999999998500000000000541667, .999999999999983333333333334167e-5, -2.99999999999800000000000033333 };
  double g2  [3] = { .999999999993270369101380432745, -.199999999999214896235837056381e-5, -.411481544930963779434728295659e-11 };
  double gres[3] = { -.499999999996679999428955929165e-5, .179999999999299476949403947476e-10, -.299999999997069629185484452402e-5 };
  double h1  [9] = { .999999999998833333333333508334e-6, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, -.18e-4, 9., .199999999999900000000000008333e-5, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -.622963089861960892202789922984e-5, -1.99999999998529792471674104429, -.722963089861944225536123257151e-5, -1.99999999998529792471674104429, .199999999997766028211004944836e-5, .885103764162918618855002455043e-11, -.722963089861944225536123257151e-5, .885103764162918618855002455043e-11, -.999999999999500000000000041667e-6 };
  double hres[9] = { -1.99999999995762221460831575141, .209999999998564295367898626469e-4, -2.99999999994277776826039052044, .209999999998564295367898626469e-4, -.659999999996855536975200624026e-10, .149999999998633612429717380844e-4, -2.99999999994277776826039052044, .149999999998633612429717380844e-4, .306888926958306378733878445526e-10 };
  adreal<3,DO_HESS_TEST,double> ad1(-.399999999999883333333333350833e-5, g1,h1), ad2(.999999999996385184550690237206e-6, g2,h2), adresMaple(-.399999999998437407153609867444e-11, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 0., 9.00000099999999999983333333333, -2.99999800000000000033333333333 };
  double g2  [3] = { .540296076237241097792014579544, -.108059776069863780528235133153e-5, -.841474099623345816456963335580e-6 };
  double gres[3] = { -1.62088822871172329337604373863, .810448654186931813681569206733e-5, .90352580631034833178217868886e-6 };
  double h1  [9] = { 0., .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, -18., 9., 1.99999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -6.22963089861960892202789922984, -1.08059090966099617576282944817, -.841477214438795126261424349529, -1.08059090966099617576282944817, .108058327201838948416690805420e-5, .168294882065343464282452652662e-5, -.841477214438795126261424349529, .168294882065343464282452652662e-5, -.540302305868139717400936607443e-6 };
  double hres[9] = { 18.6888926958588267660836976895, 8.10443849571342569698792600733, .90354557579519666455084220381, 8.10443849571342569698792600733, -.324178971087745976812350201241e-4, -.451763035966991021249189734887e-5, .90354557579519666455084220381, -.451763035966991021249189734887e-5, .666974923004647766332302220363e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(.540299191052690407596475593493e-6, g2,h2), adresMaple(-.162089757315807122278942678048e-5, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 98.9999999999505000000000041250, 90.0000009999999999998333333333, -2.99998000000000000333333333333 };
  double g2  [3] = { -.839133825385438648348084226816, .167821156852932119971294672923e-5, .544017996073920503600286647901e-6 };
  double gres[3] = { 25.1738486161494004837881509420, -.125865422702822128374398488892e-3, -.138031947747967117640586148273e-4 };
  double h1  [9] = { -.989999999999835000000000008250e-4, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, -180., 9., 19.9999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -62.2963089861960892202789922984, 1.67828007890573749490816556281, .544014881258471193795825633952, 1.67828007890573749490816556281, -.167835645533180441086737950255e-5, -.108803537074109799728997344034e-5, .544014881258471193795825633952, -.108803537074109799728997344034e-5, .839071529076452452258863947824e-6 };
  double hres[9] = { 1702.73460482514233726426438396, -125.870116037425009854349665427, -13.8029708110730163144534439770, -125.870116037425009854349665427, .503467095095936206566116333268e-3, .690160483609669749947655360890e-4, -13.8029708110730163144534439770, .690160483609669749947655360890e-4, -.284361506981412295428375872680e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(-29.9999010000000000165000000000, g1,h1), ad2(-.839102677230945550303474087320e-6, g2,h2), adresMaple(.251729972457633206593399367500e-4, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 999999999999.500001000000041667, .999999999999983333333333334167e-5, 1.99999999999966666966666668333 };
  double g2  [3] = { .400000093675346086647812080521e-5, .200000187350625506628957521040e-5, .234999350217195961878431942012e-17 };
  double gres[3] = { 6.00000187350458841699841083693, 2.00000187350592176064400771278, .634999537567648970124459111105e-11 };
  double h1  [9] = { -999999.999999833334333333341667, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, 18.000000, .9e-11, 1999999.99999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { 4.00000000000133333333333386668, 4.00000187350825506628957654374, .434999350217262628545098635346e-11, 4.00000187350825506628957654374, .187350825506628957921039840349e-5, .269998700434458590423530630689e-11, .434999350217262628545098635346e-11, .269998700434458590423530630689e-11, -.936752127533144786938532535075e-18 };
  double hres[9] = { 12000001.8735015884217494049066, 6000003.74701284352466350037259, .186999907513518627383139737844e-4, 6000003.74701284352466350037259, 1.87350825514197738966026178803, .669999075135597942998912769124e-5, .186999907513518627383139737844e-4, .669999075135597942998912769124e-5, -.936738727557106474137392649102e-12 };
  adreal<3,DO_HESS_TEST,double> ad1(999999.999999833337333333341667, g1,h1), ad2(.200000093675279419981145387187e-11, g2,h2), adresMaple(.200000093675246087432199883652e-5, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 1.00000099999949999950000004167, .999990999999833333333333341667e-6, -.199999999999666666666666668333e-5 };
  double g2  [3] = { -.345969769413319361593239725924e-11, -.91939538826572056519812811844e-12, .284147098480856317331916925497e-17 };
  double gres[3] = { -.491940030764942327140040636691e-17, -.919397767342754265072426218561e-18, .576086921453073822950788923660e-23 };
  double h1  [9] = { -.100000099999983333316666667500e-5, .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, -.18e-4, .9e-11, -1.99999999999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { -.400000000000133333333333386668e-5, -.291939538826772056519812945178e-5, .484147098480922983998583618831e-11, -.291939538826772056519812945178e-5, .108060461173227943480186788156e-5, .368294196961779301330500597659e-11, .484147098480922983998583618831e-11, .368294196961779301330500597659e-11, -.540302305868139717400936607443e-18 };
  double hres[9] = { -.109194063076455227652776954838e-10, -.383879953467876419830104512102e-11, .175217404290614596756477502517e-16, -.383879953467876419830104512102e-11, .108060385358551639664588622736e-11, .552173927050875074999490150039e-17, .175217404290614596756477502517e-16, .552173927050875074999490150039e-17, -.148255821736486115141600577134e-22 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000099999683333316666667500e-5, g1,h1), ad2(-.145969769413252694926573032590e-17, g2,h2), adresMaple(-.145969915382559870551797698610e-23, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { .100000099999949999950000004167e-5, .100000000000883333333333334167e-5, .200000299999966666666666668333e-11 };
  double g2  [3] = { .100000399999950000133333337500e-11, .200000199999900000200000008333e-11, .199999900000066666683333360001e-17 };
  double gres[3] = { .200000800000733334399999930001e-23, .300000600001500002466666123335e-23, .400000800000999999683333810556e-29 };
  double h1  [9] = { -.100000099999983333316666667500e-11, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, .18e-10, .9e-11, .199999999999900000000000008333e-5, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { .400000000000133333333333386668e-11, .200000399999900000400000008333e-5, .399999900000133333350000053335e-11, .200000399999900000400000008333e-5, .199999999999900000400000008334e-5, .199999800000200000033333466666e-11, .399999900000133333350000053335e-11, .199999800000200000033333466666e-11, -.999999999999500000000000041667e-18 };
  double hres[9] = { .200001400000900000633333200002e-17, .600001600001600004933333156668e-17, .100000190000189999975000102945e-22, .600001600001600004933333156668e-17, .600000600005600007799997480007e-17, .800001800004533331683335972223e-23, .100000190000189999975000102945e-22, .800001800004533331683335972223e-23, .200001100000566666033333960000e-23 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000100000283333316666667500e-11, g1,h1), ad2(.100000199999950000066666670833e-17, g2,h2), adresMaple(.100000300000433333899999896667e-29, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 1.00000099999949999950000004167, .100000899999983333333333334167e-5, .200000000000266666666666668333e-5 };
  double g2  [3] = { .454030230586947305073427047412e-11, .308060461173827943480187454822e-11, .115852901519277016001416461171e-17 };
  double gres[3] = { .708061169235448520976813652699e-17, .308061023267678814143695333963e-17, .623913478546945475908513992269e-23 };
  double h1  [9] = { -.100000099999983333316666667500e-5, .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, .18e-4, .9e-11, 1.99999999999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { .400000000000133333333333386668e-5, .508060461174027943480187588156e-5, .315852901519343682668083154505e-11, .508060461174027943480187588156e-5, .108060461174027943480187854822e-5, .31705803038620698669499669007e-12, .315852901519343682668083154505e-11, .31705803038620698669499669007e-12, -.540302305868139717400936607443e-18 };
  double hres[9] = { .130806176923491438960556380052e-10, .816122446534611154687500397051e-11, .184782715709387333129452800411e-16, .816122446534611154687500397051e-11, .108061185365835268801673899346e-11, .647826872949221419363691189590e-17, .184782715709387333129452800411e-16, .647826872949221419363691189590e-17, .917441782634204902018704075698e-23 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000100000283333316666667500e-5, g1,h1), ad2(.254030230586880638406760354078e-17, g2,h2), adresMaple(.254030484617830977565056553000e-23, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 100.000000999949999999500004167, .100008999999983333333333334167e-5, .199999999999996666666666668333e-4 };
  double g2  [3] = { .391609284709368808810744747190e-10, .183218569418670950954822854376e-10, .254402111089003648007141459519e-17 };
  double gres[3] = { .583218575250813055068861524714e-14, .183218573167146369732756601856e-14, .637620683051656576490231606179e-21 };
  double h1  [9] = { -.100000000999983333333166667500e-3, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, .180e-3, .9e-11, 19.9999999999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { .400000000000133333333333386668e-4, .383218569418870950954822987710e-4, .454402111089070314673808152853e-11, .383218569418870950954822987710e-4, -.167814305811290490451767456232e-5, .308804222178073962680949665703e-11, .454402111089070314673808152853e-11, .308804222178073962680949665703e-11, .839071529076452452258863947824e-18 };
  double hres[9] = { .118321858125052675990094828630e-7, .566437150334410919349393808443e-8, .187524136810318680933437329053e-14, .566437150334410919349393808443e-8, -.167814270838995138702781089378e-9, .675241366647915674127294405781e-15, .187524136810318680933437329053e-14, .675241366647915674127294405781e-15, .223989855124181766564027980834e-21 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000001000013333333166667500e-3, g1,h1), ad2(.191609284709302142144078053856e-16, g2,h2), adresMaple(.191609286625420537141408035038e-20, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 1000000000000.49999999999954167, 9000000.00000099999999999983333, 4.99999999999966666666666668333 };
  double g2  [3] = { 7.16638302615275370896643176492, .872454189669580909576042293725e-5, .349996616986742261922113500731e-6 };
  double gres[3] = { 32717099.6814619618534617549874, 71.3622757783811016337714518325, 1.40000672578514492493166013619 };
  double h1  [9] = { -1000000.00000083333333333317500, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, 18000000., 9., 1999999.99999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 6229630.89861960892202789922984, 15.5755795383253286176437808044, .349999731802191571726574514680, 15.5755795383253286176437808044, .232132221450169245390377555246e-4, .699993855380227533754826856920e-6, .349999731802191571726574514680, .699993855380227533754826856920e-6, -.936752127533144786938532535075e-6 };
  double hres[9] = { 39251289646792.2492805759423292, 135524307.285400466818200037069, 1750039.47924625965680675202596, 135524307.285400466818200037069, 322.822859103802141778564212807, 5.95002506122019887982866210586, 1750039.47924625965680675202596, 5.95002506122019887982866210586, -3.74700501015908677218410158818 };
  adreal<3,DO_HESS_TEST,double> ad1(4000000.00000083333333333317500, g1,h1), ad2(.405156757684294924795248215000e-5, g2,h2), adresMaple(16.2062703073751732981239637495, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 1.99999999999900000000000008333, -8.99999900000000000016666666667, 2.99999800000000000033333333333 };
  double g2  [3] = { .540296076237241097792014579544, .108059776069863780528235133153e-5, .841474099623345816456963335580e-6 };
  double gres[3] = { -1.62088606752118871423343084478, -.810448330007541463469956529359e-5, -.90352412336214908537103714147e-6 };
  double h1  [9] = { -.199999999999966666666666668333e-5, .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, -18., 9., -1.99999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -6.22963089861960892202789922984, 1.08059090966099617576282944817, .841477214438795126261424349529, 1.08059090966099617576282944817, .108058327201838948416690805420e-5, .168294882065343464282452652662e-5, .841477214438795126261424349529, .168294882065343464282452652662e-5, -.540302305868139717400936607443e-6 };
  double hres[9] = { 20.8500645415438327295758759919, -8.10443201214555040001814575370, -.90354220989256854139092327147, -8.10443201214555040001814575370, -.324178906252170108509854235921e-4, -.451762531082406965977245309266e-5, -.90354220989256854139092327147, -.451762531082406965977245309266e-5, .666974814944186592722368817038e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(-2.99999800000000000033333333333, g1,h1), ad2(.540299191052690407596475593493e-6, g2,h2), adresMaple(-.162089649255968911758871131788e-5, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 1.00000000000049999999999954167, .999999999999983333333333334167e-5, 3.00000000000199999999999966667 };
  double g2  [3] = { 1.00000000000572963089861965059, .200000000000585103764162960285e-5, .211481544930997112768061627325e-11 };
  double gres[3] = { .500000000002686667237712724726e-5, .180000000000510523050596210045e-10, .300000000001830370814517608155e-5 };
  double h1  [9] = { -.100000000000083333333333317500e-5, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, .18e-4, 9., .199999999999900000000000008333e-5, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { .622963089861960892202789922984e-5, 2.00000000001270207528325912237, .522963089861977558869456588817e-5, 2.00000000001270207528325912237, .200000000002033971788995071830e-5, .485103764162985285521669118377e-11, .522963089861977558869456588817e-5, .485103764162985285521669118377e-11, -.999999999999500000000000041667e-6 };
  double hres[9] = { 2.00000000003637778539172429304, .210000000001185704632101825092e-4, 3.00000000004422223173966879625, .210000000001185704632101825092e-4, .660000000002464463024799868767e-10, .150000000000856387570283112719e-4, 3.00000000004422223173966879625, .150000000000856387570283112719e-4, .106888926958743489921128886931e-10 };
  adreal<3,DO_HESS_TEST,double> ad1(.400000000000083333333333317500e-5, g1,h1), ad2(.100000000000261481544930984613e-5, g2,h2), adresMaple(.400000000001129259513057473853e-11, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 1.99999999999900000000000008333, 9.00000099999999999983333333333, 3.00000199999999999966666666667 };
  double g2  [3] = { .540308535499038337009858635342, .108061146277392106432139509825e-5, -.841467869992447196848041307680e-6 };
  double gres[3] = { 1.62092776772502737556389607069, .810458587600241066879366501111e-5, -.90348795025147312654388286105e-6 };
  double h1  [9] = { -.199999999999966666666666668333e-5, .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, 18., 9., 1.99999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 6.22963089861960892202789922984, 1.08061831381156269384091698161, -.841464755176997887043580293731, 1.08061831381156269384091698161, .108062595145416938543683837558e-5, -.168293511857815138378548275990e-5, -.841464755176997887043580293731, -.168293511857815138378548275990e-5, -.540302305868139717400936607443e-6 };
  double hres[9] = { 20.8501392971146161233520676693, 8.10463716399954246640533750248, -.90346986367121662333505647203, 8.10463716399954246640533750248, .324183860790725182592532711254e-4, -.451743505730759608574287274081e-5, -.90346986367121662333505647203, -.451743505730759608574287274081e-5, -.666971750342435267162024790994e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(3.00000199999999999966666666667, g1,h1), ad2(.540305420683589027205397621393e-6, g2,h2), adresMaple(.162091734266160844861414546808e-5, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 100.999999999949500000000004208, 90.0000009999999999998333333333, 3.00001999999999999666666666667 };
  double g2  [3] = { -.839009232767466256169643668832, -.167807454777648860932250906207e-5, .544024225704819123209208675801e-6 };
  double gres[3] = { -25.1704464660349702605810975172, -.125856041040840706477879582115e-3, .138036437940178733748169188311e-4 };
  double h1  [9] = { -.100999999999983166666666667508e-3, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, 180., 9., 19.9999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 62.2963089861960892202789922984, -1.67800603740007231412729022849, .544027340520268433013669689750, -1.67800603740007231412729022849, -.167792966097400539816807628875e-5, .108804907281638125632901720706e-5, .544027340520268433013669689750, .108804907281638125632901720706e-5, .839071529076452452258863947824e-6 };
  double hres[9] = { 1699.41569649423158062944107223, -125.851352713262848887616961175, 13.8038688495215691417882148070, -125.851352713262848887616961175, -.503418749821985649280377531478e-3, .690181423017876833795447299583e-4, 13.8038688495215691417882148070, .690181423017876833795447299583e-4, .284363960556351913600935497909e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(30.0001009999999999831666666667, g1,h1), ad2(-.839040380921959354214253808328e-6, g2,h2), adresMaple(-.251712961707372537301985434773e-4, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 1000000000009.49999999999504167, 900000000.000000999999999999833, 3001.99999999999966666666666668 };
  double g2  [3] = { 96.2686560631508253788897532395, .215757860758297588525611453364e-4, .349993515138509501299385911963e-4 };
  double gres[3] = { 288997208779.925708489246019539, 150223.674980974800283101170698, 105033.338998814139014625354199 };
  double h1  [9] = { -1000000.00000983333333333167500, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, 180000000., 900., 1999999.99999900000000000008333, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { 2593443.30983634668503649973204, 24.4165296009966219663516399713, 34.9993528105726050481119337146, 24.4165296009966219663516399713, .555715790021874991452260024676e-5, .699987288416938420921616352611e-5, 34.9993528105726050481119337146, .699987288416938420921616352611e-5, -.936752127533144786938532535075e-4 };
  double hres[9] = { 7975460684946937.68727565166659, 159937371575.503071427307211970, 105068346324.492285748771900332, 159937371575.503071427307211970, 72608.3939885320095915974260141, 52506.1851331090480105530298453, 105068346324.492285748771900332, 52506.1851331090480105530298453, -281119.103336590992594895624196 };
  adreal<3,DO_HESS_TEST,double> ad1(3001000000.00000983333333333168, g1,h1), ad2(.949719344082326520363715033735e-4, g2,h2), adresMaple(285010.775159107122651839229088, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 10.9999999999945000000000004583, -899.999999000000000000166666667, 2999.99999800000000000033333333 };
  double g2  [3] = { 54.0302279933706619037469757078, .108060432766192691811556183584e-4, .841470997775113055834235746812e-4 };
  double gres[3] = { -162090.682791446955593544382820, -.810453360180441873503196797816e-1, -.90350610644699327312206301198e-1 };
  double h1  [9] = { -.109999999999981666666666667583e-4, .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, -180., 900., -1.99999999999900000000000008333, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { -2.59344330983634668503649973204, 10.8060404358757440142925045679, 84.1471010742329605015969171995, 10.8060404358757440142925045679, .108060092808263428234153256935e-5, .168294225369014552999131602231e-4, 84.1471010742329605015969171995, .168294225369014552999131602231e-4, -.540302305868139717400936607443e-4 };
  double hres[9] = { 8968.99491683412954376675582815, -81045.3261558674496354569324299, -90350.617607471600991833893420, -81045.3261558674496354569324299, -.324181219208805076389084356819e-1, -.451753209718649871114780573270e-1, -90350.617607471600991833893420, -.451753209718649871114780573270e-1, .666973289602649271736145295901 };
  adreal<3,DO_HESS_TEST,double> ad1(-2999.99998900000000000183333333, g1,h1), ad2(.540302292900923168219203182261e-4, g2,h2), adresMaple(-.162090687275944428274844525057, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 9.99999999999599999999999991667, .900999999999999833333333333342e-3, 3000.00000000000199999999999967 };
  double g2  [3] = { 99.9999999999525934433098405134, .199999999999928407435251676964e-4, -.987032783450651599908150843007e-10 };
  double gres[3] = { .301999999999856352564912502712, .150299999999934538984221839807e-6, .299999999999556993297146120824 };
  double h1  [9] = { -.999999999999933333333333325000e-5, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, .180e-3, 900., .199999999999900000000000008333e-5, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { .259344330983634668503649973204e-5, 19.9999999999956814870503345595, -.974065566901469866482968344347e-4, 19.9999999999956814870503345595, .200000000000268365364515254367e-5, -.171592564748298035528761721984e-10, -.974065566901469866482968344347e-4, -.171592564748298035528761721984e-10, -.999999999999500000000000041667e-4 };
  double hres[9] = { 2000.00000000505813322880512834, .150599999999944007672600579992, 299999.999999563999561508728593, .150599999999944007672600579992, .600599999999864022272021473674e-7, .149999999999794148264286791785, 299999.999999563999561508728593, .149999999999794148264286791785, -.893019670070240918831227255371e-6 };
  adreal<3,DO_HESS_TEST,double> ad1(.300999999999999933333333333325e-2, g1,h1), ad2(.999999999999512967216549223400e-4, g2,h2), adresMaple(.300999999999853336465514649601e-6, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 10.9999999999945000000000004583, 900.000000999999999999833333333, 3000.00000199999999999966666667 };
  double g2  [3] = { 54.0302331802572815764403457808, .108060489581063195148818459394e-4, -.841470971840679957470768896448e-4 };
  double gres[3] = { 162090.700729436960430646806222, .810453557423977929597621659481e-1, -.90350596719154712523970099447e-1 };
  double h1  [9] = { -.109999999999981666666666667583e-4, .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, 180., 900., 1.99999999999900000000000008333, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { 2.59344330983634668503649973204, 10.8060517988498446817449597299, -84.1470958873463408289035471265, 10.8060517988498446817449597299, .108060829538992458726221386043e-5, -.168294168554144049661869326421e-4, -84.1470958873463408289035471265, -.168294168554144049661869326421e-4, -.540302305868139717400936607443e-4 };
  double hres[9] = { 8968.99508800138799287054411925, 81045.3656045746608542266402711, -90350.589756382371414816451503, 81045.3656045746608542266402711, .324181547832963508525582512176e-1, -.451752827100619732112166927667e-1, -90350.589756382371414816451503, -.451752827100619732112166927667e-1, -.666973275687710351126759595504 };
  adreal<3,DO_HESS_TEST,double> ad1(3000.00001099999999999816666667, g1,h1), ad2(.540302318835356266582670032625e-4, g2,h2), adresMaple(.162090696244939430693593847603, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 109.999999999945000000000004583, 9000.00000099999999999983333333, 3000.00001999999999999666666667 };
  double g2  [3] = { -83.9071269732121468624195444174, -.167814021740937973765461410516e-4, .544021123856586362586481087033e-4 };
  double gres[3] = { -2517213.82765593376636692586222, -1.25860632661653356478418572185, 1.38034195605456256324014273827 };
  double h1  [9] = { -.109999999999981666666666667583e-3, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, 1800., 900., 19.9999999999900000000000008333, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { 25.9344330983634668503649973204, -16.7813737666585457079150031466, 54.4021136823802911768214512216, -16.7813737666585457079150031466, -.167810622161645337991432144030e-5, .108804250585309214349580670275e-4, 54.4021136823802911768214512216, .108804250585309214349580670275e-4, .839071529076452452258863947824e-4 };
  double hres[9] = { 759573.427869603433590084006962, -1258605.35961838531339433800262, 1380342.03816395182392597933673, -1258605.35961838531339433800262, -.503441277893108095780696634881, .690171131673808976149230336461, 1380342.03816395182392597933673, .690171131673808976149230336461, 2.84362727278136620971307251929 };
  adreal<3,DO_HESS_TEST,double> ad1(30000.0001099999999999816666667, g1,h1), ad2(-.839071399404286960441529695999e-4, g2,h2), adresMaple(-2.51721420744264627477020735529, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 540302846170.445585540654008380, 9000000000000000000.84147098481, 3000000000001682941.96961579301 };
  double g2  [3] = { 936750633035.328836542415841087, 4152694.72030135258206088432226, 349993502170.545703209677288723 };
  double gres[3] = { .281025189910728088833011732616e37, .208888465834656834282454404134e32, .104998331676607247358742249127e37 };
  double h1  [9] = { -841471826278.881314549008974132, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18000000000000., 9000000000000., 1080604.61173627943480187321489, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { -1494497.81595039611669398835430, 6431885.18553641559024470357437, 349993502169.798454301702090664, 6431885.18553641559024470357437, -1703120.71271012938095213289330, 699989.283533051139298313157381, 349993502169.798454301702090664, 699989.283533051139298313157381, -936752127533.144786938532535075 };
  double hres[9] = { -.448349322384427430301852980706e31, .277264112539348622638603759136e32, .104998331676177808363719118601e37, .277264112539348622638603759136e32, -.510927052810201073034380084921e31, .524993025898123723751513072852e31, .104998331676177808363719118601e37, .524993025898123723751513072852e31, -.281025428263920958688686520575e37 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000841471826278.88131, g1,h1), ad2(936751380284.236811740474188081, g2,h2), adresMaple(.281025414085349868511615960384e37, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 540302.846170445585540654008380, -8999999999999.15852901519210349, 2999999999999999998.31705803038 };
  double g2  [3] = { 540302305869.634215216887003560, 1080602.33254581419973886503107, 841470984807.149257744527123572 };
  double gres[3] = { -.162090691760815606960894478457e31, -8104527750456061350865139.32778, -.90350603681407880108979702037e30 };
  double h1  [9] = { -841471.826278881314549008974132, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -18000000., 9000000000000., -1.08060461173627943480187321489, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { 1.49449781595039611669398835430, 1080600.05335534896467585684725, 841470984806.402008836551925513, 1080600.05335534896467585684725, 2.78372719795066388204357998526, 1682944.24880625824836801282708, 841470984806.402008836551925513, 1682944.24880625824836801282708, -540302305868.139717400936607443 };
  double hres[9] = { -4354288868604477793.01039210376, -8104520912890515108668185.73500, -.90350603680914065905773847373e30, -8104520912890515108668185.73500, -37527465085312451615.9636952033, -4517543859223568547037730.78401, -.90350603680914065905773847373e30, -4517543859223568547037730.78401, .666973282644686004757891476324e31 };
  adreal<3,DO_HESS_TEST,double> ad1(-2999999999999158528.17372111869, g1,h1), ad2(540302305868.886966308911805501, g2,h2), adresMaple(-.162090691760620624975867323346e31, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 540302.305868139717941238913311, 9000000.84147098480789650665250, 3000000000000000000.00000168294 };
  double g2  [3] = { 999999999999.499998505502225717, 2000000.00000127919046523514634, -1000000.74724874130853139168866 };
  double gres[3] = { 3000001381771790670861843.80570, 15000002524412291989.0156528220, .299999999999549999467503724650e31 };
  double h1  [9] = { -841470.984807896507493973306438, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, 18.000000, 9000000000000., .108060461173627943480187321489e-5, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 2000000.00000355838093047020935, -1000001.49449764928372945003566, 2000000.00000355838093047020935, 1.99999829687641378561555284162, .27919046523539634151715256878, -1000001.49449764928372945003566, .27919046523539634151715256878, -999999999999.500000000000041667 };
  double hres[9] = { 239133626923779865.883439643694, 15000004145326047160.4441411406, .299999999999549998965124154085e31, 15000004145326047160.4441411406, 59999999939467.7424922209151099, 14999999999991175128734395.5876, .299999999999549998965124154085e31, 14999999999991175128734395.5876, -9000005324960249716694510.67287 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000841470.98480789650749397, g1,h1), ad2(999999999999.499999252751133692, g2,h2), adresMaple(3000000841469484805234024.77385, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 540302.846170445585540654008380, 9000000000000.84147098480789651, 3000000000000000001.68294196962 };
  double g2  [3] = { 540302305866.645219584986211326, 1080606.89092674466986488139871, -841470984808.643755560477519688 };
  double gres[3] = { .162090691760068223479667153745e31, 8104541425588130174998706.76439, -.90350603682446193441959852234e30 };
  double h1  [9] = { -841471.826278881314549008974132, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 18000000., 9000000000000., 1.08060461173627943480187321489, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { -1.49449781595039611669398835430, 1080609.17011720990492788958253, -841470984809.391004468452717747, 1080609.17011720990492788958253, -.62251797447810501243983355548, -1682939.69042532777824199645944, -841470984809.391004468452717747, -1682939.69042532777824199645944, -540302305868.139717400936607443 };
  double hres[9] = { -4354288868608965296.51116373811, 8104548263153676423494313.60921, -.90350603682940007645165913403e30, 8104548263153676423494313.60921, 27308811618861448220.4741910123, -4517516508969135126673485.10122, -.90350603682940007645165913403e30, -4517516508969135126673485.10122, -.666973282645673633665673274101e31 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000841471.82627888131, g1,h1), ad2(540302305867.392468492961409385, g2,h2), adresMaple(.162090691760263205464694515362e31, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 540356.336098726531372676701104, 90000000000000.8414709848078965, 3000000000000000016.82941969616 };
  double g2  [3] = { -839071529091.397430418367908991, -1678120.26624825255388764605746, 544021110888.622564496772463793 };
  double gres[3] = { -.251721458727430824351195612121e32, -125860045605002939622172735.112, .138034187394073599205239729392e32 };
  double h1  [9] = { -841555.131906377296303167571862, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 180000000., 9000000000000., 10.8060461173627943480187321489, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { -14.9449781595039611669398835430, -1678097.47434360020325756421926, 544021110887.875315588797265734, -1678097.47434360020325756421926, -18.7093689202967493769347955994, 1088044.50096920486187250350752, 544021110887.875315588797265734, 1088044.50096920486187250350752, 839071529076.452452258863947824 };
  double hres[9] = { -448550015068163470975.847318586, -125859361848537253236467875.456, .138034187393628189422326549227e32, -125859361848537253236467875.456, -1014375590768712999593.22676286, 69017230448553467926345824.0604, .138034187393628189422326549227e32, 69017230448553467926345824.0604, .284362725376260150965968945428e32 };
  adreal<3,DO_HESS_TEST,double> ad1(30000000000000841555.1319063773, g1,h1), ad2(-839071529083.924941338615928407, g2,h2), adresMaple(-.251721458725184543651098149604e32, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 540302305867.599415095068467726, 9000000.84147098480789650665250, 1682938.96961579301330500464326 };
  double g2  [3] = { -6229629.96186748138888311229131, 6851035.76812526445559378399003, -2.76482194713851150889629712814 };
  double gres[3] = { -6924975633591056209.33018919701, 5764899228312186611.99261785632, -7568551878517.09669991172806811 };
  double h1  [9] = { -841470984807.055035667694425123, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, -18000000., 9., 1080604.61173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -6229630.89861960892202789922984, 13702073.4097547839774771418571, -5.87963739644831596991024674306, 13702073.4097547839774771418571, -21339716.0164463798988711165774, 6.15105063728693361764805289354, -5.87963739644831596991024674306, 6.15105063728693361764805289354, -.936752127533144786938532535075 };
  double hres[9] = { -9352775789177761411.05677475420, 15231430456207590089.9719828972, -20291336260823.6960045536846364, 15231430456207590089.9719828972, -17956508447397389219.8183861520, 16705734343883.1994547744993984, -20291336260823.6960045536846364, 16705734343883.1994547744993984, -788261473124.305287250571048823 };
  adreal<3,DO_HESS_TEST,double> ad1(841467984807.055035667694425123, g1,h1), ad2(-3114814.51255767692786916267639, g2,h2), adresMaple(-2621016690929677825.74786591094, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 0., -8.15852901519210349334749767837, -4.68294196961579301330500464326 };
  double g2  [3] = { 6.76993320448774863942883583728, -7.93164225336579895668523108199, -2.27334446450190795436144729329 };
  double gres[3] = { 20.3097996134632459182865075118, -53.6153110196604818270700260464, -23.9367377331163816957682869487 };
  double h1  [9] = { 0., .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., -1.08060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, -14.7826798949953184785685889491, -5.38815991381171241537539690821, -14.7826798949953184785685889491, 22.4203225016869143999625636694, 5.16809567201372650857835322384, -5.38815991381171241537539690821, 5.16809567201372650857835322384, -.540302305868139717400936607443 };
  double hres[9] = { 18.6888926958588267660836976895, -97.6058676133694869210177923855, -51.8174211789107957035076922310, -97.6058676133694869210177923855, 262.474154022680835174610391530, 104.090913984072529440334316362, -51.8174211789107957035076922310, 104.090913984072529440334316362, 25.8223245648918563014965569518 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(3.65511775517794417841488622236, g2,h2), adresMaple(10.9653532655338325352446586671, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -.540302305867599415095068467726, .841479984807896506652502321630, -2.99999831705803038420698669500 };
  double g2  [3] = { .999993770368601380391078013768, -1.99999314896135837048047819997, -3.11481644930980446084728294825 };
  double gres[3] = { -1.38176936565965780990994706503, 2.52441956839594303427461870100, -.37895196307214099875614516504 };
  double h1  [9] = { .841470984807055035667694425123, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, -.18e-4, 9., .108060461173627943480187321489e-5, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -.622963089861960892202789922984e-5, -1.99998629792371674096095631661, -6.22963189861960892186123256317, -1.99998629792371674096095631661, 1.99997866028111004936503492264, 6.85103964162951952155002453377, -6.22963189861960892186123256317, 6.85103964162951952155002453377, -.999999999999500000000000041667 };
  double hres[9] = { -.239124274114633255622060082070, 4.14531271540026482472821137621, 3.92503713995592537126603194215, 4.14531271540026482472821137621, -5.04885642194755626827185110390, 6.61392072191043150892210143896, 3.92503713995592537126603194215, 6.61392072191043150892210143896, 21.2132989241161049687091482842 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841473984807055035667694425123, g1,h1), ad2(.999996885184050690195539027717, g2,h2), adresMaple(-.841471363770466229376587321276, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 0., 9.84147098480789650665250232163, -1.31705803038420698669499535674 };
  double g2  [3] = { -5.68932859275146920462696262240, 5.77043302989324008708148465221, -3.95628643411770096766645193655 };
  double gres[3] = { 17.0679857782544076138808878672, -42.6482954908674339070851943589, 15.2596425122526352271911481622 };
  double h1  [9] = { 0., .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, -18., 9., 1.08060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -6.22963089861960892202789922984, 12.6214706715227596089648425193, -7.07110188342750542868040155147, 12.6214706715227596089648425193, -20.2591132782143555303588172396, 8.53397961124531253518836251036, -7.07110188342750542868040155147, 8.53397961124531253518836251036, -.540302305868139717400936607443 };
  double hres[9] = { 18.6888926958588267660836976895, -95.2467896710591686296862365204, 25.9244507850815899776240017998, -95.2467896710591686296862365204, 220.697674883535911219072741087, -95.3082304344845345873498118733, 25.9244507850815899776240017998, -95.3082304344845345873498118733, 7.70946833428859107347260524101 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(-2.57451314344166474361301300748, g2,h2), adresMaple(7.72353943032499423083903902243, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 53.4899282809458320226927241369, 90.8414709848078965066525023216, 13.8294196961579301330500464326 };
  double g2  [3] = { -63.1353805152725416725378562462, 70.1885194744481001233513065666, -2.57079433842043464760920195307 };
  double gres[3] = { -5076.46550139670076737532774892, 835.67640902153478312621280839, -579.402578949134013339301420949 };
  double h1  [9] = { -83.3056274959817541585977298414, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, -180., 9., 10.8060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -62.2963089861960892202789922984, 138.698895890743295342184885238, -5.68560978773023910862315156799, 138.698895890743295342184885238, -215.075321957659254556124632441, 5.76299541985077989507386254340, -5.68560978773023910862315156799, 5.76299541985077989507386254340, .839071529076452452258863947824 };
  double hres[9] = { -7410.24185706401296182325162803, 5395.21694211887259574096864928, -1659.36771660388721626721160589, 5395.21694211887259574096864928, 7045.0323987474821468995905478, 756.446807274612853325923902563, -1659.36771660388721626721160589, 756.446807274612853325923902563, -80.2105985099164069608955910025 };
  adreal<3,DO_HESS_TEST,double> ad1(53.3056274959817541585977298414, g1,h1), ad2(-31.9872260221744970623983600970, g2,h2), adresMaple(-1705.09915496780794246645408686, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 540302305868.139717941238913311, .841479984807896506652502321630, 1682941.96961579301330500764326 };
  double g2  [3] = { 4.00000000000227008546086701147, 2000000.00000387350425506762290, .200000034999416883795961905099e-5 };
  double gres[3] = { 4446488550970.64200777851551851, 1682941969619052458.11108191268, 5048826.20336001543148068180130 };
  double h1  [9] = { -841470984807.896507493973306438, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18.000000, .9e-11, 1080604.61173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { 4.00000000000133333333333386668, 4000000.00000587350425506895624, .400000034999483550462628598433e-5, 4000000.00000587350425506895624, 5.87350425507162290721040293683, 2.00000069998900434258590556863, .400000034999483550462628598433e-5, 2.00000069998900434258590556863, -.936752127533144786938532535075e-12 };
  double hres[9] = { 6005360416563.13655425718090372, 4446488550974900716.99549693599, 13339466.1365223048458306403383, 4446488550974900716.99549693599, 4942386775744.42833073565964858, 5048826497874.33476501599177982, 13339466.1365223048458306403383, 5048826497874.33476501599177982, 9.30940326046100064830878723520 };
  adreal<3,DO_HESS_TEST,double> ad1(841470984807.896507493976306438, g1,h1), ad2(2.00000000000160341879420007813, g2,h2), adresMaple(1682941969617.14224537976764256, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380, .841470984798896506652502321630, -1.68294196961579301030500464326 };
  double g2  [3] = { -.399999945969902746519361646574e-5, -1.99999891939738826372056653146, .200000084147165147456317358584e-5 };
  double gres[3] = { -.444649225088185686704503813033e-5, -1.68294442620262439328264498036, .504882739056773110754639512797e-5 };
  double h1  [9] = { -.841471826278881314549008974132, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -.18e-4, .9e-11, -1.08060461173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { -.400000000000133333333333386668e-5, -3.99999891939938826372056786480, .400000084147231814122984051918e-5, -3.99999891939938826372056786480, 1.08060061173627942946853988155, 2.00000168294396961579301463833, .400000084147231814122984051918e-5, 2.00000168294396961579301463833, -.540302305868139717400936607443e-12 };
  double hres[9] = { -.600536629271874984576375260394e-5, -4.44649595079658383919770945335, .133394697689692979481386597174e-4, -4.44649595079658383919770945335, -2.45658715033229489053932335078, 5.04882887229047416768762631242, .133394697689692979481386597174e-4, 5.04882887229047416768762631242, -.100976541953435382819265932603e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(.841471826278881311549008974132, g1,h1), ad2(-.199999945969836079852694953240e-5, g2,h2), adresMaple(-.168294319790915554276127850892e-5, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380e-6, .841470984807896515652502321630, .168294196961879301330500464326e-5 };
  double g2  [3] = { .500000000000083333333333390835e-11, .400000000000100000000000141666e-5, .199999999999966666666666710001e-5 };
  double gres[3] = { .582826766990653462136326835495e-17, .589030025954019653414395784370e-11, .168294870138339100114878892908e-11 };
  double h1  [9] = { -.841471826278881314549008974132e-6, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .18e-10, .9e-11, .108060461173627943480187321489e-5, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-11, .600000000000300000000000275000e-5, .400000000000033333333333403335e-5, .600000000000300000000000275000e-5, 2.00000000000300000000000541666, 2.00000000000000000000000166666, .400000000000033333333333403335e-5, 2.00000000000000000000000166666, -.999999999999500000000000041667e-12 };
  double hres[9] = { .624450028798521940382982597282e-17, .130383041840028279724519867320e-10, .444650465398020013532330422232e-11, .130383041840028279724519867320e-10, .841471153102514217176649590040e-5, .336589235394115367992975024942e-5, .444650465398020013532330422232e-11, .336589235394115367992975024942e-5, .117805929458498833436896429479e-10 };
  adreal<3,DO_HESS_TEST,double> ad1(.841471826278881317549008974132e-6, g1,h1), ad2(.300000000000016666666666697501e-11, g2,h2), adresMaple(.252441547883678419795140699541e-17, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380, .841470984816896506652502321630, 1.68294196961579301630500464326 };
  double g2  [3] = { .400000054030363920147305126762e-5, 2.00000108060661173627943613520, .199999915852968185877016028084e-5 };
  double gres[3] = { .444649374403394032017462506811e-5, 1.68294624480020598492651281751, .504882779301433208893085178008e-5 };
  double h1  [9] = { -.841471826278881314549008974132, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, .18e-4, .9e-11, 1.08060461173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-5, 4.00000108060861173627943746854, .399999915853034852543682721418e-5, 4.00000108060861173627943746854, 1.08060861173627944013520654823, 1.99999831706003038420698802833, .399999915853034852543682721418e-5, 1.99999831706003038420698802833, -.540302305868139717400936607443e-12 };
  double hres[9] = { .600536655112790835869736324633e-5, 4.44649893710224394404716186822, .133394704298238897361298212967e-4, 4.44649893710224394404716186822, 4.27518745991221923542165545873, 5.04882967718226003161999247424, .133394704298238897361298212967e-4, 5.04882967718226003161999247424, .100976494400527096456119149842e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(.841471826278881317549008974132, g1,h1), ad2(.200000054030297253480638433428e-5, g2,h2), adresMaple(.168294410720749167786979958664e-5, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 54.0302311271162776082333781452, .841470984897896506652502321630, 16.8294196961579301360500464326 };
  double g2  [3] = { .399999991609418042568808864079e-4, 19.9999983218769418470951088156, .200000054402177755603648033809e-5 };
  double gres[3] = { .444648847949356919129474261762e-2, 1682.94186206544405260388055526, .504882624224559701414585421482e-3 };
  double h1  [9] = { -84.1470993222606354731467388155, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, .180e-3, .9e-11, 10.8060461173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-4, 39.9999983218969418470951221490, .400000054402244422270314727143e-5, 39.9999983218969418470951221490, -1.67810305815290485118439456227, 2.00000108804422177873962814283, .400000054402244422270314727143e-5, 2.00000108804422177873962814283, .839071529076452452258863947824e-12 };
  double hres[9] = { .600536045655149470545730707831e-2, 4446.48840802075392705094247119, .133394662172054509239472072005e-2, 4446.48840802075392705094247119, -107.548668132049664542844090182, 504.882657564550251053733170324, .133394662172054509239472072005e-2, 504.882657564550251053733170324, .100976605681427040989135328503e-3 };
  adreal<3,DO_HESS_TEST,double> ad1(84.1470993222606355031467388155, g1,h1), ad2(.199999991609351375902142170745e-4, g2,h2), adresMaple(.168294191584033839504773614315e-2, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 540302305868.680019706804747160, 9000000.84147098480789650665250, 1682944.96961579301330500464326 };
  double g2  [3] = { 6229631.83537173645517268616837, 6851039.51513377458817293174417, 3.46480895148109741313160210170 };
  double gres[3] = { 6925015600148437536.72031016951, 5764999554231837022.85024612410, 8157611163203.55666549487999909 };
  double h1  [9] = { -841470984808.737977637310218137, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18000000., 9., 1080604.61173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { 6229630.89861960892202789922984, 13702077.1567632941100562896113, 6.57962440079090187414555171662, 13702077.1567632941100562896113, 21339719.7634548900314502643316, 7.55102464597210542611866284066, 6.57962440079090187414555171662, 7.55102464597210542611866284066, -.936752127533144786938532535075 };
  double hres[9] = { 9352813614999726297.87454679528, 15231629979576057085.8420412813, 21258639540345.5244514052749285, 15231629979576057085.8420412813, 17956998409473917148.5437838094, 17883972503499.4985029638628055, 21258639540345.5244514052749285, 17883972503499.4985029638628055, -788235641312.563556702177320210 };
  adreal<3,DO_HESS_TEST,double> ad1(841473984808.737977637310218137, g1,h1), ad2(3114816.38606193199415873655345, g2,h2), adresMaple(2621036956327086290.63709896416, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 1.08060461173627943480187321489, -8.15852901519210349334749767837, 1.31705803038420698669499535674 };
  double g2  [3] = { -5.68932859275146920462696262240, -5.77043302989324008708148465221, 3.95628643411770096766645193655 };
  double gres[3] = { 4.71114513479907369158279714543, 28.6042353415774143249426161957, -8.60144202845434923815031339684 };
  double h1  [9] = { -1.68294196961579301330500464326, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -18., 9., -1.08060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -6.22963089861960892202789922984, -12.6214706715227596089648425193, 7.07110188342750542868040155147, -12.6214706715227596089648425193, -20.2591132782143555303588172396, 8.53397961124531253518836251036, 7.07110188342750542868040155147, 8.53397961124531253518836251036, -.540302305868139717400936607443 };
  double hres[9] = { .24171219176137258820923768270, 55.4131897724053687199632936555, -9.74901528797489266453387134625, 55.4131897724053687199632936555, 167.180155022699263155274922068, -74.2878374950760427580264694238, -9.74901528797489266453387134625, -74.2878374950760427580264694238, 6.80017090746290937807658537510 };
  adreal<3,DO_HESS_TEST,double> ad1(-1.31705803038420698669499535674, g1,h1), ad2(-2.57451314344166474361301300748, g2,h2), adresMaple(3.39078320989953232419179235252, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { .540302305868680019706804747160, .841479984807896506652502321630, 3.00000168294196961579301330500 };
  double g2  [3] = { 1.00000622963039861960892206957, 2.00000685103664162951952196669, 3.11481444930980446118061628159 };
  double gres[3] = { 1.38178321569103287575624610578, 2.52443634044891158921587053215, 5.62104635399261554667308653904 };
  double h1  [9] = { -.841470984808737977637310218137, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .18e-4, 9., .108060461173627943480187321489e-5, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { .622963089861960892202789922984e-5, 2.00001370207428325903904385005, 6.22962989861960892219456589651, 2.00001370207428325903904385005, 2.00002133971688995063496524402, 6.85103564162951952221669120043, 6.22962989861960892219456589651, 6.85103564162951952221669120043, -.999999999999500000000000041667 };
  double hres[9] = { .239142979741893485755342745623, 4.14535702865180721518345487074, 9.92503437644189399335537780189, 4.14535702865180721518345487074, 5.04891539574215296156283665411, 23.3860742292532493408878836439, 9.92503437644189399335537780189, 23.3860742292532493408878836439, 19.5303704068230369382505637270 };
  adreal<3,DO_HESS_TEST,double> ad1(.841473984808737977637310218137, g1,h1), ad2(1.00000311481494930980446105562, g2,h2), adresMaple(.841476605844485315185663142855, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 1.08060461173627943480187321489, 9.84147098480789650665250232163, 4.68294196961579301330500464326 };
  double g2  [3] = { 6.76993320448774863942883583728, 7.93164225336579895668523108199, 2.27334446450190795436144729329 };
  double gres[3] = { 35.6529414374756584573815015064, 73.1151557299045915815887234051, 27.7626445438203829108139852550 };
  double h1  [9] = { -1.68294196961579301330500464326, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., 1.08060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, 14.7826798949953184785685889491, 5.38815991381171241537539690821, 14.7826798949953184785685889491, 22.4203225016869143999625636694, 5.16809567201372650857835322384, 5.38815991381171241537539690821, 5.16809567201372650857835322384, -.540302305868139717400936607443 };
  double hres[9] = { 37.6528910001163480051758450466, 146.398371053694522681131445069, 63.3419681492718448518106464938, 146.398371053694522681131445069, 326.903243005425663583160448940, 116.614425904198166947672249435, 63.3419681492718448518106464938, 116.614425904198166947672249435, 24.9130271380661746061005370859 };
  adreal<3,DO_HESS_TEST,double> ad1(4.68294196961579301330500464326, g1,h1), ad2(3.65511775517794417841488622236, g2,h2), adresMaple(17.1167043396106578326839450688, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 54.5705328926821114574945973517, 90.8414709848078965066525023216, 19.8294196961579301330500464326 };
  double g2  [3] = { 61.4572374571196367680201283506, 66.8322333581422903143158507754, 3.65883656019917427441869727677 };
  double gres[3] = { 8720.86262733689622995625499526, 10438.2645886960731674030757201, 1021.73590866498526913852686556 };
  double h1  [9] = { -84.9885694655975471719027344846, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 180., 9., 10.8060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { 62.2963089861960892202789922984, 135.342609774437485533149429446, 6.77365200950897873543264689169, 135.342609774437485533149429446, 211.719035841353444747089176649, 7.93907986340825914869285319080, 6.77365200950897873543264689169, 7.93907986340825914869285319080, .839071529076452452258863947824 };
  double hres[9] = { 11294.9462466774739542816200120, 24809.1655951466690141148442509, 2524.73991867635990169389471966, 24809.1655951466690141148442509, 41943.1807684638805476273025494, 2843.30368275429902033629579432, 2524.73991867635990169389471966, 2843.30368275429902033629579432, 292.597274092204254084897047425 };
  adreal<3,DO_HESS_TEST,double> ad1(114.988569465597547171902734485, g1,h1), ad2(30.3090829640215921578806322014, g2,h2), adresMaple(3485.19809184695605241447277465, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 540302305873.542740459618004617, 900000000.841470984807896506653, 1685941.96961579301330500464326 };
  double g2  [3] = { 2593536.98504909999951519358529, 2840762.26020941377668623340556, 36.2960718720474685542834985441 };
  double gres[3] = { 2890839045083839338.12368274586, 2400108437306262860.94612368299, 32837334950660.4277845419058843 };
  double h1  [9] = { -841470984816.311216500581286697, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 180000000., 900., 1080604.61173627943480187321489, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { 2593443.30983634668503649973204, 5681505.78537627689047672804046, 37.5927935269656418968017484101, 5681505.78537627689047672804046, 3683655.51865671540693510905368, 9.84061356859272215614354437053, 37.5927935269656418968017484101, 9.84061356859272215614354437053, -93.6752127533144786938532535075 };
  double hres[9] = { 3901443179733302171.27833297297, 6335071368735384799.62652231225, 57130772177486.8777903251176031, 6335071368735384799.62652231225, 3116087002396657485.13589673912, 13133306550166.4244220597796103, 57130772177486.8777903251176031, 13133306550166.4244220597796103, -79105874598062.2054919723144484 };
  adreal<3,DO_HESS_TEST,double> ad1(844470984816.311216500581286697, g1,h1), ad2(1296815.33013092665699694371927, g2,h2), adresMaple(1095122918960553382.58181921275, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 5.94332536454953689141030268187, -899.158529015192103493347497678, 2998.31705803038420698669499536 };
  double g2  [3] = { 51.4367872769776250550571610123, 7.96530259219593123422823751399, 85.4438201357078240077684820290 };
  double gres[3] = { -153520.841225237800231367389948, -71237.9638164186858841234983636, -97428.797596593902318727587132 };
  double h1  [9] = { -9.25618083288686157317752553793, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -180., 900., -1.08060461173627943480187321489, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { -2.59344330983634668503649973204, 5.12455906702906812043774287909, 86.7405417906259973502867318950, 5.12455906702906812043774287909, -2.60304903341618090584366196172, 19.6701632213247932468405410675, 86.7405417906259973502867318950, 19.6701632213247932468405410675, -54.0302305868139717400936607443 };
  double hres[9] = { 7879.62477961547224428241620572, -61500.2369195035915337465014166, -104744.106178167410124339746263, -61500.2369195035915337465014166, -16031.1183239824527387533086429, -64313.2980295861796124370397369, -104744.106178167410124339746263, -64313.2980295861796124370397369, 674054.652443419959702621429154 };
  adreal<3,DO_HESS_TEST,double> ad1(-2990.74381916711313842682247446, g1,h1), ad2(52.7335089318957983975754108783, g2,h2), adresMaple(-157712.415901061113187486746599, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 5.40302305868193747631523421415, .842370984807896506652502321630, 3000.00000168294196961579301331 };
  double g2  [3] = { 100.000002593393309836346689203, 20.0000028407335251668631146238, 1.29662165491817335918491653269 };
  double gres[3] = { 1382.07331951255365659836575854, 252.591320447134930908922066101, 300010.918643183002142727011659 };
  double h1  [9] = { -8.41470984807980653750983111281, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .180e-3, 900., .108060461173627943480187321489e-5, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { .259344330983634668503649973204e-5, 20.0000056814770503337262284143, 2.59334330983634670170316639871, 20.0000056814770503337262284143, 2.00000368365264515246034072887, 2.84072352516686311712382796824, 2.59334330983634670170316639871, 2.84072352516686311712382796824, -99.9999999999500000000000041667 };
  double hres[9] = { 239.133665872472093346777365822, 414.682053261606522470049971720, 300028.843744753163931278536864, 414.682053261606522470049971720, 50.5482948825310165873353356184, 150025.014345717754854101255227, 300028.843744753163931278536864, 150025.014345717754854101255227, 7106.25314820956084060334056204 };
  adreal<3,DO_HESS_TEST,double> ad1(8.41770984807980653750983111281, g1,h1), ad2(100.000001296671654918173346685, g2,h2), adresMaple(841.770995722986413081631400909, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 5.94332536454953689141030268187, 900.841470984807896506652502322, 3001.68294196961579301330500464 };
  double g2  [3] = { 56.6236738966503184251301604763, 13.6467896425296574618092267838, -82.8503768258714773227319822970 };
  double gres[3] = { 170723.966733562273580824685141, 90907.4991228567947259260422890, -83244.039772412542495126709820 };
  double h1  [9] = { -9.25618083288686157317752553793, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 180., 900., 1.08060461173627943480187321489, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { 2.59344330983634668503649973204, 16.4875331676965205755997214187, -81.5536551709533039802137324310, 16.4875331676965205755997214187, 4.76425825688873977544740839150, -13.9886761709910670192595517977, -81.5536551709533039802137324310, -13.9886761709910670192595517977, -54.0302305868139717400936607443 };
  double hres[9] = { 7965.28486949064474960631022912, 100735.165368100505510985641077, -75882.145031785648532855006057, 100735.165368100505510985641077, 48882.9131217316566606934235716, -25972.9728605004565099087856394, -75882.145031785648532855006057, -25972.9728605004565099087856394, -659878.819003163850073057875931 };
  adreal<3,DO_HESS_TEST,double> ad1(3009.25618083288686157317752554, g1,h1), ad2(55.3269522417321450826119106103, g2,h2), adresMaple(166492.973000078403107531867648, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 59.4332536454953689141030268187, 9000.84147098480789650665250232, 3016.82941969615793013305004643 };
  double g2  [3] = { -57.9727198092817783755213974620, 11.6260046701395820927276673926, 55.6988327438551546829930160511 };
  double gres[3] = { -1748763.84528893115694598916705, -288662.857004185917826046975447, 1462106.87995864722122221986708 };
  double h1  [9] = { -92.5618083288686157317752553793, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 1800., 900., 10.8060461173627943480187321489, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { 25.9344330983634668503649973204, 40.0334399218082132306326137416, 56.9955543987733280255112659171, 40.0334399218082132306326137416, 35.1583933933716985019376238704, 13.7211657429542593818854478719, 56.9955543987733280255112659171, 13.7211657429542593818854478719, 83.9071529076452452258863947824 };
  double hres[9] = { 780108.845046658272695768390291, 683558.146875119674350424179094, 1542792.21951498442301099052086, 683558.146875119674350424179094, 1139601.89078005567039820179265, 885469.122048298622826617887086, 1542792.21951498442301099052086, 885469.122048298622826617887086, 2860929.55176679216780697278824 };
  adreal<3,DO_HESS_TEST,double> ad1(30092.5618083288686157317752554, g1,h1), ad2(-70.9399363584635118007038961222, g2,h2), adresMaple(-2134764.41954597959144572750066, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -839072368147.981528711316206688, 8999999999999999999.45597888911, 2999999999998911957.77822126037 };
  double g2  [3] = { 936737182554.985282977365595191, 246654089.074169196557152575912, 3499935021638.20463037900506198 };
  double gres[3] = { .281021154765658627805924916442e37, .824269286176339257646848488276e33, .104998331672523611624533358021e38 };
  double h1  [9] = { 544021654910.480702774561066599, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, 18000000000000., 9000000000000., -1678143.05815290490451772789565, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { -1494497.81595039611669398835430, 47457313.5597675497375534501124, 349993502156.347973958148525614, 47457313.5597675497375534501124, -170312239.886395894061274938266, 7000097.96247238254865386811755, 349993502156.347973958148525614, 7000097.96247238254865386811755, -9367521275331.44786938532535075 };
  double hres[9] = { -.448348992373717285206970490352e31, .150802575322064738314193841528e33, .104998331667746446727994846571e37, .150802575322064738314193841528e33, -.510932111271453785659986254117e33, .525005333514433573176632862485e32, .104998331667746446727994846571e37, .525005333514433573176632862485e32, -.281025428263791176521177431735e38 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999455978345089.51930, g1,h1), ad2(9367446550440.65034957949065133, g2,h2), adresMaple(.281023396513168549549638157577e38, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -839072.368147981528711316206688, -9000000000000.54402111088936981, 3000000000000000001.08804222178 };
  double g2  [3] = { 540302305883.084695560440568610, 10805818.1983162708417179137670, 8414709848004.24017572750341047 };
  double gres[3] = { -.162090691765408155018898882041e31, -81044662123762729066121209.4163, -.90350603677489321112602381637e31 };
  double h1  [9] = { 544021.654910480702774561066599, -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, -18000000., 9000000000000., 1.67814305815290490451772789565, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { 1.49449781595039611669398835430, 1080559.02792697473354170953850, 841470984792.951528492998360463, 1080559.02792697473354170953850, 181.118304738801239072189409186, 16829647.6152044536393508648145, 841470984792.951528492998360463, 16829647.6152044536393508648145, -5403023058681.39717400936607443 };
  double hres[9] = { -2450837372534278384.97006069025, -8104397836743168630325341.24898, -.90350603673711881809990528807e30, -8104397836743168630325341.24898, -835114056843817079000.333837791, -45176669353911344851973731.2125, -.90350603673711881809990528807e30, -45176669353911344851973731.2125, .666973282640725719503714240113e32 };
  adreal<3,DO_HESS_TEST,double> ad1(-3000000000000544021.65491048070, g1,h1), ad2(5403023058756.12206480688588026, g2,h2), adresMaple(-.162090691762713055559666016337e32, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -839071.529076452453097935476900, 8999999.45597888911063018659525, 2999999999999999999.99999891196 };
  double g2  [3] = { 999999999999.499985055021882163, 20000000.0002179190465235071341, -10000074.7248891308531391681161 };
  double gres[3] = { 2999991065262098305738159.74911, 149999983679975429670.119679384, .299999999999549995570909023454e32 };
  double h1  [9] = { 544021.110889369813948768772740, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, 18.000000, 9000000000000., -.167814305815290490451772789565e-5, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 2000000.00004458380930470134349, -1000014.94497799283729450028155, 2000000.00004458380930470134349, 19.9998296877313785615552766626, 207.919046523509634151715258378, -1000014.94497799283729450028155, 207.919046523509634151715258378, -9999999999995.00000000000041667 };
  double hres[9] = { 3762068050734428691.05952695731, 14999973195920046129.0895131041, .299999999999549991926492103007e31, 14999973195920046129.0895131041, 599999456425852.677047320516537, 150000000001142512826420914.035, .299999999999549991926492103007e31, 150000000001142512826420914.035, -90000442909119556650074736.2084 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999455978.88911063018605123, g1,h1), ad2(9999999999994.99992527510961915, g2,h2), adresMaple(29999994559773890884847335.5761, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -839072.368147981528711316206688, 8999999999999.45597888911063019, 2999999999999999998.91195777822 };
  double g2  [3] = { 540302305853.194739241432646276, 10806274.0364093178543195505308, -8414709848153.68995732254302213 };
  double gres[3] = { .162090691755475675421677248421e31, 81046029636679185906174060.3700, -.90350603686364752438336233834e31 };
  double h1  [9] = { 544021.654910480702774561066599, -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, 18000000., 9000000000000., -1.67814305815290490451772789565, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { -1.49449781595039611669398835430, 1080650.19554558413606203689128, -841470984822.841484812006282797, 1080650.19554558413606203689128, -159.506212504075650376151944888, -16829191.7771114066267492280507, -841470984822.841484812006282797, -16829191.7771114066267492280507, -5403023058681.39717400936607443 };
  double hres[9] = { -2450837372563796551.26435776869, 8104671339301022459624591.65902, -.90350603690142191740934733680e30, 8104671339301022459624591.65902, -186751289801864111501.607446932, -45173934328015692171482191.4613, -.90350603690142191740934733680e30, -45173934328015692171482191.4613, -.666973282649633918919850510305e32 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999455978.34508951930, g1,h1), ad2(5403023058606.67228321184626860, g2,h2), adresMaple(.162090691758170774880896761168e32, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -839155.436229360097504089834219, 89999999999999.4559788891106302, 2999999999999999989.11957778221 };
  double g2  [3] = { -839071529225.902233853903559493, -16779151.3910638139821690951372, 5440211108818.97324324995681268 };
  double gres[3] = { -.251721458767695693829936741980e32, -1258538917967960334364163382.35, .138034187390030917211451855374e33 };
  double h1  [9] = { 544075.513000458750386088136617, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, 180000000., 9000000000000., -16.7814305815290490451772789565, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { -14.9449781595039611669398835430, -1677687.22005985789191609113180, 544021110874.424835245243700684, -1677687.22005985789191609113180, -1719.90401679591349628688404933, 10880650.1368339197743957716189, 544021110874.424835245243700684, 10880650.1368339197743957716189, 8390715290764.52452258863947824 };
  double hres[9] = { -451506304641510369211.592509763, -125847054232104447816758880.226, .138034187385501773344420761664e32, -125847054232104447816758880.226, -56127696506740056608813.0404800, 690184612101918903000355821.243, .138034187385501773344420761664e32, 690184612101918903000355821.243, .284362725375845009845178526594e33 };
  adreal<3,DO_HESS_TEST,double> ad1(29999999999999455924.4869995412, g1,h1), ad2(-8390715291511.77343056383753659, g2,h2), adresMaple(-.251721458745348637734188456035e33, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -839071529075.613380729787495372, 8999999.45597888911063018659525, -1088045.22177873962680949532370 };
  double g2  [3] = { -62296308.0494439616871342053599, 685103745.427909401525440047939, -307.981609909267516580218436624 };
  double gres[3] = { 295245981922306887496.616871522, -372715759306673479260.499703369, 506455417943124.747646606841380 };
  double h1  [9] = { 544021110888.825792293858292038, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, -18000000., 9., -1678143.05815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -6229630.89861960892202789922984, 137020750.959086135371377583465, -61.9463154840247962681613398116, 137020750.959086135371377583465, -2133971770.26002094585317330668, 678.103894119526093145982736974, -61.9463154840247962681613398116, 678.103894119526093145982736974, -9.36752127533144786938532535075 };
  double hres[9] = { -61521344686178492580.0395078626, -649394200131938969095.153729311, 882610666514053.587333746545936, -649394200131938969095.153729311, 1160950033511873935916.19826003, -1114334299892322.21282753135790, 882610666514053.587333746545936, -1114334299892322.21282753135790, 5097166533944.46292564514712784 };
  adreal<3,DO_HESS_TEST,double> ad1(-544024110888.825792293858292038, g1,h1), ad2(-311481535.563459170769947092107, g2,h2), adresMaple(169453465443197046531.557677292, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 0., -9.54402111088936981340474766185, -1.91195777822126037319050467630 };
  double g2  [3] = { 62.8366112920642289376799289058, -695.909810280314746536354518859, -303.066835082901481034869938276 };
  double gres[3] = { 188.509833876192686813039786717, -5112.08243744933470269484363011, -1515.07041981482222571654054665 };
  double h1  [9] = { 0., -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, 18., 9., 1.67814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { 6.22963089861960892202789922984, -138.101357444326669872469030557, -61.4548380013881927136264899768, -138.101357444326669872469030557, 2144.77783511242629086408777760, 668.274344466794022055285740277, -61.4548380013881927136264899768, 668.274344466794022055285740277, -5.40302305868139717400936607443 };
  double hres[9] = { 18.6888926958588267660836976895, -1279.90683604500699267015925681, 227.272176286540580273346353331, -1279.90683604500699267015925681, 25421.8115703318723245551487944, 9079.81059205490688951624435913, 227.272176286540580273346353331, 9079.81059205490688951624435913, 797.909126736394946272583620169 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(316.884567989661843275404327566, g2,h2), adresMaple(950.653703968985529826212982699, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { .839071529075613380729787495372, -.544012110889369813404747661851, -3.00000108804222177873962680950 };
  double g2  [3] = { .999937703690513803910779762675, -19.9993148962258370480478124975, -311.481554930980446099728294825 };
  double gres[3] = { 8.93443815602397814377714592376, -16.3199411680737500007519254334, -199.450683525699522349010672312 };
  double h1  [9] = { -.544021110888825792293858292038, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, -.18e-4, 9., -.167814305815290490451772789565e-5, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -.622963089861960892202789922984e-5, -1.99986297924616740960956241617, -62.2963099861960892201123256317, -1.99986297924616740960956241617, 19.9978660282010049365034847643, 685.103784162951952185002453377, -62.2963099861960892201123256317, 685.103784162951952185002453377, -9.99999999999500000000000041667 };
  double hres[9] = { -3.76200652934956203831888949294, -26.8032495668535946905707483038, -298.245456428776368512464617831, -26.8032495668535946905707483038, 32.6387603301504756341247849264, 692.153767739047982112424664052, -298.245456428776368512464617831, 692.153767739047982112424664052, 1852.56974297445351288827016510 };
  adreal<3,DO_HESS_TEST,double> ad1(.544018110888825792293858292038, g1,h1), ad2(9.99968851845006901955389902171, g2,h2), adresMaple(5.44001165728388774749044578662, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { 0., 8.45597888911063018659525233815, -4.08804222177873962680949532370 };
  double g2  [3] = { -61.7560066803279495028780556910, 674.297718045589157840317054561, -319.896254779059411167919984708 };
  double gres[3] = { 185.268020040983848508634167073, -4611.08667349911450913323332033, 2210.95068493076418975429314461 };
  double h1  [9] = { 0., -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, -18., 9., -1.67814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -6.22963089861960892202789922984, 135.940148220854111002865284127, -63.1377799710039857269314946200, 135.940148220854111002865284127, -2123.16574287770070216805031330, 701.933183859109882321385833143, -63.1377799710039857269314946200, 701.933183859109882321385833143, -5.40302305868139717400936607443 };
  double hres[9] = { 18.6888926958588267660836976895, -673.206160062340164834360237807, 955.518049400343233089704882519, -673.206160062340164834360237807, 23282.6051598724328684633841069, -10322.0997669647274431610255045, 955.518049400343233089704882519, -10322.0997669647274431610255045, 2964.73421640410058016291606051 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(-306.078521872299048927385595418, g2,h2), adresMaple(918.235565616897146782156786253, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -83.0680813785687927736275308346, 89.4559788891106301865952523381, -13.8804222177873962680949532370 };
  double g2  [3] = { -623.802161391037344655048786932, 6867.81907221104857092853514606, -306.041333822086747967347484873 };
  double gres[3] = { 311749.601621517971916960508935, -855311.654437274256988631896882, 69015.4619465065538061972063678 };
  double h1  [9] = { 53.8580899780476115270700185232, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, -180., 9., -16.7814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -62.2963089861960892202789922984, 1371.88567138405680928118930132, -61.7522878753067194068742446365, 1371.88567138405680928118930132, -21356.4993205321640142058677335, 674.223341945164555920240833473, -61.7522878753067194068742446365, 674.223341945164555920240833473, 8.39071529076452452258863947824 };
  double hres[9] = { -59349.7717356701478612564910563, -738722.505262458517282230807648, 91671.2001596606004346240269098, -738722.505262458517282230807648, 3581827.30714128713692642216223, -207353.392690788804767254234253, 91671.2001596606004346240269098, -207353.392690788804767254234253, 11190.5166756627120872063506314 };
  adreal<3,DO_HESS_TEST,double> ad1(-83.8580899780476115270700185232, g1,h1), ad2(-3123.20616460056898553653825440, g2,h2), adresMaple(261906.103571067493033970334262, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -839071529076.452453097935476900, -.544012110889369813404747661851, -1088042.22177873962680949232370 };
  double g2  [3] = { 40.0000000000142700854608718116, 200000000.000218735042550796229, .200000003500001688379596214511e-3 };
  double gres[3] = { -189575150250936.844527621237114, -108804222177992959379.394494466, -326412668.437779423185369086571 };
  double h1  [9] = { 544021110889.369813948768772740, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, 18.000000, .9e-11, -1678143.05815290490451772789565, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { 4.00000000000133333333333386668, 40000000.0000418735042550929563, .400000003500068355046262907845e-4, 40000000.0000418735042550929563, 418.735042551196229072104437370, 200.000007000070043425859175686, .400000003500068355046262907845e-4, 200.000007000070043425859175686, -.936752127533144786938532535075e-11 };
  double hres[9] = { 39502415408216.9788831770479102, -189575150251071597784.029902446, -568725453.879901847762562782075, -189575150251071597784.029902446, -227800920618253.667241119453181, -326412670342045.762550065182460, -568725453.879901847762562782075, -326412670342045.762550065182460, -647.729211353140110458614332459 };
  adreal<3,DO_HESS_TEST,double> ad1(-544021110889.369813948765772740, g1,h1), ad2(200.000000000076034187942024782, g2,h2), adresMaple(-108804222177915.326993142945997, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -.839072368147981528711316206688, -.544021110898369813404747661851, 1.08804222177873962980949532370 };
  double g2  [3] = { -.399999994597110274651936212659e-4, -199.999989194153882637205785314, .200000008414776514745631759859e-3 };
  double gres[3] = { .189575334998615218156903118485e-3, 108.804433907701094030836548805, -.326412774037020035429226639910e-3 };
  double h1  [9] = { .544021654910480702774561066599, -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, -.18e-4, .9e-11, 1.67814305815290490451772789565, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { -.400000000000133333333333386668e-5, -39.9999989194353882637205918648, .400000008414843181412298453193e-4, -39.9999989194353882637205918648, 10.8056461173627938146853988151, 200.000016829619696157930266383, .400000008414843181412298453193e-4, 200.000016829619696157930266383, -.540302305868139717400936607443e-11 };
  double hres[9] = { -.395024528779727876177280010517e-4, 189.575519746423517950297196219, -.568725638191347272227507741115e-3, 189.575519746423517950297196219, 211.729927122586389823146024476, -326.412881540531567290118226097, -.568725638191347272227507741115e-3, -326.412881540531567290118226097, .652825348439224915998480686480e-3 };
  adreal<3,DO_HESS_TEST,double> ad1(-.544021654910480705774561066599, g1,h1), ad2(-.199999994597043607985269519325e-3, g2,h2), adresMaple(.108804328042770863361898595788e-3, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -.839072368147981528711316206688e-6, -.544021110889369804404747661851, -.108804222177573962680949532370e-5 };
  double g2  [3] = { .410000000000128333333333387085e-10, .220000000000190000000000134166e-3, .200000000000056666666666695001e-3 };
  double gres[3] = { -.198510085162464554127407242814e-15, -.233929197367210324958338367168e-9, -.108804559470993540821108056311e-9 };
  double h1  [9] = { .544021654910480702774561066599e-6, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, .18e-10, .9e-11, -.167814305815290490451772789565e-5, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { .400000000000133333333333386668e-11, .420000000000390000000000267500e-4, .400000000000123333333333388335e-4, .420000000000390000000000267500e-4, 20.0000000003900000000005341666, 200.000000000180000000000136666, .400000000000123333333333388335e-4, 200.000000000180000000000136666, -.999999999999500000000000041667e-11 };
  double hres[9] = { .432645267234358258782954570050e-16, -.405954717151554667605016452943e-9, -.189575736845843095800654670660e-9, -.405954717151554667605016452943e-9, -.250249721889951220621133677120e-3, -.217608792529387641576142039828e-3, -.189575736845843095800654670660e-9, -.217608792529387641576142039828e-3, -.663705749843805030640516288547e-9 };
  adreal<3,DO_HESS_TEST,double> ad1(-.544021654910480699774561066599e-6, g1,h1), ad2(.210000000000061666666666693751e-9, g2,h2), adresMaple(-.114244547531234494954710651697e-15, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -.839072368147981528711316206688, -.544021110880369813404747661851, -1.08804222177873962380949532370 };
  double g2  [3] = { .400000005403156392014730560677e-4, 200.000010806246117362794481352, .199999991585356818587701626809e-3 };
  double gres[3] = { -.189575344653542233109472307187e-3, -108.804445665153151561413563115, -.326412776638885704921287917369e-3 };
  double h1  [9] = { .544021654910480702774561066599, -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, .18e-4, .9e-11, -1.67814305815290490451772789565, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { .400000000000133333333333386668e-5, 40.0000010806446117362794614686, .399999991585423485254368320143e-4, 40.0000010806446117362794614686, 10.8064461173627948813520654827, 199.999983170780303842070000283, .399999991585423485254368320143e-4, 199.999983170780303842070000283, -.540302305868139717400936607443e-11 };
  double hres[9] = { .395024569432849382460297649816e-4, -189.575539056287202292795848835, -.568725642464524077857719728580e-3, -189.575539056287202292795848835, -223.487396806668606105853108847, -326.412886744253745914642053739, -.568725642464524077857719728580e-3, -326.412886744253745914642053739, -.652825317695697853061625505296e-3 };
  adreal<3,DO_HESS_TEST,double> ad1(-.544021654910480699774561066599, g1,h1), ad2(.200000005403089725348063867343e-3, g2,h2), adresMaple(-.108804333921493953968580558209e-3, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -83.9071537467167743023388470413, -.544021110799369813404747661851, -10.8804222177873962650949532370 };
  double g2  [3] = { .399999999161061804256880934409e-3, 1999.99998322056941847095228815, .200000005440277775560364827381e-3 };
  double gres[3] = { -.189575151396991676262037446635, -108804.223441121945800251041418, -.326412669668417383725438145407e-1 };
  double h1  [9] = { 54.4021116329580922298445795898, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, .180e-3, .9e-11, -16.7814305815290490451772789565, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { .400000000000133333333333386668e-4, 399.999998322256941847095362149, .400000005440344442227031520715e-4, 399.999998322256941847095362149, -16.7774305815290437118439456186, 200.000010880622217787396401428, .400000005440344442227031520715e-4, 200.000010880622217787396401428, .839071529076452452258863947824e-11 };
  double hres[9] = { .395024154875731864626398913711e-1, -189575.152543181253733243461468, -.568725456009845611051563530803e-1, -189575.152543181253733243461468, -1263.35677317020228940496389104, -32641.2672803321712986827964901, -.568725456009845611051563530803e-1, -32641.2672803321712986827964901, -.652825389640137890268593707753e-2 };
  adreal<3,DO_HESS_TEST,double> ad1(-54.4021116329580921998445795898, g1,h1), ad2(.199999999160995137590214241075e-2, g2,h2), adresMaple(-.108804222809479822545571065174, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -839071529077.291523787940400276, 8999999.45597888911063018659525, -1088039.22177873962680949532370 };
  double g2  [3] = { 62296309.9229482167534237792369, 685103782.897994502851231525481, 314.981479952693375622571486360 };
  double gres[3] = { -295245624884310128321.128117056, -372706062401881392737.137508487, -510259777626547.560049229131283 };
  double h1  [9] = { 544021110889.913834515637031664, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, 18000000., 9., -1678143.05815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { 6229630.89861960892202789922984, 137020754.706094645503956731219, 62.6463024883673821723966447852, 137020754.706094645503956731219, 2133971807.73010604717896478422, 692.103634206377811230688836446, 62.6463024883673821723966447852, 692.103634206377811230688836446, -9.36752127533144786938532535075 };
  double hres[9] = { 61521389112337427943.3094615304, -649392290154282832908.777899974, -888864151805853.942266411689197, -649392290154282832908.777899974, -1160901372998342600961.29189181, -1121931060235865.22719351551856, -888864151805853.942266411689197, -1121931060235865.22719351551856, 5095076898435.86374620940923525 };
  adreal<3,DO_HESS_TEST,double> ad1(-544018110889.913834515637031664, g1,h1), ad2(311481554.298501721432842830877, g2,h2), adresMaple(-169451606746525026692.311920233, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -1.67814305815290490451772789565, -9.54402111088936981340474766185, 4.08804222177873962680949532370 };
  double g2  [3] = { -61.7560066803279495028780556910, -674.297718045589157840317054561, 319.896254779059411167919984708 };
  double gres[3] = { 766.104709487331275908910398659, 5677.77741575846027846102425721, -2559.01131671926974583678896951 };
  double h1  [9] = { 1.08804222177873962680949532370, -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, -18., 9., 1.67814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -6.22963089861960892202789922984, -135.940148220854111002865284127, 63.1377799710039857269314946200, -135.940148220854111002865284127, -2123.16574287770070216805031330, 701.933183859109882321385833143, 63.1377799710039857269314946200, 701.933183859109882321385833143, -5.40302305868139717400936607443 };
  double hres[9] = { -100.288533017360877282503977250, 2533.51950507438707892518691463, -1561.04629908476319744567082769, 2533.51950507438707892518691463, 27060.0279065229084898056836992, -11433.8933396595234523311747034, -1561.04629908476319744567082769, -11433.8933396595234523311747034, 2970.61293361719004903586898384 };
  adreal<3,DO_HESS_TEST,double> ad1(-4.08804222177873962680949532370, g1,h1), ad2(-306.078521872299048927385595418, g2,h2), adresMaple(1251.26192059358595625053319048, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -.839071529077291523787940400276, -.544012110889369813404747661851, 2.99999891195777822126037319050 };
  double g2  [3] = { 1.00006229630848619608922032066, 20.0006851037541629519521891691, 311.481534930980446103061628159 };
  double gres[3] = { -8.93502864727487638529958201326, -16.3210254852721190656280762522, -139.450672646384019779997130255 };
  double h1  [9] = { .544021110889913834515637031664, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, .18e-4, 9., -.167814305815290490451772789565e-5, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { .622963089861960892202789922984e-5, 2.00013702075183259039043775049, 62.2963079861960892204456589651, 2.00013702075183259039043775049, 20.0021339717789950634965169023, 685.103744162951952191669120043, 62.2963079861960892204456589651, 685.103744162951952191669120043, -9.99999999999500000000000041667 };
  double hres[9] = { 3.76212957212826247573260127157, -26.8051388430429684299711053737, -292.245438561084040028074057970, -26.8051388430429684299711053737, -32.6425729765412636296429815381, -392.153735100467594220802516069, -292.245438561084040028074057970, -392.153735100467594220802516069, 1863.44795176180233032558617711 };
  adreal<3,DO_HESS_TEST,double> ad1(-.544018110889913834515637031664, g1,h1), ad2(10.0003114815399309804461018116, g2,h2), adresMaple(-5.44035056049806867840068639538, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -1.67814305815290490451772789565, 8.45597888911063018659525233815, 1.91195777822126037319050467630 };
  double g2  [3] = { 62.8366112920642289376799289058, 695.909810280314746536354518859, 303.066835082901481034869938276 };
  double gres[3] = { -411.636690290705158414225823261, 4010.11939191145212012933515328, 1185.32090722377122511637771646 };
  double h1  [9] = { 1.08804222177873962680949532370, -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, 18., 9., -1.67814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { 6.22963089861960892202789922984, 138.101357444326669872469030557, 61.4548380013881927136264899768, 138.101357444326669872469030557, 2144.77783511242629086408777760, 668.274344466794022055285740277, 61.4548380013881927136264899768, 668.274344466794022055285740277, -5.40302305868139717400936607443 };
  double hres[9] = { 145.796934579670963750097460536, -638.336013128691174901635555195, -802.727140215365888544922249719, -638.336013128691174901635555195, 21573.8442171243230767374141222, 8022.95037695247454679309414435, -802.727140215365888544922249719, 8022.95037695247454679309414435, 803.787843949484415145536543495 };
  adreal<3,DO_HESS_TEST,double> ad1(1.91195777822126037319050467630, g1,h1), ad2(316.884567989661843275404327566, g2,h2), adresMaple(605.869914566117782611930731821, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -84.7462244367216976781452587302, 89.4559788891106301865952523381, -7.8804222177873962680949532370 };
  double g2  [3] = { 622.124018332884439750531059036, 6834.25621104799047283818058814, 316.921756039874144235442438111 };
  double gres[3] = { -278777.355710980389996430944904, 107400.006498730830856166208728, -32385.9105150197610354336524587 };
  double h1  [9] = { 54.9461321998263511538795138470, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, 180., 9., -16.7814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { 62.2963089861960892202789922984, 1368.52938526775099947215384552, 62.8403300970854590336837399603, 1368.52938526775099947215384552, 21322.9364593691059161155131755, 695.984186380739348456430739947, 62.8403300970854590336837399603, 695.984186380739348456430739947, 8.39071529076452452258863947824 };
  double hres[9] = { 63686.6487744621231624725913717, -560270.725184907738328441678829, -85458.3964152927498699742163807, -560270.725184907738328441678829, 1249961.81899607272578920198722, -14910.5694860623890502234277023, -85458.3964152927498699742163807, -14910.5694860623890502234277023, -8584.19165747866504085328193336 };
  adreal<3,DO_HESS_TEST,double> ad1(-24.9461321998263511538795138470, g1,h1), ad2(3106.42473401903993649136097544, g2,h2), adresMaple(-77493.2820836493805021705506585, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -839071529084.843167549628472347, 899999999.455978889110630186595, -1085042.22177873962680949532370 };
  double g2  [3] = { 25934526.7735762201648436911737, 284074539.867111818008006851198, 479.665667663110286369477473383 };
  double gres[3] = { -122836134666573427459.742078165, -153573617343887828779.479842188, -400210043340908.286994261885708 };
  double h1  [9] = { 544021110894.810024513641359985, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, 180000000., 900., -1678143.05815290490451772789565, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { 2593443.30983634668503649973204, 56814889.2383798129387056314688, 60.9337833154927620621302459985, 56814889.2383798129387056314688, 368365383.250288584727449256432, 354.073052950944901802579960847, 60.9337833154927620621302459985, 354.073052950944901802579960847, -936.752127533144786938532535075 };
  double hres[9] = { 25619951483403989559.7854294227, -269073571957511282502.399671547, -681190341266968.998774140967492, -269073571957511282502.399671547, -198758773531407949290.703250124, -499245461440965.855152665058276, -681190341266968.998774140967492, -499245461440965.855152665058276, 506801494666244.973850440946645 };
  adreal<3,DO_HESS_TEST,double> ad1(-541021110894.810024513641359985, g1,h1), ad2(129673102.243944867396611925135, g2,h2), adresMaple(-70155885829195334735.3820232157, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -9.22978681984097697484750342606, -900.544021110889369813404747662, 3001.08804222177873962680949532 };
  double g2  [3] = { 28.0957974884505048897286634239, -176.013891343058367898862142002, 971.143150299713840904327308232 };
  double gres[3] = { -88245.5528993972309043244592958, 159304.464225057299994257500781, -1686903.79296995518186840750126 };
  double h1  [9] = { 5.98423221978306794745222428036, -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, -180., 900., 1.67814305815290490451772789565, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { -2.59344330983634668503649973204, -46.0088243859744679277911605492, 110.081531579153117515615229483, -46.0088243859744679277911605492, -357.559318397883239716534785512, 452.368549478265612709549927817, 110.081531579153117515615229483, 452.368549478265612709549927817, -540.302305868139717400936607443 };
  double hres[9] = { 9734.51937027433266696134193967, 114280.320835298491933383610656, -254859.734435539159470852668167, 114280.320835298491933383610656, 1317920.76288245786087837724844, -2393035.94276488809728666006235, -254859.734435539159470852668167, -2393035.94276488809728666006235, 7452665.62044147164620018078263 };
  adreal<3,DO_HESS_TEST,double> ad1(-3005.98423221978306794745222428, g1,h1), ad2(410.630140376322383149111620841, g2,h2), adresMaple(-1234347.72724542118193849314446, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -8.39071529076536359411771593069, -.543121110889369813404747661851, 2999.99999891195777822126037319 };
  double g2  [3] = { 100.000025934383098363466854532, 200.000284074252516686311387382, 129.671165491817334418491653269 };
  double gres[3] = { -8934.43763070353011557751846643, -1630.56494766731879178195174312, 2999295.33842543873966871775678 };
  double h1  [9] = { 5.44021110889424215515836598832, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, .180e-3, 900., -.167814305815290490451772789565e-5, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { .259344330983634668503649973204e-5, 20.0000568148605033372622766432, 25.9343330983634668670316639871, 20.0000568148605033372622766432, 20.0003683653545152460340653868, 284.074152516686311412382796824, 25.9343330983634668670316639871, 284.074152516686311412382796824, -999.999999999500000000000041667 };
  double hres[9] = { 3762.06830686525613919770540603, -2680.27373588622557977211728473, 298771.031741114025794652783734, -2680.27373588622557977211728473, -325.814977963936774598115377748, 1498385.97042438206005702793357, 298771.031741114025794652783734, 1498385.97042438206005702793357, 782376.161414753137405566759480 };
  adreal<3,DO_HESS_TEST,double> ad1(-5.43721110889424215515836598832, g1,h1), ad2(1000.00012967166549181733429349, g2,h2), adresMaple(-5437.21181394646227608572872821, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -9.22978681984097697484750342606, 899.455978889110630186595252338, 2998.91195777822126037319050468 };
  double g2  [3] = { 79.9646636851774385904586580647, 392.134813690314254859236784980, -711.798819316079172400677335028 };
  double gres[3] = { 233231.742393275302201670285101, 1776670.35925214313989397932058, -121942.43495216505910581509961 };
  double h1  [9] = { 5.98423221978306794745222428036, -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, 180., 900., -1.67814305815290490451772789565, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { 2.59344330983634668503649973204, 67.6209166207000566238286248470, -58.2126653824261838148852348426, 67.6209166207000566238286248470, 379.171410632608828412572249810, 115.780155555107010048548999165, -58.2126653824261838148852348426, 115.780155555107010048548999165, -540.302305868139717400936607443 };
  double hres[9] = { 10297.9793825695855577420048018, 270201.308206491255199814440166, 70962.786438344461797242888666, 270201.308206491255199814440166, 1961256.59237893175773405584002, 1485370.71358895919269075861353, 70962.786438344461797242888666, 1485370.71358895919269075861353, -5887646.56520839220209615671347 };
  adreal<3,DO_HESS_TEST,double> ad1(2994.01576778021693205254777572, g1,h1), ad2(669.974471359957051652761594045, g2,h2), adresMaple(2005914.13126192677168919484841, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1*ad2" << endl;
  double g1  [3] = { -92.2978681984097697484750342606, 8999.45597888911063018659525234, 2989.11957778221260373190504676 };
  double g2  [3] = { 175.437178075989423277763578422, 2672.92921935157262333872184534, 673.693276381187147656572648453 };
  double gres[3] = { 5210376.64314785634293703963149, 84146524.4502363747958222285866, 21538453.8722558804480180314834 };
  double h1  [9] = { 59.8423221978306794745222428036, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, 1800., 900., -16.7814305815290490451772789565, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { 25.9344330983634668503649973204, 551.367274451843573712921648024, 80.3365441873004481908397635055, 551.367274451843573712921648024, 3666.87221457093129160035789765, 392.878574694560274059998995861, 80.3365441873004481908397635055, 392.878574694560274059998995861, 839.071529076452452258863947824 };
  double hres[9] = { 771482.907455594440905982510076, 17839772.6266413550555695830514, 2859831.02686827457192814674673, 17839772.6266413550555695830514, 158720320.203602236389468280528, 26227309.6314988412947314671492, 2859831.02686827457192814674673, 26227309.6314988412947314671492, 29148935.4645463350797868403241 };
  adreal<3,DO_HESS_TEST,double> ad1(29940.1576778021693205254777572, g1,h1), ad2(457.650125841720890259385918196, g2,h2), adresMaple(13702116.9289671286898756804559, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1*ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 936753064285.272320083319473608, 8999999999999999999.65000649783, 2999999999999300012.99565741410 };
  double g2  [3] = { -557745688417.251329755455819225, 2279192338739318074.47339312918, 349992754922384976.919594139787 };
  double gres[3] = { 46.5933929295291306964444999411, -190400873.822810811557832392808, -29237947.9242247368705275139450 };
  double h1  [9] = { 349993852164.795123410604604433, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, 18000000000000., 9000000000000., 1873504.25506628957387706507015, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { -1494497.81595039611669398835430, 4558382803974.38108265721238129, 349992007673.477001721535792793, 4558382803974.38108265721238129, -1703122586212510942.98664048080, 2979177469577.64891241912422567, 349992007673.477001721535792793, 2979177469577.64891241912422567, -936752127533144786.938532535075 };
  double hres[9] = { .400962665050254760166024369260e-3, -1501.57721247757394483199843308, -201.344155892473242922539076158, -1501.57721247757394483199843308, 4722253968.38266795179971726498, 703300906.581822084313629560619, -201.344155892473242922539076158, 703300906.581822084313629560619, 186254022.493169050374869381393 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999650006147835.20488, g1,h1), ad2(189503219557946728.591538357925, g2,h2), adresMaple(15830865.6021662108686759769274, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 936753.064285272320083319473608, -9000000000000.34999350217129295, 3000000000000000000.69998700434 };
  double g2  [3] = { 540303800365.955667797053301431, -1198585853498.78357338194603722, 841470237558988531.454443974636 };
  double gres[3] = { .555244888678770139232423879607e-5, -.289746195501209482895280937926e-4, 14.1998319625996852607185176259 };
  double h1  [9] = { 349993.852164795123410604604433, .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, -18000000., 9000000000000., -1.87350425506628957387706507015, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { 1.49449781595039611669398835430, -3477776.31873384658156576528933, 841469490310.080556256385627642, -3477776.31873384658156576528933, 1703123666818.99618352114157224, 3962132434850.85602148882389537, 841469490310.080556256385627642, 3962132434850.85602148882389537, -540302305868139717.400936607443 };
  double hres[9] = { -.104571245468064856850666639429e-10, .55525175194730271197677879830e-11, -.141998739400098494242030257144e-4, .55525175194730271197677879830e-11, .175020362459560618950467114268e-4, .133999794787182088451264260900e-3, -.141998739400098494242030257144e-4, .133999794787182088451264260900e-3, -49.7821873215513320000285072984 };
  adreal<3,DO_HESS_TEST,double> ad1(-3000000000000349993.85216479512, g1,h1), ad2(540303053117047692.598994954437, g2,h2), adresMaple(-5.55243947390845071744505428448, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 936752.127533144787875284662608, 8999999.65000649782870704788235, 2999999999999999999.99999930001 };
  double g2  [3] = { 999999999998.005502184049645550, 2000002279189.46523506300826715, -1747248907975.03139168032751882 };
  double gres[3] = { -.206324752247368467758865449201e-11, .299999351242216240513632768289e-11, 3.00000000000898349283634184130 };
  double h1  [9] = { 349993.502171292952467645988952, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, 18.000000, 9000000000000., .187350425506628957387706507015e-5, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 2000004.55837993047012601645097, -2494497.81595022945002732169597, 2000004.55837993047012601645097, 296877.41378461555275829331296, 2279188465235.06300851715258544, -2494497.81595022945002732169597, 2279188465235.06300851715258544, -999999999999500000.000000041667 };
  double hres[9] = { .349997628666774430250357265076e-12, -.393675461256723267510471451495e-17, -.300000000000286325864461998493e-5, -.393675461256723267510471451495e-17, .510938013776071274379652702684e-17, .299998632485802274115522616034e-5, -.300000000000286325864461998493e-5, .299998632485802274115522616034e-5, .134834930979064380063853201497e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999650006.49782870704753235, g1,h1), ad2(999999999998752751.092024843609, g2,h2), adresMaple(.299999965001023957499444865503e-5, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 936753.064285272320083319473608, 8999999999999.65000649782870705, 2999999999999999999.30001299566 };
  double g2  [3] = { 540300811370.323767004819913455, 3359795076971.34244298569246700, -841471732056804481.850560668624 };
  double gres[3] = { -.555244541927181584878836356907e-5, -.178698548177432897567190473618e-4, 14.1999105174227143828307725357 };
  double h1  [9] = { 349993.852164795123410604604433, .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, 18000000., 9000000000000., 1.87350425506628957387706507015, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { -1.49449781595039611669398835430, 5638985.54220640545116951171911, -841472479305.712457048619015618, 5638985.54220640545116951171911, -1703121505609.77271096227196850, 596248495619.26999487881460885, -841472479305.712457048619015618, 596248495619.26999487881460885, -540302305868139717.400936607443 };
  double hres[9] = { .117526658571337869905053182723e-10, -.55525209875704487826544967549e-11, -.141998685396668883468377678568e-4, -.55525209875704487826544967549e-11, .175025282842257986207947155652e-4, -.105601046425746547137134125698e-3, -.141998685396668883468377678568e-4, -.105601046425746547137134125698e-3, 49.7826636186251878945490889869 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999650006.14783520488, g1,h1), ad2(540301558619231742.202878260449, g2,h2), adresMaple(5.55245483219834381248048279511, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 936845.802745898101417226388329, 89999999999999.6500064978287070, 2999999999999999993.00012995657 };
  double g2  [3] = { -839086474054.611956220030887708, 21113761594197.7251773204646254, 544020363640461838.206689314857 };
  double gres[3] = { .357538040812840418099488824992e-4, -.100692615917365238409903703909e-2, -26.7562706779260972849490182674 };
  double h1  [9] = { 350028.501521510081412864252030, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, 180000000., 9000000000000., 18.7350425506628957387706507015, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { -14.9449781595039611669398835430, 43905666.2465483552591586571466, 544019616391.553863008630967863, 43905666.2465483552591586571466, -17031227540286.9026253219722214, 3367232687013.80263499331457581, 544019616391.553863008630967863, 3367232687013.80263499331457581, 839071529076452452.258863947824 };
  double hres[9] = { -.719247661484196134314716762190e-10, .3577107370735695393382721106e-10, .267567465144725431206701938855e-4, .3577107370735695393382721106e-10, .725656425415344325863197369741e-3, -.148031849515943019928778920077e-2, .267567465144725431206701938855e-4, -.148031849515943019928778920077e-2, -70.4482473401276836748125857327 };
  adreal<3,DO_HESS_TEST,double> ad1(29999999999999649971.4984784899, g1,h1), ad2(-839079001565532204.239447417766, g2,h2), adresMaple(-35.7534867920975438363015172782, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 936752127532.208034810999390288, 8999999.65000649782870704788235, -699990.004342585904235304973562 };
  double g2  [3] = { -6229630898618.67216990036608505, 6851037641627646017.62829157753, -3114815099316.30228972099749727 };
  double gres[3] = { -.300741036754862705771681448825e-6, .247144152922835135702570250663e-6, .112364134310508100279805052994e-12 };
  double h1  [9] = { 349993502170.942958615481193829, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, -18000000., 9., 1873504.25506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -6229630.89861960892202789922984, 13702075283257.1655395116494446, -6229630.54862610675073494711219, 13702075283257.1655395116494446, -21339717889948761460.9056241649, 6851036941642.51517929745363180, -6229630.54862610675073494711219, 6851036941642.51517929745363180, -936752.127533144786938532535075 };
  double hres[9] = { -.112362918720590811137285119938e-6, -.661480012766019492642117474464e-6, -.300741070545962540147865065755e-12, -.661480012766019492642117474464e-6, .317375650159975078119445683484e-6, .247144954204392061567167825935e-12, -.300741070545962540147865065755e-12, .247144954204392061567167825935e-12, -.337927668534960859212378501571e-19 };
  adreal<3,DO_HESS_TEST,double> ad1(-349996502170.942958615481193829, g1,h1), ad2(-3114815449308867708.88641647013, g2,h2), adresMaple(.112365084823437002385061163977e-6, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 0., -9.34999350217129295211765248678, -2.30001299565741409576469502644 };
  double g2  [3] = { 6229631.43892191479016761663078, -6851038722234.13125816279266897, -3114814607838.81965311744296242 };
  double gres[3] = { -.192627734659892120877341588698e-17, -.88335638233430328508278802302e-12, .224727777126361188461205817861e-12 };
  double h1  [9] = { 0., .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, 18., 9., -1.87350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { 6.22963089861960892202789922984, -13702076.3638636507800461505361, -6229630.05714862411413139257734, -13702076.3638636507800461505361, 21339718970555.2467014401252564, 6851035958687.54990609034456210, -6229630.05714862411413139257734, 6851035958687.54990609034456210, -540302.305868139717400936607443 };
  double hres[9] = { .577883153859280864590542712360e-23, .300742526570436247781924230416e-12, -.601481969170670965753242847403e-12, .300742526570436247781924230416e-12, -.470555179219791303305056710919e-11, .38192595874924490841839702243e-12, -.601481969170670965753242847403e-12, .38192595874924490841839702243e-12, .224727317548972602505501010880e-12 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(3114815989612.11032915366701586, g2,h2), adresMaple(.963138756833462761107592173873e-12, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -.936752127532208034810999390288, -.349984502171292952117652486781, -3.00000069998700434258590423530 };
  double g2  [3] = { -5.22963089862010892202789918817, 4851037.64163051952188335778377, -3114815449310.80446101394944825 };
  double gres[3] = { .442947867301279240717770574372e-6, -.214125517428908307564571485091e-6, .243750860595508954566956453611 };
  double h1  [9] = { -.349993502170942958615481193829, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, -.18e-4, 9., .187350425506628957387706507015e-5, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -.622963089861960892202789922984e-5, 11.7020752832600390437667156509, -6229630.89862060892202789906317, 11.7020752832600390437667156509, -19339717.8899516349651606903712, 6851037641631.51952188335753377, -6229630.89862060892202789906317, 6851037641631.51952188335753377, -999999.999999500000000000041667 };
  double hres[9] = { .165493811471070744725731109801e-6, .573101465467321315705072697179e-6, -.652397874489703909857334438287, .573101465467321315705072697179e-6, .531098195500083193330888931983e-6, .338368744290617746358626621314, -.652397874489703909857334438287, .338368744290617746358626621314, -718019.103381214688981482425691 };
  adreal<3,DO_HESS_TEST,double> ad1(.349990502170942958615481193829, g1,h1), ad2(-2114815.44931030446101394957325, g2,h2), adresMaple(-.165494583598338963643191450132e-6, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 0., 8.65000649782870704788234751322, -3.69998700434258590423530497356 };
  double g2  [3] = { -6229630.35831730305388818182890, 6851036561024.90778560392306523, -3114816290780.78926891045626742 };
  double gres[3] = { -.192627834900729484902768958995e-17, -.65862833978069642498443105987e-12, .224727855089713022100354005727e-12 };
  double h1  [9] = { 0., .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, -18., 9., 1.87350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -6.22963089861960892202789922984, 13702074.2026544273074872809323, -6229631.74009059372992440588234, 13702074.2026544273074872809323, -21339716809346.0232288812556526, 6851039324571.48913767637117210, -6229631.74009059372992440588234, 6851039324571.48913767637117210, -540302.305868139717400936607443 };
  double hres[9] = { .577883554822630320702306044278e-23, -.300739546935272851174427133910e-12, -.601482177839388558740930829637e-12, -.300739546935272851174427133910e-12, -.371697499191707272108750672645e-11, .38192600710996695364192821881e-12, -.601482177839388558740930829637e-12, .38192600710996695364192821881e-12, -.224727794281058495095675061643e-12 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(-3114814909007.49859287423221398, g2,h2), adresMaple(.963139090969587307852314174378e-12, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 92.7384606257813339069147209724, 89.6500064978287070478823475132, -9.99987004342585904235304973562 };
  double g2  [3] = { -62296309.8252676182967314445573, 68510378094438.2533717384831887, -3114814905288.69357164413621017 };
  double gres[3] = { -.297733810993016734368276482552e-11, .168697872178295890459947543597e-11, .113487801686019570818219017273e-12 };
  double h1  [9] = { 34.6493567149580022596475961913, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, -180., 9., 18.7350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -62.2963089861960892202789922984, 137020754.510733448590572061860, -6229630.35459849803265808582509, 137020754.510733448590572061860, -213397180577649.407804511809063, 6851036553587.29774314373105760, -6229630.35459849803265808582509, 6851036553587.29774314373105760, 839071.529076452452258863947824 };
  double hres[9] = { -.111239286536327867692514950907e-11, -.657872449487188037133059049740e-11, -.303748498959680115053540417994e-12, -.657872449487188037133059049740e-11, -.10197736412029102250114642808e-11, .248492766989682448843451286148e-12, -.303748498959680115053540417994e-12, .248492766989682448843451286148e-12, -.224676118803910249991405788225e-15 };
  adreal<3,DO_HESS_TEST,double> ad1(-64.6493567149580022596475961913, g1,h1), ad2(-31148155332169.5736865919484081, g2,h2), adresMaple(.207554367266778868095670144702e-11, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 936752127533.144787875284662608, -.349984502171292952117652486781, -699987.004342585904235301973562 };
  double g2  [3] = { 4000000.00000133333427008599421, 2000000000002000001.87350558840, 2000000.00000101666016883822629 };
  double gres[3] = { .468376413759918439539965047347, 174996.751085704808309191137214, -.174996751085557519770577094963e-6 };
  double h1  [9] = { 349993502171.292952467645988952, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, 18.000000, .9e-11, 1873504.25506628957387706507015, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { 4.00000000000133333333333386668, 4000000000004.00000187350692174, 4.00000000000168332683550515963, 4000000000004.00000187350692174, 4000001873509.58839962291174375, 2000000000002.69998700434391923, 4.00000000000168332683550515963, 2000000000002.69998700434391923, -.936752127533144786938532535075e-6 };
  double hres[9] = { .174994877580283097729910274163, -468376.413760230690233471774607, .468376413759836474441271635056e-6, -468376.413760230690233471774607, -349993502171.292952117649463447, .174996751085704808309188096382, .468376413759836474441271635056e-6, .174996751085704808309188096382, -.819642894457291012537693122563e-19 };
  adreal<3,DO_HESS_TEST,double> ad1(-349993502171.292952467642988952, g1,h1), ad2(2000000000000.66666760341906087, g2,h2), adresMaple(-.174996751085588143901495318983, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { .936753064285272320083319473608, -.349993502180292952117652486781, .699987004342585907235304973562 };
  double g2  [3] = { -4.00000000000079303102746572696, -2000000000000.91939538826505390, 2000000.00000150813765147482985 };
  double gres[3] = { -.468376882136458731811399715998e-6, -.174996751085704805378577114136, -.174996576088763430707904942405e-6 };
  double h1  [9] = { .349993852164795123410604604433, .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, -.18e-4, .9e-11, -1.87350425506628957387706507015, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { -.400000000000133333333333386668e-5, -4000000.00000291939538826638724, 4.00000000000217480431814176319, -4000000.00000291939538826638724, -2919395.38826905389853146465179, 2000000000003.68294196961712634, 4.00000000000217480431814176319, 2000000000003.68294196961712634, -.540302305868139717400936607443e-6 };
  double hres[9] = { -.174995052575207952782121737496e-6, .468376413760230690419184376176, .468375945383307616267697026110e-6, .468376413760230690419184376176, 349993.502171292955000987899685, .174996751085704808360702083245, .468375945383307616267697026110e-6, .174996751085704808360702083245, .349993454896133109533403312966e-12 };
  adreal<3,DO_HESS_TEST,double> ad1(-.349993852164795126410604604433, g1,h1), ad2(-2000000.00000012636436079879362, g2,h2), adresMaple(.174996926082386506517949224963e-6, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { .936753064285272320083319473608e-6, -.349993502171292943117652486781, -.699987004339585904235304973562e-6 };
  double g2  [3] = { .400000100000133333283333386668e-5, 2000002.00000199999900000133333, 2000000.00000066666566666693334 };
  double gres[3] = { .468376647947920727024902844698e-6, .262495155797456353846094e-6, .174996401092217220210074536303 };
  double h1  [9] = { .349993852164795123410604604433e-6, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, .18e-10, .9e-11, .187350425506628957387706507015e-5, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { .400000000000133333333333386668e-11, 4.00000200000399999900000266667, 4.00000000000133333233333386668, 4.00000200000399999900000266667, 2000003.99999900000533333341667, 2000000000001.99999800000133333, 4.00000000000133333233333386668, 2000000000001.99999800000133333, -.999999999999500000000000041667e-6 };
  double hres[9] = { .174994965078146515742577073149e-6, -.702564786200677228222912220271e-6, -.468375477007267205314846606931, -.702564786200677228222912220271e-6, -.349993473002386521160437296786, .145830815486272277e-6, -.468375477007267205314846606931, .145830815486272277e-6, -349992.977181448020930758649513 };
  adreal<3,DO_HESS_TEST,double> ad1(-.349993852164795120410604604433e-6, g1,h1), ad2(2.00000100000066666616666693334, g2,h2), adresMaple(-.174996838583919936009555510439e-6, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { .936753064285272320083319473608, -.349993502162292952117652486781, -.699987004342585901235304973562 };
  double g2  [3] = { 4.00000000000187363563920200640, 2000000000003.08060461173761276, 1999999.99999982519568185903683 };
  double gres[3] = { .468376882136205666607408967482e-6, .174996751085704811473128136193, -.174996576088910685732736050244e-6 };
  double h1  [9] = { .349993852164795123410604604433, .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, .18e-4, .9e-11, 1.87350425506628957387706507015, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { .400000000000133333333333386668e-5, 4000000.00000508060461173894610, 4.00000000000049186234852597017, 4000000.00000508060461173894610, 5080604.61174161276813521108157, 2000000000000.31705803038554032, 4.00000000000049186234852597017, 2000000000000.31705803038554032, -.540302305868139717400936607443e-6 };
  double hres[9] = { .174995052575113403057830301344e-6, -.468376413760230690672260989671, .468375945383701742477354143829e-6, -.468376413760230690672260989671, -349993.502171292949000988025758, .174996751085704808024345294849, .468375945383701742477354143829e-6, .174996751085704808024345294849, -.349993549446219465983491622137e-12 };
  adreal<3,DO_HESS_TEST,double> ad1(-.349993852164795120410604604433, g1,h1), ad2(2000000.00000120696897253507306, g2,h2), adresMaple(-.174996926082291952275267132194e-6, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 93.6752136900666062269980404460, -.349993502081292952117652486781, -6.99987004342585903935304973562 };
  double g2  [3] = { 40.0000000000124942618042622143, 20000000000018.3218569418604284, 2000000.00000121068777755630315 };
  double gres[3] = { .468376418443702226963371188079e-5, 1.74996751085704808610281374307, -.174996749335573031988496280300e-6 };
  double h1  [9] = { 34.9993505671227973830582007958, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, .180e-3, .9e-11, 18.7350425506628957387706507015, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { .400000000000133333333333386668e-4, 40000000.0000383218569418737618, 4.00000000000187735444422323649, 40000000.0000383218569418737618, 38321856.9419004284288156507712, 2000000000003.08804222178007296, 4.00000000000187735444422323649, 2000000000003.08804222178007296, .839071529076452452258863947824e-6 };
  double hres[9] = { .174994879330239215061458205904e-5, -4.68376413760230690236398408673, .468376409076026898314048630976e-6, -4.68376413760230690236398408673, -3499935.02171292951816485808651, .174996751085704808308644277469, .468376409076026898314048630976e-6, .174996751085704808308644277469, -.349920084774918191820676001740e-15 };
  adreal<3,DO_HESS_TEST,double> ad1(-34.9993505671227973530582007958, g1,h1), ad2(20000000.0000058275951375928809, g2,h2), adresMaple(-.174996752835562996253995050474e-5, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 936752127534.081539066065679862, 8999999.65000649782870704788235, -699984.004342585904235304973562 };
  double g2  [3] = { 6229630898620.54567415543237463, 6851037641631393026.13842415667, 3114815799303.30663230690173257 };
  double gres[3] = { .300741036751430741874792098359e-6, .247145694907703657755981948188e-6, -.112364109058891688136986819736e-12 };
  double h1  [9] = { 349993502171.642945619823779733, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, 18000000., 9., 1873504.25506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { 6229630.89861960892202789922984, 13702075283260.9125480217820238, 6229631.24861311109332085134749, 13702075283260.9125480217820238, 21339717889952508469.4157567441, 6851038341616.52386446926210240, 6229631.24861311109332085134749, 6851038341616.52386446926210240, -936752.127533144786938532535075 };
  double hres[9] = { .112362918720747964663339010458e-6, -.661480012769390984223901239173e-6, .300741002960330908121005133638e-12, -.661480012769390984223901239173e-6, -.317384072686610740834162211277e-6, .247144893626016649583680318310e-12, .300741002960330908121005133638e-12, .247144893626016649583680318310e-12, -.337921875427316728056264951392e-19 };
  adreal<3,DO_HESS_TEST,double> ad1(-349990502171.642945619823779733, g1,h1), ad2(3114815449310741213.14148275971, g2,h2), adresMaple(-.112363158545746342681925549759e-6, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 1.87350425506628957387706507015, -9.34999350217129295211765248678, 3.69998700434258590423530497356 };
  double g2  [3] = { -6229630.35831730305388818182890, -6851036561024.90778560392306523, 3114816290780.78926891045626742 };
  double gres[3] = { -.601484104119019350087691957483e-12, .38906668078373163575030153311e-12, .52695375400103936062213e-18 };
  double h1  [9] = { .699987004342585904235304973562, .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, -18., 9., -1.87350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -6.22963089861960892202789922984, -13702074.2026544273074872809323, 6229631.74009059372992440588234, -13702074.2026544273074872809323, -21339716809346.0232288812556526, 6851039324571.48913767637117210, 6229631.74009059372992440588234, 6851039324571.48913767637117210, -540302.305868139717400936607443 };
  double hres[9] = { -.224725876416764840075763092280e-12, .102221764492825783760484914662e-11, -.26682686948688872148149775661e-18, .102221764492825783760484914662e-11, -.407079516234096990657102538314e-11, .11236420864318592709410234929e-12, -.26682686948688872148149775661e-18, .11236420864318592709410234929e-12, .224729130209031878750822721487e-12 };
  adreal<3,DO_HESS_TEST,double> ad1(-3.69998700434258590423530497356, g1,h1), ad2(-3114814909007.49859287423221398, g2,h2), adresMaple(.118786737332060155822703177308e-11, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { .936752127534081539066065679862, -.349984502171292952117652486781, 2.99999930001299565741409576470 };
  double g2  [3] = { 7.22963089861910892202789927151, 8851037.64162851952188335795043, 3114815449308.80446101394978159 };
  double gres[3] = { .227653646682050031812625335738e-6, .979025654340108659791336471210e-7, .643861968787337931003101242666e-1 };
  double h1  [9] = { .349993502171642945619823779733, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, .18e-4, 9., .187350425506628957387706507015e-5, 9., -.699987004342585904235304973562 };
  double h2  [9] = { .622963089861960892202789922984e-5, 15.7020752832580390437667158175, 6229630.89861860892202789939651, 15.7020752832580390437667158175, 23339717.8899496349651606905378, 6851037641627.51952188335820043, 6229630.89861860892202789939651, 6851037641627.51952188335820043, -999999.999999500000000000041667 };
  double hres[9] = { .850561136410733124805126956635e-7, -.262033195419606002351764245214e-6, -.172328270886047507973387645451, -.262033195419606002351764245214e-6, .61272922477778645286687107124e-7, -.70987619549929710253667425931e-1, -.172328270886047507973387645451, -.70987619549929710253667425931e-1, -97477.5774180465511095688932190 };
  adreal<3,DO_HESS_TEST,double> ad1(-.349990502171642945619823779733, g1,h1), ad2(4114815.44930930446101394965659, g2,h2), adresMaple(-.850561845320161011933746868132e-7, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 1.87350425506628957387706507015, 8.65000649782870704788234751322, 2.30001299565741409576469502644 };
  double g2  [3] = { 6229631.43892191479016761663078, 6851038722234.13125816279266897, 3114814607838.81965311744296242 };
  double gres[3] = { .601480042894606149698128574706e-12, .115291793226007101219107592328e-11, .327568621172518601209750e-18 };
  double h1  [9] = { .699987004342585904235304973562, .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, 18., 9., 1.87350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { 6.22963089861960892202789922984, 13702076.3638636507800461505361, 6229630.05714862411413139257734, 13702076.3638636507800461505361, 21339718970555.2467014401252564, 6851035958687.54990609034456210, 6229630.05714862411413139257734, 6851035958687.54990609034456210, -540302.305868139717400936607443 };
  double hres[9] = { .224725798465926230961357956728e-12, -.102222033263574317932418150745e-11, .26682412078350083944365159763e-18, -.102222033263574317932418150745e-11, -.435173201699271194909469199566e-11, .11236454829318284805569178154e-12, .26682412078350083944365159763e-18, .11236454829318284805569178154e-12, -.224728731438123986731024299428e-12 };
  adreal<3,DO_HESS_TEST,double> ad1(2.30001299565741409576469502644, g1,h1), ad2(3114815989612.11032915366701586, g2,h2), adresMaple(.738410552446096798771881999000e-12, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 94.6119648808476234807917860426, 89.6500064978287070478823475132, -3.99987004342585904235304973562 };
  double g2  [3] = { 62296308.1471245601438265400395, 68510374738152.1370659286741533, 3114815993330.91535038376301967 };
  double gres[3] = { .303748262675289375308140758316e-11, .325591978855534585012089371650e-11, -.111240480002200672077114636553e-12 };
  double h1  [9] = { 35.3493437193005881638829011649, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, 180., 9., 18.7350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { 62.2963089861960892202789922984, 137020751.154447332284762252824, 6229631.44264071981139771263459, 137020751.154447332284762252824, 213397177221363.291498702000027, 6851038729671.74130062298467660, 6229631.44264071981139771263459, 6851038729671.74130062298467660, 839071.529076452452258863947824 };
  double hres[9] = { .113486550965547576773068826356e-11, -.665087576274909921958618566210e-11, .297733573172143411896989258357e-12, -.665087576274909921958618566210e-11, -.736737131624289178050081647893e-11, .245797056783981490135359741553e-12, .297733573172143411896989258357e-12, .245797056783981490135359741553e-12, -.224719830457567486384946893369e-15 };
  adreal<3,DO_HESS_TEST,double> ad1(-5.3493437193005881638829011649, g1,h1), ad2(31148153654026.5155336870438903, g2,h2), adresMaple(-.171738709739191221094502251598e-12, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 936752127542.512308213863982944, 899999999.650006497828707047882, -696987.004342585904235304973562 };
  double g2  [3] = { 2593443309930.02189778981421073, 2840743525185598156.34115753065, 1296756654268.39047181346163127 };
  double gres[3] = { .722400846711360909888045645126e-6, .586912990935684453349241928159e-6, -.269899199464052044856418243793e-12 };
  double h1  [9] = { 349993502174.792887139365416302, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, 180000000., 900., 1873504.25506628957387706507015, 900., -.699987004342585904235304973562 };
  double h2  [9] = { 2593443.30983634668503649973204, 5681487050352.46127013165216555, 2593478.30918656381433171149729, 5681487050352.46127013165216555, 3683653645154333844.90060146618, 2840750525036.90653964953698796, 2593478.30918656381433171149729, 2840750525036.90653964953698796, -93675212.7533144786938532535075 };
  double hres[9] = { .269903532351361036303650222011e-6, -.158257211310642014229704594490e-5, .722381353306154742617332911016e-12, -.158257211310642014229704594490e-5, -.181121291844775171268495258164e-5, .591256984071703426265445433316e-12, .722381353306154742617332911016e-12, .591256984071703426265445433316e-12, -.193309189742276115251944196686e-16 };
  adreal<3,DO_HESS_TEST,double> ad1(-346993502174.792887139365416302, g1,h1), ad2(1296721655011848555.27156434471, g2,h2), adresMaple(-.267592895386344340742965675118e-6, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 10.3042734028645926563238578858, -900.349993502171292952117652487, 3000.69998700434258590423530497 };
  double g2  [3] = { -2593389.27960575987106475963838, -2840732719120.74575099614661618, 1296805802016.65413216891511625 };
  double gres[3] = { -.795136782286189818528261375977e-11, -.438082109121081178459507899317e-8, .267612297659548982479281043e-11 };
  double h1  [9] = { 3.84992852388422247329417735459, .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, -180., 900., -1.87350425506628957387706507015, 900., -.699987004342585904235304973562 };
  double h2  [9] = { -2.59344330983634668503649973204, -5681476.24428760886478664125108, 2593527.45693482747468716498227, -5681476.24428760886478664125108, -3683652564547.84860436610037474, 2840760354586.55927172062768496, 2593527.45693482747468716498227, 2840760354586.55927172062768496, -54030230.5868139717400936607443 };
  double hres[9] = { -.296906255281542004795679501716e-11, .166959964975813770403943184721e-10, -.650272614674571981578256673831e-11, .166959964975813770403943184721e-10, .127526615223364975677260998888e-7, -.601038115410656086686300818e-11, -.650272614674571981578256673831e-11, -.601038115410656086686300818e-11, .579612266381510296122789025764e-11 };
  adreal<3,DO_HESS_TEST,double> ad1(-3003.84992852388422247329417735, g1,h1), ad2(-1296667624687.58652854650977236, g2,h2), adresMaple(.231659206363513455579270077308e-8, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 9.36752127533238462151285849554, -.349093502171292952117652486781, 2999.99999930001299565741409576 };
  double g2  [3] = { 102.593443309786346685036503899, 22840743.5251568631137904954682, 1296721654818.17334251826653269 };
  double gres[3] = { .924760906769409991823091915487e-7, .433782834421281395109543020557e-8, .471535850201495522666922978421e-3 };
  double h1  [9] = { 3.49993502171327951467869616076, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, .180e-3, 900., .187350425506628957387706507015e-5, 900., -.699987004342585904235304973562 };
  double h2  [9] = { .259344330983634668503649973204e-5, 25.6814870503237262275809901031, 2593443.30973634668503651639871, 25.6814870503237262275809901031, 5683653.64515146034064553525994, 2840743525146.86311379049796824, 2593443.30973634668503651639871, 2840743525146.86311379049796824, -99999999.9999500000000000041667 };
  double hres[9] = { .345511285030223424925786211783e-7, -.116042264852080860307418604861e-7, -.118380640774169496829136100892e-2, -.116042264852080860307418604861e-7, -.1746417910553867404882298016e-10, .815150862116458172187182822207e-3, -.118380640774169496829136100892e-2, .815150862116458172187182822207e-3, -12.0724686853885094143770857681 };
  adreal<3,DO_HESS_TEST,double> ad1(-3.49693502171327951467869616076, g1,h1), ad2(101296721.654868173342518254033, g2,h2), adresMaple(-.345216998594270093605207749210e-7, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 10.3042734028645926563238578858, 899.650006497828707047882347513, 2999.30001299565741409576469503 };
  double g2  [3] = { 2593497.34006693349900823982570, 2840754331212.98047658484265364, 1296637507819.69255286758461579 };
  double gres[3] = { .794145151354763963077329827381e-11, -.436760426853484454706606441533e-8, .267524671727988688572866557e-11 };
  double h1  [9] = { 3.84992852388422247329417735459, .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, 180., 900., 1.87350425506628957387706507015, 900., -.699987004342585904235304973562 };
  double h2  [9] = { 2.59344330983634668503649973204, 5681497.85637984359037533728854, 2593359.16273786589538583448181, 5681497.85637984359037533728854, 3683654725757.07207692496997848, 2840726695747.16695586036158486, 2593359.16273786589538583448181, 2840726695747.16695586036158486, -54030230.5868139717400936607443 };
  double hres[9] = { .296881516959024203016845960548e-11, -.166757908976703309103277953804e-10, -.650049082101974887570808944984e-11, -.166757908976703309103277953804e-10, .127112498216687308306675422796e-7, -.600672768885353461839037474e-11, -.650049082101974887570808944984e-11, -.600672768885353461839037474e-11, -.579344816892251536550466945861e-11 };
  adreal<3,DO_HESS_TEST,double> ad1(2996.15007147611577752670582265, g1,h1), ad2(1296775685148.76015648998995968, g2,h2), adresMaple(.231046132788371274005392437065e-8, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 103.042734028645926563238578858, 8999.65000649782870704788234751, 2993.00012995657414095764695026 };
  double g2  [3] = { 25934349.1912105592051197714340, 28407418470238.0496088559011718, 1296776057029.26227949959034079 };
  double gres[3] = { .794183368646642016594210537639e-11, -.436779300764977388584675851906e-8, -.254106207700403767991371352e-12 };
  double h1  [9] = { 38.4992852388422247329417735459, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, 1800., 900., 18.7350425506628957387706507015, 900., -.699987004342585904235304973562 };
  double h2  [9] = { 25.9344330983634668503649973204, 56814853.7219066807467608475208, 2593497.71194743562201784020681, 56814853.7219066807467608475208, 36836534773381.5452535504472484, 2840754405589.08090118676272986, 2593497.71194743562201784020681, 2840754405589.08090118676272986, 83907152.9076452452258863947824 };
  double hres[9] = { .296895808110737812144660256343e-11, -.173275191979601663072278536226e-10, .650126526452130141764045879937e-12, -.173275191979601663072278536226e-10, .127122908388975763070738830446e-7, .578288934576042037662152298e-12, .650126526452130141764045879937e-12, .578288934576042037662152298e-12, -.181090826148854461266282685476e-13 };
  adreal<3,DO_HESS_TEST,double> ad1(29961.5007147611577752670582265, g1,h1), ad2(12967132642028.8257799372727738, g2,h2), adresMaple(.231057254844841385246750688049e-8, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 540302846170.445585540654008380, 8999999999999999999.15852901519, 2999999999998317058.03038420699 };
  double g2  [3] = { 936753622030.960737334649229063, 405686.21016877343430675418196, -349993502172.040201025627684839 };
  double gres[3] = { -3202554776040.94563765438336979, -10994608.6644757819380757699872, 1196547668032.10018050996226020 };
  double h1  [9] = { 841471826278.881314549008974132, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18000000000000., 9000000000000., 1080604.61173627943480187321489, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { -1494497.81595039611669398835430, -2684876.67540383644249057343407, 349993502172.787449933602882898, -2684876.67540383644249057343407, -1703124.45971863951353128064744, -699984.725152120669172296789743, 349993502172.787449933602882898, -699984.725152120669172296789743, 936752127533.144786938532535075 };
  double hres[9] = { -6405109552086.86530442637876390, -3202567.20750912427592135449152, 1196549577007.37697342449352832, -3202567.20750912427592135449152, 5822579.51679327797334142529750, 7019133.10722996437406002904276, 1196549577007.37697342449352832, 7019133.10722996437406002904276, -4096667891720.16239423197046022 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999158528173721.11869, g1,h1), ad2(-936752874782.052762136590882069, g2,h2), adresMaple(-3202552221360.56528135297315324, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 540302.846170445585540654008380, -9000000000000.84147098480789651, 3000000000000000001.68294196962 };
  double g2  [3] = { 540302305866.645219584986211326, -1080606.89092674466986488139871, -841470984808.643755560477519688 };
  double gres[3] = { 5552447.15304333426201731034765, 5.5524237308040355731746928214, -14199871.2399714205903352880370 };
  double h1  [9] = { 841471.826278881314549008974132, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -18000000., 9000000000000., -1.08060461173627943480187321489, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { 1.49449781595039611669398835430, 1080609.17011720990492788958253, 841470984809.391004468452717747, 1080609.17011720990492788958253, .62251797447810501243983355548, -1682939.69042532777824199645944, 841470984809.391004468452717747, -1682939.69042532777824199645944, 540302305868.139717400936607443 };
  double hres[9] = { 11104894.3060851111147525799213, 5.5524471530422195139010159569, -14199871.2399305857665297873729, 5.5524471530422195139010159569, .175022822644246575003379640903e-4, -14.1997514395066865090159713971, -14199871.2399305857665297873729, -14.1997514395066865090159713971, 49782425.4696330915447325510579 };
  adreal<3,DO_HESS_TEST,double> ad1(-3000000000000841471.82627888131, g1,h1), ad2(-540302305867.392468492961409385, g2,h2), adresMaple(5552447.15305201340861164207757, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 540302.305868139717941238913311, 8999999.15852901519210349334750, 2999999999999999999.99999831706 };
  double g2  [3] = { 999999999999.500001494497857617, -1999999.99999672080953476502032, 999999.252750925358135274994673 };
  double gres[3] = { -2.99999969883282106009262632906, -.300000084147932238003682867166e-5, -3000000.00000449999467503763818 };
  double h1  [9] = { 841470.984807896507493973306438, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, 18.000000, 9000000000000., .108060461173627943480187321489e-5, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 1999999.99999444161906952995731, -999998.505502017382937216647679, 1999999.99999444161906952995731, -2.00000170312158621438444732504, 4.27919046523472967485048593544, -999998.505502017382937216647679, 4.27919046523472967485048593544, 999999999999.500000000000041667 };
  double hres[9] = { -6.00000023913662692850249582318, -.300000030117017894113882789352e-5, -3000000.00000449999969883343998, -.300000030117017894113882789352e-5, .679232197027242496227859e-17, -3.00000000001817514619853412018, -3000000.00000449999969883343998, -3.00000000001817514619853412018, -8.99999467504638436994090877312 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999158529.01519210349250603, g1,h1), ad2(-999999999999.500000747248949642, g2,h2), adresMaple(-2.99999915853051518944101154349, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 540302.846170445585540654008380, 8999999999999.15852901519210349, 2999999999999999998.31705803038 };
  double g2  [3] = { 540302305869.634215216887003560, -1080602.33254581419973886503107, 841470984807.149257744527123572 };
  double gres[3] = { -5552447.15304221944545318509388, -5.5524705752815179915826695190, -14199871.2398880147165664689395 };
  double h1  [9] = { 841471.826278881314549008974132, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 18000000., 9000000000000., 1.08060461173627943480187321489, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { -1.49449781595039611669398835430, 1080600.05335534896467585684725, -841470984806.402008836551925513, 1080600.05335534896467585684725, -2.78372719795066388204357998526, 1682944.24880625824836801282708, -841470984806.402008836551925513, 1682944.24880625824836801282708, 540302305868.139717400936607443 };
  double hres[9] = { -11104894.3060859963001884546677, -5.5524471530433343315799566593, -14199871.2399288495403716145672, -5.5524471530433343315799566593, .175022822639228007223506156805e-4, -14.1999910403527477497007461045, -14199871.2399288495403716145672, -14.1999910403527477497007461045, -49782425.4691385695170003787147 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999158528.17372111869, g1,h1), ad2(-540302305868.886966308911805501, g2,h2), adresMaple(-5552447.15303354029885890291950, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 540356.336098726531372676701104, 89999999999999.1585290151921035, 2999999999999999983.17058030384 };
  double g2  [3] = { -839071529061.507474099359986657, 1678165.85005755725514780973384, -544021110890.117062312722859909 };
  double gres[3] = { 35753805.2006365153596189212517, 35.7528340109859379577799788189, 26756747.2452355305114773184314 };
  double h1  [9] = { 841555.131906377296303167571862, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 180000000., 9000000000000., 10.8060461173627943480187321489, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { -14.9449781595039611669398835430, -1678188.64196220960577789157204, 544021110890.864311220698057968, -1678188.64196220960577789157204, -15.3530828039909395678993398080, -1088039.94258827439174648713988, 544021110890.864311220698057968, -1088039.94258827439174648713988, -839071529076.452452258863947824 };
  double hres[9] = { 71507610.4012740336791852371905, 35.7538052006372506097402163313, 26756747.2447593748648240741830, 35.7538052006372506097402163313, .725722111348062212103573393261e-3, 26.7552936441771548623818400977, 26756747.2447593748648240741830, 26.7552936441771548623818400977, 70449858.7696984356249479221600 };
  adreal<3,DO_HESS_TEST,double> ad1(29999999999999158444.8680936227, g1,h1), ad2(839071529068.979963179111967241, g2,h2), adresMaple(35753805.2009542827410047007432, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 540302305867.599415095068467726, 8999999.15852901519210349334750, -1682944.96961579301330500464326 };
  double g2  [3] = { 6229631.83537173645517268616837, 6851039.51513377458817293174417, -3.46480895148109741313160210170 };
  double gres[3] = { 366841.980090411024083150221593, 594196.586988638674868936217222, .239795765949069989788300111338 };
  double h1  [9] = { 841470984807.055035667694425123, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, -18000000., 9., 1080604.61173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -6229630.89861960892202789922984, -13702077.1567632941100562896113, 6.57962440079090187414555171662, -13702077.1567632941100562896113, -21339719.7634548900314502643316, 7.55102464597210542611866284066, 6.57962440079090187414555171662, 7.55102464597210542611866284066, .936752127533144786938532535075 };
  double hres[9] = { 656912.720862126671653171055360, 806863.24310243469100162812675, .295265003034346885056126058703, 806863.24310243469100162812675, 763055.53301125782991358769087, .521375287142481708440524603693, .295265003034346885056126058703, .521375287142481708440524603693, .812457247120338205374659326305e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(-841473984807.055035667694425123, g1,h1), ad2(-3114816.38606193199415873655345, g2,h2), adresMaple(270152.034826981284997265654626, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 0., -9.84147098480789650665250232163, -1.31705803038420698669499535674 };
  double g2  [3] = { -5.68932859275146920462696262240, -5.77043302989324008708148465221, -3.95628643411770096766645193655 };
  double gres[3] = { 2.57508782575154555774201898608, -1.21085614369106912756128490336, 1.27910761205855802566670952612 };
  double h1  [9] = { 0., .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., -1.08060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, 12.6214706715227596089648425193, 7.07110188342750542868040155147, 12.6214706715227596089648425193, 20.2591132782143555303588172396, 8.53397961124531253518836251036, 7.07110188342750542868040155147, 8.53397961124531253518836251036, .540302305868139717400936607443 };
  double hres[9] = { 8.56155919891517789042761218621, -2.40693705809166347219379279011, 3.16359196252918391065749830223, -2.40693705809166347219379279011, -7.60595939855228365695527046312, .63939482134019939419025080143, 3.16359196252918391065749830223, .63939482134019939419025080143, 3.03299782488567612379366419904 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(2.57451314344166474361301300748, g2,h2), adresMaple(1.16526886166505844362375214373, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
}
void test4() { 
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -.540302305867599415095068467726, -.841461984807896506652502321630, -3.00000168294196961579301330500 };
  double g2  [3] = { 1.00000622963039861960892206957, 2.00000685103664162951952196669, -3.11481444930980446118061628159 };
  double gres[3] = { -.301167361868169847007151730741, -.841471886669252616833756356227, 5.62099264834228032546265217834 };
  double h1  [9] = { -.841470984807055035667694425123, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, -.18e-4, 9., .108060461173627943480187321489e-5, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -.622963089861960892202789922984e-5, -2.00001370207428325903904385005, 6.22962989861960892219456589651, -2.00001370207428325903904385005, -2.00002133971688995063496524402, 6.85103564162951952221669120043, 6.22962989861960892219456589651, 6.85103564162951952221669120043, .999999999999500000000000041667 };
  double hres[9] = { .239137005899119737053522299225, -.30117302612572146980318558017, 1.31708514340548973979349248578, -.30117302612572146980318558017, -1.68292715035086364590979280040, -.90185379187374786365164405694, 1.31708514340548973979349248578, -.90185379187374786365164405694, -34.1751151860637093771543431759 };
  adreal<3,DO_HESS_TEST,double> ad1(.841467984807055035667694425123, g1,h1), ad2(-1.00000311481494930980446105562, g2,h2), adresMaple(-.841465363798160550744068736964, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 0., 8.15852901519210349334749767837, -4.68294196961579301330500464326 };
  double g2  [3] = { 6.76993320448774863942883583728, 7.93164225336579895668523108199, -2.27334446450190795436144729329 };
  double gres[3] = { 1.52020757595491188004366246532, -.45101115292196208413801632060, .770715490910467604497467362494 };
  double h1  [9] = { 0., .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, -18., 9., 1.08060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -6.22963089861960892202789922984, -14.7826798949953184785685889491, 5.38815991381171241537539690821, -14.7826798949953184785685889491, -22.4203225016869143999625636694, 5.16809567201372650857835322384, 5.38815991381171241537539690821, 5.16809567201372650857835322384, .540302305868139717400936607443 };
  double hres[9] = { 4.23251263671837136103754982469, -1.00380096556002989751833621954, 1.39627679395495365885863367014, -1.00380096556002989751833621954, -2.06734211244844178287737718445, .65118164500754942971909528838, 1.39627679395495365885863367014, .65118164500754942971909528838, -.376950734568144315724570454428 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(-3.65511775517794417841488622236, g2,h2), adresMaple(.820766990543632784328080990898, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 53.4899282809458320226927241369, 89.1585290151921034933474976784, -19.8294196961579301330500464326 };
  double g2  [3] = { 61.4572374571196367680201283506, 66.8322333581422903143158507754, -3.65883656019917427441869727677 };
  double gres[3] = { 5.81535445192181444876956291072, 5.30148064567143028749976923604, .202957252904407829938748336996 };
  double h1  [9] = { 83.3056274959817541585977298414, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, -180., 9., 10.8060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -62.2963089861960892202789922984, -135.342609774437485533149429446, 6.77365200950897873543264689169, -135.342609774437485533149429446, -211.719035841353444747089176649, 7.93907986340825914869285319080, 6.77365200950897873543264689169, 7.93907986340825914869285319080, -.839071529076452452258863947824 };
  double hres[9] = { 13.1512025358346137128667250501, 6.8616599023651271253419902841, .188455787615667641371781992975, 6.8616599023651271253419902841, 3.2050474943405742832626749286, .489813806964967200798521334415, .188455787615667641371781992975, .489813806964967200798521334415, -.96966533283580253093255916537e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(-113.305627495981754158597729841, g1,h1), ad2(-30.3090829640215921578806322014, g2,h2), adresMaple(3.73833901970842338126086161940, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 540302305868.139717941238913311, -.841461984807896506652502321630, -1682941.96961579301330500164326 };
  double g2  [3] = { -4.00000000000039658120580072189, 2000000.00000012649574493504376, .199999965000716449537371481569e-5 };
  double gres[3] = { -571319831874.100863547216789784, 420735492404088498.490389008731, -420735.566031152244871902847662 };
  double h1  [9] = { 841470984807.896507493973306438, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18.000000, .9e-11, 1080604.61173627943480187321489, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { 4.00000000000133333333333386668, -4000000.00000212649574493637710, -.399999965000783116204038174903e-5, -4000000.00000212649574493637710, 2.12649574493904375945627279653, 1.99999930001499565741409709803, -.399999965000783116204038174903e-5, 1.99999930001499565741409709803, .936752127533144786938532535075e-12 };
  double hres[9] = { -1023072850284.52930133922894191, 571319831874017087.895998307817, -571320.005480094853380687059378, 571319831874017087.895998307817, -841470984807896506652499.002778, 420735492404.088498519585077909, -571320.005480094853380687059378, 420735492404.088498519585077909, .197062433819079356077965400222 };
  adreal<3,DO_HESS_TEST,double> ad1(-841470984807.896507493970306438, g1,h1), ad2(1.99999999999972991453913378855, g2,h2), adresMaple(-420735492404.005071016669507277, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380, -.841470984816896506652502321630, 1.68294196961579301630500464326 };
  double g2  [3] = { .400000054030363920147305126762e-5, -2.00000108060661173627943613520, .199999915852968185877016028084e-5 };
  double gres[3] = { 571320.135188413559775300612899, -420735492404.171451784332355186, -420735.248686948165814075278878 };
  double h1  [9] = { .841471826278881314549008974132, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -.18e-4, .9e-11, -1.08060461173627943480187321489, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { -.400000000000133333333333386668e-5, 4.00000108060861173627943746854, -.399999915853034852543682721418e-5, 4.00000108060861173627943746854, -1.08060861173627944013520654823, 1.99999831706003038420698802833, -.399999915853034852543682721418e-5, 1.99999831706003038420698802833, .540302305868139717400936607443e-12 };
  double hres[9] = { 1023073.06096149509548508631755, -571319831874.181978876795743171, -571319.677947218818775100770336, -571319831874.181978876795743171, 841470984807896509.568380742557, 420735492403.810505393150846163, -571319.677947218818775100770336, 420735492403.810505393150846163, .955132227019829108038076554663 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841471826278881317549008974132, g1,h1), ad2(-.200000054030297253480638433428e-5, g2,h2), adresMaple(420735.799477039104148271782148, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380e-6, -.841470984807896497652502321630, -.168294196961279301330500464326e-5 };
  double g2  [3] = { -.300000000000183333333333382501e-11, .300000000000125000e-17, .200000000000166666666666676667e-5 };
  double gres[3] = { -1984112.63266248109799113625271, -841470984804.390366024728926246, 1682941969613.26859678960322365 };
  double h1  [9] = { .841471826278881314549008974132e-6, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .18e-10, .9e-11, .108060461173627943480187321489e-5, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-11, -.200000000000500000000000258334e-5, -.400000000000233333333333370001e-5, -.200000000000500000000000258334e-5, -1.99999999999499999999999475000, 2.00000000000400000000000100000, -.400000000000233333333333370001e-5, 2.00000000000400000000000100000, .999999999999500000000000041667e-12 };
  double hres[9] = { -7697316.66458157981016711675961, -3667054301096.35005753088295276, 5651164949655.61713291992662486, -3667054301096.35005753088295276, -1682943652544579551.53517772082, 3365885622160372576.36458372951, 5651164949655.61713291992662486, 3365885622160372576.36458372951, -6731769561391958606.53556781965 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841471826278881311549008974132e-6, g1,h1), ad2(.100000000000116666666666689167e-11, g2,h2), adresMaple(-841471.826277899594418351235271, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380, -.841470984798896506652502321630, -1.68294196961579301030500464326 };
  double g2  [3] = { -.399999945969902746519361646574e-5, 1.99999891939738826372056653146, .200000084147165147456317358584e-5 };
  double gres[3] = { -571320.671198728819316384705160, 420735492403.944133697544470719, -420734.894649430343731258215122 };
  double h1  [9] = { .841471826278881314549008974132, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, .18e-4, .9e-11, 1.08060461173627943480187321489, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-5, -3.99999891939938826372056786480, -.400000084147231814122984051918e-5, -3.99999891939938826372056786480, -1.08060061173627942946853988155, 2.00000168294396961579301463833, -.400000084147231814122984051918e-5, 2.00000168294396961579301463833, .540302305868139717400936607443e-12 };
  double hres[9] = { -1023074.68575129845629332591453, 571319831873.645981667620483373, -571318.843159541309583641851855, 571319831873.645981667620483373, -841470984807896503.298461801747, 420735492404.619190565041453203, -571318.843159541309583641851855, 420735492404.619190565041453203, -.727810423082781585643634541659 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841471826278881311549008974132, g1,h1), ad2(.199999945969836079852694953240e-5, g2,h2), adresMaple(-420736.026801623131790442851081, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 54.0302311271162776082333781452, -.841470984717896506652502321630, -16.8294196961579301300500464326 };
  double g2  [3] = { -.400000008390848624097857909257e-4, 20.0000016781630581529049178510, .199999945597955577729685352859e-5 };
  double gres[3] = { -5713197.95966567703416719652543, 4207354924040.87934745664851610, -420735.602640939222362018205430 };
  double h1  [9] = { 84.1470993222606354731467388155, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, .180e-3, .9e-11, 10.8060461173627943480187321489, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-4, -40.0000016781830581529049311844, -.399999945598022244396352046193e-5, -40.0000016781830581529049311844, 1.67818305815290495785106122903, 1.99999891195977822126037452383, -.399999945598022244396352046193e-5, 1.99999891195977822126037452383, -.839071529076452452258863947824e-12 };
  double hres[9] = { -10230727.3435175548498829712679, 5713198318740.15017990459461559, -571320.096009926476976034950264, 5713198318740.15017990459461559, -8414709848078965063.73185215467, 420735492404.097344416319124818, -571320.096009926476976034950264, 420735492404.097344416319124818, -.177355052144116557248436558279 };
  adreal<3,DO_HESS_TEST,double> ad1(-84.1470993222606354431467388155, g1,h1), ad2(.200000008390781957431191215923e-4, g2,h2), adresMaple(-4207354.78959804848680228217568, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 540302305868.680019706804747160, 8999999.15852901519210349334750, -1682938.96961579301330500464326 };
  double g2  [3] = { -6229629.96186748138888311229131, 6851035.76812526445559378399003, 2.76482194713851150889629712814 };
  double gres[3] = { -366838.510674069863481804332584, 594198.518789957689422595813428, -.300506359991449093695513033021 };
  double h1  [9] = { 841470984808.737977637310218137, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18000000., 9., 1080604.61173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { 6229630.89861960892202789922984, -13702073.4097547839774771418571, -5.87963739644831596991024674306, -13702073.4097547839774771418571, 21339716.0164463798988711165774, 6.15105063728693361764805289354, -5.87963739644831596991024674306, 6.15105063728693361764805289354, .936752127533144786938532535075 };
  double hres[9] = { -656902.324591398818758755186454, 806867.24622264913733261358829, -.438414961018245274034993500628, 806867.24622264913733261358829, -763063.91145886039080363178915, .667020043605917744636010695561, -.438414961018245274034993500628, .667020043605917744636010695561, .812452294934101982777646745661e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(-841467984808.737977637310218137, g1,h1), ad2(3114814.51255767692786916267639, g2,h2), adresMaple(-270150.271040627989863542531227, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 1.08060461173627943480187321489, -9.84147098480789650665250232163, 4.68294196961579301330500464326 };
  double g2  [3] = { 6.76993320448774863942883583728, -7.93164225336579895668523108199, 2.27334446450190795436144729329 };
  double gres[3] = { 2.07737308827492948648744639993, -.8770172737965530837293664031e-1, -.484342772852027910789510541639 };
  double h1  [9] = { 1.68294196961579301330500464326, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -18., 9., -1.08060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -6.22963089861960892202789922984, 14.7826798949953184785685889491, -5.38815991381171241537539690821, 14.7826798949953184785685889491, -22.4203225016869143999625636694, 5.16809567201372650857835322384, -5.38815991381171241537539690821, 5.16809567201372650857835322384, .540302305868139717400936607443 };
  double hres[9] = { 5.05127373766997297086319177939, .36348290218705792086071248181, -1.19807275527169575599270633138, .36348290218705792086071248181, -2.55360063742482832477123690591, .34571492325672147878814019446, -1.19807275527169575599270633138, .34571492325672147878814019446, .47336946836837947814502366410e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(-4.68294196961579301330500464326, g1,h1), ad2(-3.65511775517794417841488622236, g2,h2), adresMaple(1.28120139576400888992747994029, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { .540302305868680019706804747160, -.841461984807896506652502321630, 2.99999831705803038420698669500 };
  double g2  [3] = { .999993770368601380391078013768, -1.99999314896135837048047819997, 3.11481644930980446084728294825 };
  double gres[3] = { .301163995984832815039799201471, -.841476082957195096053004200262, -.37897301282428738253034856824 };
  double h1  [9] = { .841470984808737977637310218137, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .18e-4, 9., .108060461173627943480187321489e-5, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { .622963089861960892202789922984e-5, 1.99998629792371674096095631661, -6.22963189861960892186123256317, 1.99998629792371674096095631661, -1.99997866028111004936503492264, 6.85103964162951952155002453377, -6.22963189861960892186123256317, 6.85103964162951952155002453377, .999999999999500000000000041667 };
  double hres[9] = { -.239142247953245079210356371250, -.30117033173797911681743923298, -4.68296787837557728754886068116, -.30117033173797911681743923298, 1.68295678903568703480735569871, -5.09816751761929331770588859184, -4.68296787837557728754886068116, -5.09816751761929331770588859184, .163550336500199199625349944865 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841467984808737977637310218137, g1,h1), ad2(-.999996885184050690195539027717, g2,h2), adresMaple(.841470605834801907262097678407, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 1.08060461173627943480187321489, 8.15852901519210349334749767837, 1.31705803038420698669499535674 };
  double g2  [3] = { -5.68932859275146920462696262240, 5.77043302989324008708148465221, 3.95628643411770096766645193655 };
  double gres[3] = { 1.55024500189287579545506829736, 2.02233049714825207341422102052, -.274568984595773018468099048443 };
  double h1  [9] = { 1.68294196961579301330500464326, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., 1.08060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, -12.6214706715227596089648425193, -7.07110188342750542868040155147, -12.6214706715227596089648425193, 20.2591132782143555303588172396, 8.53397961124531253518836251036, -7.07110188342750542868040155147, 8.53397961124531253518836251036, .540302305868139717400936607443 };
  double hres[9] = { 6.26748457632989914930128916989, 3.71225765497923654209277172250, -1.16422744252644830730998264798, 3.71225765497923654209277172250, -6.09960484041437637175806311410, -.69229099379905162172410047098, -1.16422744252644830730998264798, -.69229099379905162172410047098, .82811644786319057464408375357e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(1.31705803038420698669499535674, g1,h1), ad2(2.57451314344166474361301300748, g2,h2), adresMaple(.511575570604209610541268184659, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 54.5705328926821114574945973517, 89.1585290151921034933474976784, -13.8294196961579301330500464326 };
  double g2  [3] = { -63.1353805152725416725378562462, 70.1885194744481001233513065666, 2.57079433842043464760920195307 };
  double gres[3] = { -1.68705394244701917056609293587, 6.55943534483806788234171304946, -.294180591132817953597692307045 };
  double h1  [9] = { 84.9885694655975471719027344846, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 180., 9., 10.8060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { 62.2963089861960892202789922984, -138.698895890743295342184885238, -5.68560978773023910862315156799, -138.698895890743295342184885238, 215.075321957659254556124632441, 5.76299541985077989507386254340, -5.68560978773023910862315156799, 5.76299541985077989507386254340, -.839071529076452452258863947824 };
  double hres[9] = { -.65478442365629296064737424385, 9.21149598033061480922339438746, -.412792946372989788907948575657, 9.21149598033061480922339438746, -11.6003380503896949740517927222, .709413984802712520265054753351, -.412792946372989788907948575657, .709413984802712520265054753351, -.504206473559947101473198170403e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(-54.9885694655975471719027344846, g1,h1), ad2(31.9872260221744970623983600970, g2,h2), adresMaple(-1.71907902946875838132750641922, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 540302305873.542740459618004617, 899999999.158529015192103493347, -1679941.96961579301330500464326 };
  double g2  [3] = { -2593349.63462359337055780587879, 2840724.79012431245089475586426, -33.7026285622111218692469988121 };
  double gres[3] = { -876658.731028905103647266998069, 1417421.92723948691585734030158, -18.1038170495933554516918802544 };
  double h1  [9] = { 841470984816.311216500581286697, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 180000000., 900., 1080604.61173627943480187321489, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { 2593443.30983634668503649973204, -5681468.31529117556468525049916, 32.4059069072929485267287489461, -5681468.31529117556468525049916, 3683651.77164820527435596129954, -4.15912651825899592856255510071, 32.4059069072929485267287489461, -4.15912651825899592856255510071, 93.6752127533144786938532535075 };
  double hres[9] = { -1564389.42072389859852298718876, 1922114.04574902989067767436947, -42.0006238976776414307810740138, 1922114.04574902989067767436947, -4373482.14990841554803685114980, 74.4316705412606184771812622568, -42.0006238976776414307810740138, 74.4316705412606184771812622568, 46.7168108505000121961120835354 };
  adreal<3,DO_HESS_TEST,double> ad1(-838470984816.311216500581286697, g1,h1), ad2(1296627.97970542002803955601277, g2,h2), adresMaple(-646655.014344826056039883275252, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 5.94332536454953689141030268187, -900.841470984807896506652502322, 3001.68294196961579301330500464 };
  double g2  [3] = { 56.6236738966503184251301604763, -13.6467896425296574618092267838, -82.8503768258714773227319822970 };
  double gres[3] = { 55.5577700671481048211921081238, 2.8663579235098891269353772518, -135.701488100831239730604176716 };
  double h1  [9] = { 9.25618083288686157317752553793, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -180., 900., -1.08060461173627943480187321489, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { -2.59344330983634668503649973204, 16.4875331676965205755997214187, 81.5536551709533039802137324310, 16.4875331676965205755997214187, -4.76425825688873977544740839150, -13.9886761709910670192595517977, 81.5536551709533039802137324310, -13.9886761709910670192595517977, 54.0302305868139717400936607443 };
  double hres[9] = { 111.002959829792819376707538389, 5.4284947534743524800435735176, -141.885292770996258486618379414, 5.4284947534743524800435735176, -2.84424081580219606405094439401, -.8393584843487244339356787984, -141.885292770996258486618379414, -.8393584843487244339356787984, 459.563516638113220982494759812 };
  adreal<3,DO_HESS_TEST,double> ad1(-3009.25618083288686157317752554, g1,h1), ad2(-55.3269522417321450826119106103, g2,h2), adresMaple(54.3904202003568516587772533893, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 5.40302305868193747631523421415, -.840570984807896506652502321630, 2999.99999831705803038420698669 };
  double g2  [3] = { 99.9999974065066901636533191302, -19.9999971592464748331368870428, 1.29682165491817332585158319935 };
  double gres[3] = { .300868671933720105943880951254e-1, -.841770778584096605741103292537e-2, -29.9989095234252021355108861406 };
  double h1  [9] = { 8.41470984807980653750983111281, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .180e-3, 900., .108060461173627943480187321489e-5, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { .259344330983634668503649973204e-5, 19.9999943185029496662737732523, -2.59354330983634666836983306537, 19.9999943185029496662737732523, -1.99999631634535484753965943779, 2.84076352516686311045716130158, -2.59354330983634666836983306537, 2.84076352516686311045716130158, 99.9999999999500000000000041667 };
  double hres[9] = { -.239733637840063147984721002447e-1, -.30146881140735346976597061456e-2, -30.0007005856514358244299372296, -.30146881140735346976597061456e-2, .168294376505901315317701406024e-2, -2.99793858116081320234836008178, -30.0007005856514358244299372296, -2.99793858116081320234836008178, -.677118199391132657008330438709 };
  adreal<3,DO_HESS_TEST,double> ad1(-8.41170984807980653750983111281, g1,h1), ad2(-99.9999987032283450818266616485, g2,h2), adresMaple(.841170995716047695589651769419e-1, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 5.94332536454953689141030268187, 899.158529015192103493347497678, 2998.31705803038420698669499536 };
  double g2  [3] = { 51.4367872769776250550571610123, -7.96530259219593123422823751399, 85.4438201357078240077684820290 };
  double gres[3] = { -55.4323910612836174781894090165, -8.48439657207661569012719778127, -148.751776589896876353856069202 };
  double h1  [9] = { 9.25618083288686157317752553793, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 180., 900., 1.08060461173627943480187321489, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { 2.59344330983634668503649973204, 5.12455906702906812043774287909, -86.7405417906259973502867318950, 5.12455906702906812043774287909, 2.60304903341618090584366196172, 19.6701632213247932468405410675, -86.7405417906259973502867318950, 19.6701632213247932468405410675, 54.0302305868139717400936607443 };
  double hres[9] = { -111.103353917083335434331498678, -5.42445211457289360940220223048, -141.642776294752783078070167483, -5.42445211457289360940220223048, -3.64983336968582685967942032497, -29.5005173754628194578771808049, -141.642776294752783078070167483, -29.5005173754628194578771808049, -540.120393979383633360708837284 };
  adreal<3,DO_HESS_TEST,double> ad1(2990.74381916711313842682247446, g1,h1), ad2(-52.7335089318957983975754108783, g2,h2), adresMaple(-56.7142957057834889560075426934, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 59.4332536454953689141030268187, 8999.15852901519210349334749768, 2983.17058030384206986694995357 };
  double g2  [3] = { -109.841586006008712076251392103, 45.1888658331976801830822253056, -53.1053894340188079979565163191 };
  double gres[3] = { 350.662016960932654325197162379, -51.1149310980245234066975750085, 200.033057149317536563659949087 };
  double h1  [9] = { 92.5618083288686157317752553793, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 1800., 900., 10.8060461173627943480187321489, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { 25.9344330983634668503649973204, -73.5963010848663113209871716546, 51.8086677791006346554382664531, -73.5963010848663113209871716546, 38.5146795096775083109730796618, -8.03967869262053315430445860209, 51.8086677791006346554382664531, -8.03967869262053315430445860209, -83.9071529076452452258863947824 };
  double hres[9] = { 713.506840927381431062531704453, 13.016005155730735863439896025, 254.042640358977151239872812290, 13.016005155730735863439896025, -56.4726518908899524835540380440, -86.4181513776047499234933558975, 254.042640358977151239872812290, -86.4181513776047499234933558975, 486.693559638231774872322224110 };
  adreal<3,DO_HESS_TEST,double> ad1(29907.4381916711313842682247446, g1,h1), ad2(96.8743694568269786510688934426, g2,h2), adresMaple(308.723952056273018193115395219, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 1000000999999.49999950000004167, 9000000000000000000.00000100000, 3000000000000000002.00000000000 };
  double g2  [3] = { 936752127531.650289122582138958, 1.87350653425675480894007325397, 349993.502171292951370403578806 };
  double gres[3] = { -3202554776043305014312938.36790, 3202546983976.98508823264676090, -1196549577011690264.70365824744 };
  double h1  [9] = { -1000000.99999983333316666667500, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, 18000000000000., 9000000000000., 1999999.99999900000000000008333, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { -1494497.81595039611669398835430, 1873508.81344722004400308143779, 349993502171.292950623154670831, 1873508.81344722004400308143779, .17038166885190512663535829978e-6, .699987004344865094700540036570, 349993502171.292950623154670831, .699987004344865094700540036570, -936752.127533144786938532535075 };
  double hres[9] = { .640510955208661002862588081153e31, -3202554776043305026.74443652594, 1196549577009781284675127.35654, -3202554776043305026.74443652594, 5822626.72361930660504619608674, -1196543754412.31697838422058173, 1196549577009781284675127.35654, -1196543754412.31697838422058173, 4096675140809298323.44200947326 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000000001000001.00000, g1,h1), ad2(936752.127532397538030557337017, g2,h2), adresMaple(3202554776045859699.25978334652, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 1000000.99999949999950000004167, -8999999999999.99999900000000000, 2999999999999999999.99999800000 };
  double g2  [3] = { 540302305868.139718895434423393, 1.08060461173400024433663815188, 841470.984807896505905253413655 };
  double gres[3] = { 5552447153042776853.73525972420, -5552447.1530661990927698775079, 14199871239929.7176112908943401 };
  double h1  [9] = { -1.00000099999983333316666667500, .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, -18000000., 9000000000000., -1.99999999999900000000000008333, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { 1.49449781595039611669398835430, 1080604.61173172105387140308887, 841470984807.896505158004505680, 1080604.61173172105387140308887, .108060631485886564918632045660e-5, 1.68294196961807220377023970627, 841470984807.896505158004505680, 1.68294196961807220377023970627, -540302.305868139717400936607443 };
  double hres[9] = { -11104894306085553707470519.4484, 5552447153042.7768537352597241, -14199871239929717653.4507881431, 5552447153042.7768537352597241, .175022822641743156772362e-4, 14199871.2400495180769383664472, -14199871239929717653.4507881431, 14199871.2400495180769383664472, -49782425469385.8302818879541756 };
  adreal<3,DO_HESS_TEST,double> ad1(-2999999999999999998.99999900000, g1,h1), ad2(540302.305868139718148185515418, g2,h2), adresMaple(-5552447153042.77684420529656140, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 999999.999999500001000000041667, 9000000.00000099999999999983333, 3000000000000000000.00000000000 };
  double g2  [3] = { 999999999999.499999999998547169, 1.99999999999900000227919054857, -1.00000000000058058224130853973 };
  double gres[3] = { -3000000000001.50000000000095833, 3.00000000000049999316242665421, 3000000000004.50000000000860850 };
  double h1  [9] = { -.999999999999833334333333341667, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, 18.000000, 9000000000000., .199999999999900000000000008333e-5, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 1999999.99999900000455838101380, -1000000.00000132783114928373778, 1999999.99999900000455838101380, .199999999999729687741378569888e-5, -.199999772080920143160365849951e-5, -1000000.00000132783114928373778, -.199999772080920143160365849951e-5, -999999.999999500000000000041667 };
  double hres[9] = { 6000000000003000000.00000091665, -3000000.00000150000000000029159, -3000000000004500000.00000312500, -3000000.00000150000000000029159, .710938143379790741e-17, 3000000.00000449998632485485005, -3000000000004500000.00000312500, 3000000.00000449998632485485005, 9000000.00001798349544789109767 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000.99999999999983333, g1,h1), ad2(999999.999999499999999999294418, g2,h2), adresMaple(3000000.00000250000000000320007, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 1000000.99999949999950000004167, 9000000000000.00000100000000000, 3000000000000000000.00000200000 };
  double g2  [3] = { 540302305868.139715906438791493, 1.08060461173855862526710827790, -841470.984807896507399751229605 };
  double gres[3] = { -5552447153042776853.73525972422, 5552447.1530193546147006419402, 14199871239929.7176956106819461 };
  double h1  [9] = { -1.00000099999983333316666667500, .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, 18000000., 9000000000000., 1.99999999999900000000000008333, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { -1.49449781595039611669398835430, 1080604.61174083781573234334091, -841470984807.896508147000137580, 1080604.61174083781573234334091, .108060290861369322041742597318e-5, -1.68294196961351382283976958025, -841470984807.896508147000137580, -1.68294196961351382283976958025, -540302.305868139717400936607443 };
  double hres[9] = { 11104894306085553707470519.4484, -5552447153042.7768537352597241, -14199871239929717653.4507881431, -5552447153042.7768537352597241, .175022822641743161809432e-4, 14199871.2398099172299632098376, -14199871239929717653.4507881431, 14199871.2398099172299632098376, 49782425469385.8307798434725934 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000000001.00000100000, g1,h1), ad2(540302.305868139716653687699468, g2,h2), adresMaple(5552447153042.77686326522288700, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 1000099.99999949995000000004167, 90000000000000.0000010000000000, 3000000000000000000.00002000000 };
  double g2  [3] = { -839071529076.452467203842107328, -1.67814305813011299986537726557, 544021.110889369812657498753876 };
  double gres[3] = { 35753805200636874326.3908169529, -35753805.2016080639771209429722, -26756747244759.6071362000856577 };
  double h1  [9] = { -1.00009999999983331666666667500, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, 180000000., 9000000000000., 19.9999999999900000000000008333, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { -14.9449781595039611669398835430, -1678143.05810732109521302663549, 544021110889.369811910249845901, -1678143.05810732109521302663549, -.167816008937876704836220031272e-5, 1.08804222178101881727473038671, 544021110889.369811910249845901, 1.08804222178101881727473038671, 839071.529076452452258863947824 };
  double hres[9] = { -71507610401273748652781633.9055, 35753805200636.8743263908169689, 26756747244759607612.0004717918, 35753805200636.8743263908169689, .7257221112823946770902462e-3, -26756747.2462132081942918942177, 26756747244759607612.0004717918, -26756747.2462132081942918942177, -70449858768088.8259847917485147 };
  adreal<3,DO_HESS_TEST,double> ad1(30000000000000000001.0001000000, g1,h1), ad2(-839071.529076452459731353027576, g2,h2), adresMaple(-35753805200636.8740091713550859, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 999999999998.500000000000541667, 9000000.00000099999999999983333, -1.00000000000033333333333331667 };
  double g2  [3] = { -5.29287877108646413508936669476, .497753338656322994800629279695e-5, .349990387355843642313191472831e-6 };
  double gres[3] = { -2690541512043431282.60755617676, -2033639293146.98247972324492759, 147552461934.333097926605436596 };
  double h1  [9] = { -999999.999998833333333333508334, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, -18000000., 9., 1999999.99999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -6229630.89861960892202789922984, 11.8285710281927494698896506640, .349987272540394332508730458882, 11.8285710281927494698896506640, -.194662136348843453912836253844e-4, -.699980153304944274715783090204e-6, .349987272540394332508730458882, -.699980153304944274715783090204e-6, -.936752127533144786938532535075e-6 };
  double hres[9] = { 10450146379986079483606202.8507, 3780007318539350143.29695558900, -643355131218396036.326777849200, 3780007318539350143.29695558900, -9237475345110.77003427226756096, -284688940102.176406838485818746, -643355131218396036.326777849200, -284688940102.176406838485818746, -347504082602.920596429929613262 };
  adreal<3,DO_HESS_TEST,double> ad1(-2000000.00000116666666666649167, g1,h1), ad2(-.217806332177665967407541707984e-5, g2,h2), adresMaple(918246949023.389430888549789060, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 0., -8.99999900000000000016666666667, -3.00000199999999999966666666667 };
  double g2  [3] = { .540308535499038337009858635342, -.108061146277392106432139509825e-5, .841467869992447196848041307680e-6 };
  double gres[3] = { -5552447152858.24539088155016947, -5552406.9069975742779286543853, -14199711.2198774642781696784139 };
  double h1  [9] = { 0., .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, 18., 9., -1.99999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 6.22963089861960892202789922984, -1.08061831381156269384091698161, .841464755176997887043580293731, -1.08061831381156269384091698161, .108062595145416938543683837558e-5, -.168293511857815138378548275990e-5, .841464755176997887043580293731, -.168293511857815138378548275990e-5, -.540302305868139717400936607443e-6 };
  double hres[9] = { 11104894306085551579.8536961588, 5552447152773.9478994237634614, 14199871238535.2960020838066666, 5552447152773.9478994237634614, -135.1029369334392560792230, 14199664.5703671725460534656967, 14199871238535.2960020838066666, 14199664.5703671725460534656967, 49781448.0199324407251331667770 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(.540305420683589027205397621393e-6, g2,h2), adresMaple(5552415.14365047445445106598431, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -.999999999998500000000000541667, .999999999999983333333333334167e-5, -2.99999999999800000000000033333 };
  double g2  [3] = { .999999999993270369101380432745, -.199999999999214896235837056381e-5, -.411481544930963779434728295659e-11 };
  double gres[3] = { 2999999.99999871851788397700091, 2.00000000001188192453737670403, -3000000.00002530370814531433770 };
  double h1  [9] = { .999999999998833333333333508334e-6, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, -.18e-4, 9., .199999999999900000000000008333e-5, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -.622963089861960892202789922984e-5, -1.99999999998529792471674104429, -.722963089861944225536123257151e-5, -1.99999999998529792471674104429, .199999999997766028211004944836e-5, .885103764162918618855002455043e-11, -.722963089861944225536123257151e-5, .885103764162918618855002455043e-11, -.999999999999500000000000041667e-6 };
  double hres[9] = { -6000000000002.66666666668447265, -3000000.00000366007537293429967, 3000000000001.38518455056841763, -3000000.00000366007537293429967, -2.00000000005387976461486973001, 3000000.00002742392444778927982, 3000000000001.38518455056841763, 3000000.00002742392444778927982, -26.6888926961741682945930691753 };
  adreal<3,DO_HESS_TEST,double> ad1(-.399999999999883333333333350833e-5, g1,h1), ad2(.999999999996385184550690237206e-6, g2,h2), adresMaple(-4.00000000001329259513062060977, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 0., 9.00000099999999999983333333333, -2.99999800000000000033333333333 };
  double g2  [3] = { .540296076237241097792014579544, -.108059776069863780528235133153e-5, -.841474099623345816456963335580e-6 };
  double gres[3] = { 5552447152858.24113557430926340, 5552487.3996256443850432211868, -14200031.2627708573717556123181 };
  double h1  [9] = { 0., .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, -18., 9., 1.99999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -6.22963089861960892202789922984, -1.08059090966099617576282944817, -.841477214438795126261424349529, -1.08059090966099617576282944817, .108058327201838948416690805420e-5, .168294882065343464282452652662e-5, -.841477214438795126261424349529, .168294882065343464282452652662e-5, -.540302305868139717400936607443e-6 };
  double hres[9] = { -11104894306085555835.1609376306, -5552447152773.9408524998806348, 14199871238535.2529614831909068, -5552447152773.9408524998806348, -135.1061756686235470420324, 14200077.9136182785247121012193, 14199871238535.2529614831909068, 14200077.9136182785247121012193, -49783402.9428552476658857854531 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(.540299191052690407596475593493e-6, g2,h2), adresMaple(-5552479.16280414643400958184872, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 98.9999999999505000000000041250, 90.0000009999999999998333333333, -2.99998000000000000333333333333 };
  double g2  [3] = { -.839133825385438648348084226816, .167821156852932119971294672923e-5, .544017996073920503600286647901e-6 };
  double gres[3] = { -35753805146990.1798656593981114, -35752450.3811912591778483755167, 26754660.4910455142765746707639 };
  double h1  [9] = { -.989999999999835000000000008250e-4, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, -180., 9., 19.9999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -62.2963089861960892202789922984, 1.67828007890573749490816556281, .544014881258471193795825633952, 1.67828007890573749490816556281, -.167835645533180441086737950255e-5, -.108803537074109799728997344034e-5, .544014881258471193795825633952, -.108803537074109799728997344034e-5, .839071529076452452258863947824e-6 };
  double hres[9] = { 71507610401269765876.7222816669, 35753805139642.7693944717883172, -26756747127152.0662848416366072, 35753805139642.7693944717883172, -6621.2143291114856532436899, -26754565.9765630182250758287297, -26756747127152.0662848416366072, -26754565.9765630182250758287297, 70442891.6220128519355052614872 };
  adreal<3,DO_HESS_TEST,double> ad1(-29.9999010000000000165000000000, g1,h1), ad2(-.839102677230945550303474087320e-6, g2,h2), adresMaple(35752360.0079554406663093169429, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 999999999999.500001000000041667, .999999999999983333333333334167e-5, 1.99999999999966666966666668333 };
  double g2  [3] = { .400000093675346086647812080521e-5, .200000187350625506628957521040e-5, .234999350217195961878431942012e-17 };
  double gres[3] = { -499999531624181967906684.191356, -499999999999973642055281.048353, 412501706421.121848674940945677 };
  double h1  [9] = { -999999.999999833334333333341667, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, 18.000000, .9e-11, 1999999.99999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { 4.00000000000133333333333386668, 4.00000187350825506628957654374, .434999350217262628545098635346e-11, 4.00000187350825506628957654374, .187350825506628957921039840349e-5, .269998700434458590423530630689e-11, .434999350217262628545098635346e-11, .269998700434458590423530630689e-11, -.936752127533144786938532535075e-18 };
  double hres[9] = { 999998594872791633681379416224., 499999999999920929580843990128., -325003494806695785.40537341629, 499999999999920929580843990128., 999999999999833336542828723448., -499999918035902082.622339513023, -325003494806695785.40537341629, -499999918035902082.622339513023, 234187843130.763989420967575517 };
  adreal<3,DO_HESS_TEST,double> ad1(999999.999999833337333333341667, g1,h1), ad2(.200000093675279419981145387187e-11, g2,h2), adresMaple(499999765811827806.926138407129, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 1.00000099999949999950000004167, .999990999999833333333333341667e-6, -.199999999999666666666666668333e-5 };
  double g2  [3] = { -.345969769413319361593239725924e-11, -.91939538826572056519812811844e-12, .284147098480856317331916925497e-17 };
  double gres[3] = { 938651948481624202.324682416128, 431495451243823317.148627031402, 36570576424.75117231548480085 };
  double h1  [9] = { -.100000099999983333316666667500e-5, .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, -.18e-4, .9e-11, -1.99999999999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { -.400000000000133333333333386668e-5, -.291939538826772056519812945178e-5, .484147098480922983998583618831e-11, -.291939538826772056519812945178e-5, .108060461173227943480186788156e-5, .368294196961779301330500597659e-11, .484147098480922983998583618831e-11, .368294196961779301330500597659e-11, -.540302305868139717400936607443e-18 };
  double hres[9] = { -2572181766823104681187069.30386, -243773139981445624337865.85894, 838435960899690014.49539356811, -243773139981445624337865.85894, -1050713467316989301230851.24576, -911578447319559236.953013661330, 838435960899690014.49539356811, -911578447319559236.953013661330, -974191065246.546427168177288188 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000099999683333316666667500e-5, g1,h1), ad2(-.145969769413252694926573032590e-17, g2,h2), adresMaple(-685074042396.920139483800029464, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { .100000099999949999950000004167e-5, .100000000000883333333333334167e-5, .200000299999966666666666668333e-11 };
  double g2  [3] = { .100000399999950000133333337500e-11, .200000199999900000200000008333e-11, .199999900000066666683333360001e-17 };
  double gres[3] = { -1999997.333351333269966863, -999998000003.333314666730299802, 5.99997533341549974909515 };
  double h1  [9] = { -.100000099999983333316666667500e-11, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, .18e-10, .9e-11, .199999999999900000000000008333e-5, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { .400000000000133333333333386668e-11, .200000399999900000400000008333e-5, .399999900000133333350000053335e-11, .200000399999900000400000008333e-5, .199999999999900000400000008334e-5, .199999800000200000033333466666e-11, .399999900000133333350000053335e-11, .199999800000200000033333466666e-11, -.999999999999500000000000041667e-18 };
  double hres[9] = { 13666628.33349159941699017, 3999979333399.99975696753, -1999993000046.33312183415694708, 3999979333399.99975696753, 1999994000024666578.66697893230, -3999960.00019649922570267, -1999993000046.33312183415694708, -3999960.00019649922570267, 1999996999981.66681599929660272 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000100000283333316666667500e-11, g1,h1), ad2(.100000199999950000066666670833e-17, g2,h2), adresMaple(999999.000005333321333360633273, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 1.00000099999949999950000004167, .100000899999983333333333334167e-5, .200000000000266666666666668333e-5 };
  double g2  [3] = { .454030230586947305073427047412e-11, .308060461173827943480187454822e-11, .115852901519277016001416461171e-17 };
  double gres[3] = { -309927151758133436.694110854344, -477381112844849091.438204914414, 607778071996.784844248092313332 };
  double h1  [9] = { -.100000099999983333316666667500e-5, .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, .18e-4, .9e-11, 1.99999999999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { .400000000000133333333333386668e-5, .508060461174027943480187588156e-5, .315852901519343682668083154505e-11, .508060461174027943480187588156e-5, .108060461174027943480187854822e-5, .31705803038620698669499669007e-12, .315852901519343682668083154505e-11, .31705803038620698669499669007e-12, -.540302305868139717400936607443e-18 };
  double hres[9] = { 488016172002261787322325.194478, 441764973341034807759982.350744, -647090387845315619.368679064760, 441764973341034807759982.350744, 990378281470680706524374.451703, -568465935677222732.461082133041, -647090387845315619.368679064760, -568465935677222732.461082133041, 316669113543.074912224113432999 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000100000283333316666667500e-5, g1,h1), ad2(.254030230586880638406760354078e-17, g2,h2), adresMaple(393654329129.471044944445162056, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 100.000000999949999999500004167, .100008999999983333333333334167e-5, .199999999999996666666666668333e-4 };
  double g2  [3] = { .391609284709368808810744747190e-10, .183218569418670950954822854376e-10, .254402111089003648007141459519e-17 };
  double gres[3] = { -5447495758227528004.78809751444, -4990411846484703146.74513879718, 350863544731.802325282958180240 };
  double h1  [9] = { -.100000000999983333333166667500e-3, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, .180e-3, .9e-11, 19.9999999999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { .400000000000133333333333386668e-4, .383218569418870950954822987710e-4, .454402111089070314673808152853e-11, .383218569418870950954822987710e-4, -.167814305811290490451767456232e-5, .308804222178073962680949665703e-11, .454402111089070314673808152853e-11, .308804222178073962680949665703e-11, .839071529076452452258863947824e-18 };
  double hres[9] = { 11372091423428915866362240.5206, 4970395796774597500630914.2344, -187706683764980191.16688198265, 4970395796774597500630914.2344, 10000839744969044824281600.9298, -514020412628241206.704765899386, -187706683764980191.16688198265, -514020412628241206.704765899386, -217332062223.065586199142119785 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000001000013333333166667500e-3, g1,h1), ad2(.191609284709302142144078053856e-16, g2,h2), adresMaple(5218953828449.76448563531752029, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 1000000000000.49999999999954167, 9000000.00000099999999999983333, 4.99999999999966666666666668333 };
  double g2  [3] = { 7.16638302615275370896643176492, .872454189669580909576042293725e-5, .349996616986742261922113500731e-6 };
  double gres[3] = { -1499461766112675620.86605616956, 95395768619.54761067904398877, -85284749782.5937679607902213664 };
  double h1  [9] = { -1000000.00000083333333333317500, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, 18000000., 9., 1999999.99999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 6229630.89861960892202789922984, 15.5755795383253286176437808044, .349999731802191571726574514680, 15.5755795383253286176437808044, .232132221450169245390377555246e-4, .699993855380227533754826856920e-6, .349999731802191571726574514680, .699993855380227533754826856920e-6, -.936752127533144786938532535075e-6 };
  double hres[9] = { 3786458712217250557965678.85598, -735236942724243064.62391686318, 195096517950467360.350639755154, -735236942724243064.62391686318, -1624639681009.68404257076009315, 4839289590.920774897299104764, 195096517950467360.350639755154, 4839289590.920774897299104764, 242999297146.484410135160136443 };
  adreal<3,DO_HESS_TEST,double> ad1(4000000.00000083333333333317500, g1,h1), ad2(.405156757684294924795248215000e-5, g2,h2), adresMaple(987272191352.094328762760887797, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 1.99999999999900000000000008333, -8.99999900000000000016666666667, 2.99999800000000000033333333333 };
  double g2  [3] = { .540296076237241097792014579544, .108059776069863780528235133153e-5, .841474099623345816456963335580e-6 };
  double gres[3] = { 5552447152879.58109827728707185, -5552491.1012741622571170024669, 14200025.4977336562930590252560 };
  double h1  [9] = { -.199999999999966666666666668333e-5, .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, -18., 9., -1.99999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -6.22963089861960892202789922984, 1.08059090966099617576282944817, .841477214438795126261424349529, 1.08059090966099617576282944817, .108058327201838948416690805420e-5, .168294882065343464282452652662e-5, .841477214438795126261424349529, .168294882065343464282452652662e-5, -.540302305868139717400936607443e-6 };
  double hres[9] = { -11104894306085555590.3457934408, 5552447152756.8582689573351530, -14199871238623.0636021043483296, 5552447152756.8582689573351530, -127.7027921412215721619884, 14200083.6786379613503140330148, -14199871238623.0636021043483296, 14200083.6786379613503140330148, -49783381.2839842001071937668677 };
  adreal<3,DO_HESS_TEST,double> ad1(-2.99999800000000000033333333333, g1,h1), ad2(.540299191052690407596475593493e-6, g2,h2), adresMaple(-5552475.46115137123186223463819, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 1.00000000000049999999999954167, .999999999999983333333333334167e-5, 3.00000000000199999999999966667 };
  double g2  [3] = { 1.00000000000572963089861965059, .200000000000585103764162960285e-5, .211481544930997112768061627325e-11 };
  double gres[3] = { -3000000.00000494814878260039129, 1.99999999999045140879603860647, 2999999.99998569629185488800239 };
  double h1  [9] = { -.100000000000083333333333317500e-5, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, .18e-4, 9., .199999999999900000000000008333e-5, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { .622963089861960892202789922984e-5, 2.00000000001270207528325912237, .522963089861977558869456588817e-5, 2.00000000001270207528325912237, .200000000002033971788995071830e-5, .485103764162985285521669118377e-11, .522963089861977558869456588817e-5, .485103764162985285521669118377e-11, -.999999999999500000000000041667e-6 };
  double hres[9] = { 6000000000002.66666666669003561, -2999999.99999867325796033068508, -3000000000007.61481544920493396, -2999999.99999867325796033068508, 1.99999999994745356871911160250, 2999999.99997957607555247028017, -3000000000007.61481544920493396, 2999999.99997957607555247028017, -6.68889269579379640198576216649 };
  adreal<3,DO_HESS_TEST,double> ad1(.400000000000083333333333317500e-5, g1,h1), ad2(.100000000000261481544930984613e-5, g2,h2), adresMaple(3.99999999999037407153611896051, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 1.99999999999900000000000008333, 9.00000099999999999983333333333, 3.00000199999999999966666666667 };
  double g2  [3] = { .540308535499038337009858635342, .108061146277392106432139509825e-5, -.841467869992447196848041307680e-6 };
  double gres[3] = { -5552447152879.58486396270759849, 5552403.2053832212796610915838, 14199716.9847390473551382397185 };
  double h1  [9] = { -.199999999999966666666666668333e-5, .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, 18., 9., 1.99999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 6.22963089861960892202789922984, 1.08061831381156269384091698161, -.841464755176997887043580293731, 1.08061831381156269384091698161, .108062595145416938543683837558e-5, -.168293511857815138378548275990e-5, -.841464755176997887043580293731, -.168293511857815138378548275990e-5, -.540302305868139717400936607443e-6 };
  double hres[9] = { 11104894306085551824.6603724135, -5552447152756.8656091589628520, -14199871238623.1033632167997388, -5552447152756.8656091589628520, -127.6997947170865060173457, 14199658.8054880718710159944499, -14199871238623.1033632167997388, 14199658.8054880718710159944499, 49781469.6778311336317839770781 };
  adreal<3,DO_HESS_TEST,double> ad1(3.00000199999999999966666666667, g1,h1), ad2(.540305420683589027205397621393e-6, g2,h2), adresMaple(5552418.84526057022081710060240, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 100.999999999949500000000004208, 90.0000009999999999998333333333, 3.00001999999999999666666666667 };
  double g2  [3] = { -.839009232767466256169643668832, -.167807454777648860932250906207e-5, .544024225704819123209208675801e-6 };
  double gres[3] = { 35753805146893.7229391918890531, -35755157.7584234993939266230345, -26758835.7792602521646601812657 };
  double h1  [9] = { -.100999999999983166666666667508e-3, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, 180., 9., 19.9999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 62.2963089861960892202789922984, -1.67800603740007231412729022849, .544027340520268433013669689750, -1.67800603740007231412729022849, -.167792966097400539816807628875e-5, .108804907281638125632901720706e-5, .544027340520268433013669689750, .108804907281638125632901720706e-5, .839071529076452452258863947824e-6 };
  double hres[9] = { -71507610401277738885.4023372841, 35753805139702.9574830910228169, 26756747127005.0378975834600504, 35753805139702.9574830910228169, -6626.9486596507360393918131, -26758927.2515995961204116162396, 26756747127005.0378975834600504, -26758927.2515995961204116162396, -70456831.2627949837235088603065 };
  adreal<3,DO_HESS_TEST,double> ad1(30.0001009999999999831666666667, g1,h1), ad2(-.839040380921959354214253808328e-6, g2,h2), adresMaple(-35755252.8842951636299012948135, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 1000000000009.49999999999504167, 900000000.000000999999999999833, 3001.99999999999966666666666668 };
  double g2  [3] = { 96.2686560631508253788897532395, .215757860758297588525611453364e-4, .349993515138509501299385911963e-4 };
  double gres[3] = { -32019721180087853038.0147712485, 2297845797260.94308026258543416, -11644859322973.6114874037389828 };
  double h1  [9] = { -1000000.00000983333333333167500, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, 180000000., 900., 1999999.99999900000000000008333, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { 2593443.30983634668503649973204, 24.4165296009966219663516399713, 34.9993528105726050481119337146, 24.4165296009966219663516399713, .555715790021874991452260024676e-5, .699987288416938420921616352611e-5, 34.9993528105726050481119337146, .699987288416938420921616352611e-5, -.936752127533144786938532535075e-4 };
  double hres[9] = { 64050936411694427998760474.4828, -3178761446695883264.13512950255, 11958970661301546178.9140297756, -3178761446695883264.13512950255, -997718214922.77731765747205049, -530292076213.97725204246055980, 11958970661301546178.9140297756, -530292076213.97725204246055980, 39750166334779.3948898816996920 };
  adreal<3,DO_HESS_TEST,double> ad1(3001000000.00000983333333333168, g1,h1), ad2(.949719344082326520363715033735e-4, g2,h2), adresMaple(31598808834411.4830984826374602, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 10.9999999999945000000000004583, -899.999999000000000000166666667, 2999.99999800000000000033333333 };
  double g2  [3] = { 54.0302279933706619037469757078, .108060432766192691811556183584e-4, .841470997775113055834235746812e-4 };
  double gres[3] = { 55524471530427.7414415180587162, -5552449.9613004769453680509733, 141998718.861126675269845527373 };
  double h1  [9] = { -.109999999999981666666666667583e-4, .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, -180., 900., -1.99999999999900000000000008333, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { -2.59344330983634668503649973204, 10.8060404358757440142925045679, 84.1471010742329605015969171995, 10.8060404358757440142925045679, .108060092808263428234153256935e-5, .168294225369014552999131602231e-4, 84.1471010742329605015969171995, .168294225369014552999131602231e-4, -.540302305868139717400936607443e-4 };
  double hres[9] = { -111048943060855537074.774358324, 5552447153042.6555158921473885, -141998712399296.952156017431206, 5552447153042.6555158921473885, -3.22350618891360987060827, 14199885.5320439184500218998526, -141998712399296.952156017431206, 14199885.5320439184500218998526, -497824294.676907418605329610032 };
  adreal<3,DO_HESS_TEST,double> ad1(-2999.99998900000000000183333333, g1,h1), ad2(.540302292900923168219203182261e-4, g2,h2), adresMaple(-55524472.6594213969723302269938, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 9.99999999999599999999999991667, .900999999999999833333333333342e-3, 3000.00000000000199999999999967 };
  double g2  [3] = { 99.9999999999525934433098405134, .199999999999928407435251676964e-4, -.987032783450651599908150843007e-10 };
  double gres[3] = { -30000000.0000150346300549945139, 2.99000000000067889353173528959, 30000000.0000443406702854239663 };
  double h1  [9] = { -.999999999999933333333333325000e-5, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, .180e-3, 900., .199999999999900000000000008333e-5, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { .259344330983634668503649973204e-5, 19.9999999999956814870503345595, -.974065566901469866482968344347e-4, 19.9999999999956814870503345595, .200000000000268365364515254367e-5, -.171592564748298035528761721984e-10, -.974065566901469866482968344347e-4, -.171592564748298035528761721984e-10, -.999999999999500000000000041667e-4 };
  double hres[9] = { 60000000000029.9666666666791580, -3000000.00000149911839369596182, -30000000000045.0012967216861966, -3000000.00000149911839369596182, .1999999999056700040571909472e-2, 3000000.00000285690545716619708, -30000000000045.0012967216861966, 3000000.00000285690545716619708, 89.3419670071697395385651685785 };
  adreal<3,DO_HESS_TEST,double> ad1(.300999999999999933333333333325e-2, g1,h1), ad2(.999999999999512967216549223400e-4, g2,h2), adresMaple(30.1000000000146530201152088446, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 10.9999999999945000000000004583, 900.000000999999999999833333333, 3000.00000199999999999966666667 };
  double g2  [3] = { 54.0302331802572815764403457808, .108060489581063195148818459394e-4, -.841470971840679957470768896448e-4 };
  double gres[3] = { -55524471530427.7414416563863880, 5552444.3447853194377866730560, 141998705.937468126555886884349 };
  double h1  [9] = { -.109999999999981666666666667583e-4, .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, 180., 900., 1.99999999999900000000000008333, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { 2.59344330983634668503649973204, 10.8060517988498446817449597299, -84.1470958873463408289035471265, 10.8060517988498446817449597299, .108060829538992458726221386043e-5, -.168294168554144049661869326421e-4, -84.1470958873463408289035471265, -.168294168554144049661869326421e-4, -.540302305868139717400936607443e-4 };
  double hres[9] = { 111048943060855537074.636030653, -5552447153042.6555158941674719, -141998712399296.952156281682780, -5552447153042.6555158941674719, -3.22350538779743679564199, 14199856.9478174409498174626868, -141998712399296.952156281682780, 14199856.9478174409498174626868, 497824214.710813183512144385877 };
  adreal<3,DO_HESS_TEST,double> ad1(3000.00001099999999999816666667, g1,h1), ad2(.540302318835356266582670032625e-4, g2,h2), adresMaple(55524470.4014341942939057168663, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 109.999999999945000000000004583, 9000.00000099999999999983333333, 3000.00001999999999999666666667 };
  double g2  [3] = { -83.9071269732121468624195444174, -.167814021740937973765461410516e-4, .544021123856586362586481087033e-4 };
  double gres[3] = { 357538052006360.001448089209886, -35753920.4722716236501027193044, -267567556.237020413853191716503 };
  double h1  [9] = { -.109999999999981666666666667583e-3, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, 1800., 900., 19.9999999999900000000000008333, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { 25.9344330983634668503649973204, -16.7813737666585457079150031466, 54.4021136823802911768214512216, -16.7813737666585457079150031466, -.167810622161645337991432144030e-5, .108804250585309214349580670275e-4, 54.4021136823802911768214512216, .108804250585309214349580670275e-4, .839071529076452452258863947824e-4 };
  double hres[9] = { -715076104012737486530.081311631, 35753805200601.6575232003418894, 267567472447576.585062020343366, 35753805200601.6575232003418894, -133.93435390749381622971467, -26756919.9389908003209011699455, 267567472447576.585062020343366, -26756919.9389908003209011699455, -704498870.067158035151704321089 };
  adreal<3,DO_HESS_TEST,double> ad1(30000.0001099999999999816666667, g1,h1), ad2(-.839071399404286960441529695999e-4, g2,h2), adresMaple(-357538108.572155019722185144710, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 540302846170.445585540654008380, 9000000000000000000.84147098481, 3000000000001682941.96961579301 };
  double g2  [3] = { 936750633035.328836542415841087, 4152694.72030135258206088432226, 349993502170.545703209677288723 };
  double gres[3] = { -3202554776041.58863792233968223, -4589523.97538058861101931783430, -1196551485992.03077967524673364 };
  double h1  [9] = { -841471826278.881314549008974132, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18000000000000., 9000000000000., 1080604.61173627943480187321489, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { -1494497.81595039611669398835430, 6431885.18553641559024470357437, 349993502169.798454301702090664, 6431885.18553641559024470357437, -1703120.71271012938095213289330, 699989.283533051139298313157381, 349993502169.798454301702090664, 699989.283533051139298313157381, -936752127533.144786938532535075 };
  double hres[9] = { 6405109552086.35475139226874728, -3202567.2075673380302416050586, 1196549577007.61720547408946987, -3202567.2075673380302416050586, 5822673.93055463297745895447589, 4626061.82139895735467459874832, 1196549577007.61720547408946987, 4626061.82139895735467459874832, 4096682389902.99076923217949529 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000841471826278.88131, g1,h1), ad2(936751380284.236811740474188081, g2,h2), adresMaple(3202557330730.12050083498792311, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 540302.846170445585540654008380, -8999999999999.15852901519210349, 2999999999999999998.31705803038 };
  double g2  [3] = { 540302305869.634215216887003560, 1080602.33254581419973886503107, 841470984807.149257744527123572 };
  double gres[3] = { 5552447.15304221944545318509388, -5.5524705752815179915826695190, 14199871.2398880147165664689395 };
  double h1  [9] = { -841471.826278881314549008974132, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -18000000., 9000000000000., -1.08060461173627943480187321489, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { 1.49449781595039611669398835430, 1080600.05335534896467585684725, 841470984806.402008836551925513, 1080600.05335534896467585684725, 2.78372719795066388204357998526, 1682944.24880625824836801282708, 841470984806.402008836551925513, 1682944.24880625824836801282708, -540302305868.139717400936607443 };
  double hres[9] = { -11104894.3060859963001884546677, 5.5524471530433343315799566593, -14199871.2399288495403716145672, 5.5524471530433343315799566593, .175022822639228007223506156805e-4, 14.1999910403527477497007461045, -14199871.2399288495403716145672, 14.1999910403527477497007461045, -49782425.4691385695170003787147 };
  adreal<3,DO_HESS_TEST,double> ad1(-2999999999999158528.17372111869, g1,h1), ad2(540302305868.886966308911805501, g2,h2), adresMaple(-5552447.15303354029885890291950, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 540302.305868139717941238913311, 9000000.84147098480789650665250, 3000000000000000000.00000168294 };
  double g2  [3] = { 999999999999.499998505502225717, 2000000.00000127919046523514634, -1000000.74724874130853139168866 };
  double gres[3] = { -3.00000030117017893990737411346, .299999915852367761612742351491e-5, 3000000.00000450000532496986940 };
  double h1  [9] = { -841470.984807896507493973306438, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, 18.000000, 9000000000000., .108060461173627943480187321489e-5, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 2000000.00000355838093047020935, -1000001.49449764928372945003566, 2000000.00000355838093047020935, 1.99999829687641378561555284162, .27919046523539634151715256878, -1000001.49449764928372945003566, .27919046523539634151715256878, -999999999999.500000000000041667 };
  double hres[9] = { 5.99999976086937307149750541922, -.299999969883282106132407950680e-5, -3000000.00000450000030117200252, -.299999969883282106132407950680e-5, .679232483655191927036815e-17, 2.99999999999082484996572306639, -3000000.00000450000030117200252, 2.99999999999082484996572306639, 9.00000532497861563005914022404 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000841470.98480789650749397, g1,h1), ad2(999999999999.499999252751133692, g2,h2), adresMaple(3.00000084147248481055899096409, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 540302.846170445585540654008380, 9000000000000.84147098480789651, 3000000000000000001.68294196962 };
  double g2  [3] = { 540302305866.645219584986211326, 1080606.89092674466986488139871, -841470984808.643755560477519688 };
  double gres[3] = { -5552447.15304333426201731034765, 5.5524237308040355731746928214, 14199871.2399714205903352880370 };
  double h1  [9] = { -841471.826278881314549008974132, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 18000000., 9000000000000., 1.08060461173627943480187321489, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { -1.49449781595039611669398835430, 1080609.17011720990492788958253, -841470984809.391004468452717747, 1080609.17011720990492788958253, -.62251797447810501243983355548, -1682939.69042532777824199645944, -841470984809.391004468452717747, -1682939.69042532777824199645944, -540302305868.139717400936607443 };
  double hres[9] = { 11104894.3060851111147525799213, -5.5524471530422195139010159569, -14199871.2399305857665297873729, -5.5524471530422195139010159569, .175022822644246575003379640903e-4, 14.1997514395066865090159713971, -14199871.2399305857665297873729, 14.1997514395066865090159713971, 49782425.4696330915447325510579 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000841471.82627888131, g1,h1), ad2(540302305867.392468492961409385, g2,h2), adresMaple(5552447.15305201340861164207757, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 540356.336098726531372676701104, 90000000000000.8414709848078965, 3000000000000000016.82941969616 };
  double g2  [3] = { -839071529091.397430418367908991, -1678120.26624825255388764605746, 544021110888.622564496772463793 };
  double gres[3] = { 35753805.2006372332931570527950, -35.7547763902877761531285870242, -26756747.2442836847125363328030 };
  double h1  [9] = { -841555.131906377296303167571862, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 180000000., 9000000000000., 10.8060461173627943480187321489, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { -14.9449781595039611669398835430, -1678097.47434360020325756421926, 544021110887.875315588797265734, -1678097.47434360020325756421926, -18.7093689202967493769347955994, 1088044.50096920486187250350752, 544021110887.875315588797265734, 1088044.50096920486187250350752, 839071529076.452452258863947824 };
  double hres[9] = { -71507610.4012734636263780484849, 35.7538052006365326044159086676, 26756747.2447598403591641528194, 35.7538052006365326044159086676, .725722111216728029368711358619e-3, -26.7582008453419827660411306211, 26756747.2447598403591641528194, -26.7582008453419827660411306211, -70449858.7664792195632084953434 };
  adreal<3,DO_HESS_TEST,double> ad1(30000000000000841555.1319063773, g1,h1), ad2(-839071529083.924941338615928407, g2,h2), adresMaple(-35753805.2003194659117825866279, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 540302305867.599415095068467726, 9000000.84147098480789650665250, 1682938.96961579301330500464326 };
  double g2  [3] = { -6229629.96186748138888311229131, 6851035.76812526445559378399003, -2.76482194713851150889629712814 };
  double gres[3] = { 366838.510673336182607899492999, -594198.518789309596395360798195, -.300506359991928685695803871458 };
  double h1  [9] = { -841470984807.055035667694425123, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, -18000000., 9., 1080604.61173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -6229630.89861960892202789922984, 13702073.4097547839774771418571, -5.87963739644831596991024674306, 13702073.4097547839774771418571, -21339716.0164463798988711165774, 6.15105063728693361764805289354, -5.87963739644831596991024674306, 6.15105063728693361764805289354, -.936752127533144786938532535075 };
  double hres[9] = { -656902.324590085002551899664068, 806867.24622176908679804457635, .438414961018835805211433760427, 806867.24622176908679804457635, -763063.91145971106239443352480, -.667020043606480903669778486805, .438414961018835805211433760427, -.667020043606480903669778486805, .812452294932477080772299842791e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(841467984807.055035667694425123, g1,h1), ad2(-3114814.51255767692786916267639, g2,h2), adresMaple(-270150.271040087687395183388436, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 0., -8.15852901519210349334749767837, -4.68294196961579301330500464326 };
  double g2  [3] = { 6.76993320448774863942883583728, -7.93164225336579895668523108199, -2.27334446450190795436144729329 };
  double gres[3] = { -1.52020757595491188004366246532, -.45101115292196208413801632060, -.770715490910467604497467362494 };
  double h1  [9] = { 0., .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., -1.08060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, -14.7826798949953184785685889491, -5.38815991381171241537539690821, -14.7826798949953184785685889491, 22.4203225016869143999625636694, 5.16809567201372650857835322384, -5.38815991381171241537539690821, 5.16809567201372650857835322384, -.540302305868139717400936607443 };
  double hres[9] = { 4.23251263671837136103754982469, 1.00380096556002989751833621954, 1.39627679395495365885863367014, 1.00380096556002989751833621954, -2.06734211244844178287737718445, -.65118164500754942971909528838, 1.39627679395495365885863367014, -.65118164500754942971909528838, -.376950734568144315724570454428 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(3.65511775517794417841488622236, g2,h2), adresMaple(.820766990543632784328080990898, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -.540302305867599415095068467726, .841479984807896506652502321630, -2.99999831705803038420698669500 };
  double g2  [3] = { .999993770368601380391078013768, -1.99999314896135837048047819997, -3.11481644930980446084728294825 };
  double gres[3] = { .301169995984230425835015794807, -.841470082931411785081938852101, -5.62106099924507702905879620172 };
  double h1  [9] = { .841470984807055035667694425123, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, -.18e-4, 9., .108060461173627943480187321489e-5, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -.622963089861960892202789922984e-5, -1.99998629792371674096095631661, -6.22963189861960892186123256317, -1.99998629792371674096095631661, 1.99997866028111004936503492264, 6.85103964162951952155002453377, -6.22963189861960892186123256317, 6.85103964162951952155002453377, -.999999999999500000000000041667 };
  double hres[9] = { .239130247952766800714087713892, .30116433173677452660183468376, 1.31703091679416590561032299627, .30116433173677452660183468376, -1.68295678910879349847020540531, .90188404909652706854794767707, 1.31703091679416590561032299627, .90188404909652706854794767707, -34.1757876135686776998189573142 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841473984807055035667694425123, g1,h1), ad2(.999996885184050690195539027717, g2,h2), adresMaple(-.841476605851807913958921605496, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 0., 9.84147098480789650665250232163, -1.31705803038420698669499535674 };
  double g2  [3] = { -5.68932859275146920462696262240, 5.77043302989324008708148465221, -3.95628643411770096766645193655 };
  double gres[3] = { -2.57508782575154555774201898608, -1.21085614369106912756128490336, -1.27910761205855802566670952612 };
  double h1  [9] = { 0., .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, -18., 9., 1.08060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -6.22963089861960892202789922984, 12.6214706715227596089648425193, -7.07110188342750542868040155147, 12.6214706715227596089648425193, -20.2591132782143555303588172396, 8.53397961124531253518836251036, -7.07110188342750542868040155147, 8.53397961124531253518836251036, -.540302305868139717400936607443 };
  double hres[9] = { 8.56155919891517789042761218621, 2.40693705809166347219379279011, 3.16359196252918391065749830223, 2.40693705809166347219379279011, -7.60595939855228365695527046312, -.63939482134019939419025080143, 3.16359196252918391065749830223, -.63939482134019939419025080143, 3.03299782488567612379366419904 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(-2.57451314344166474361301300748, g2,h2), adresMaple(1.16526886166505844362375214373, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 53.4899282809458320226927241369, 90.8414709848078965066525023216, 13.8294196961579301330500464326 };
  double g2  [3] = { -63.1353805152725416725378562462, 70.1885194744481001233513065666, -2.57079433842043464760920195307 };
  double gres[3] = { 1.61699055818185179429859086248, -6.49660143987546606252174556287, -.298409061756214883291967496638 };
  double h1  [9] = { -83.3056274959817541585977298414, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, -180., 9., 10.8060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -62.2963089861960892202789922984, 138.698895890743295342184885238, -5.68560978773023910862315156799, 138.698895890743295342184885238, -215.075321957659254556124632441, 5.76299541985077989507386254340, -5.68560978773023910862315156799, 5.76299541985077989507386254340, .839071529076452452258863947824 };
  double hres[9] = { -.53328520461646418114093074412, 9.12808969248509503573255324417, .417418168100410413105673647220, 9.12808969248509503573255324417, -11.6783475425546876747215069794, -.714263264749128551209866465849, .417418168100410413105673647220, -.714263264749128551209866465849, -.483608539947676217343579501385e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(53.3056274959817541585977298414, g1,h1), ad2(-31.9872260221744970623983600970, g2,h2), adresMaple(-1.66646609052715939574181125290, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 540302305868.139717941238913311, .841479984807896506652502321630, 1682941.96961579301330500764326 };
  double g2  [3] = { 4.00000000000227008546086701147, 2000000.00000387350425506762290, .200000034999416883795961905099e-5 };
  double gres[3] = { -571319831873.171553611575619817, -420735492404088498.490382483226, 420735.418776463770748800129742 };
  double h1  [9] = { -841470984807.896507493973306438, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18.000000, .9e-11, 1080604.61173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { 4.00000000000133333333333386668, 4000000.00000587350425506895624, .400000034999483550462628598433e-5, 4000000.00000587350425506895624, 5.87350425507162290721040293683, 2.00000069998900434258590556863, .400000034999483550462628598433e-5, 2.00000069998900434258590556863, -.936752127533144786938532535075e-12 };
  double hres[9] = { 1023072850281.71231579882880950, 571319831874017087.895985068733, -571319.658267177561956018364676, 571319831874017087.895985068733, 841470984807896506652505.528268, -420735492404.088498323245640524, -571319.658267177561956018364676, -420735492404.088498323245640524, .197062433818761698360883699000 };
  adreal<3,DO_HESS_TEST,double> ad1(841470984807.896507493976306438, g1,h1), ad2(2.00000000000160341879420007813, g2,h2), adresMaple(420735492403.610946149034666221, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380, .841470984798896506652502321630, -1.68294196961579301030500464326 };
  double g2  [3] = { -.399999945969902746519361646574e-5, -1.99999891939738826372056653146, .200000084147165147456317358584e-5 };
  double gres[3] = { 571320.671198728819316384705160, 420735492403.944133697544470719, 420734.894649430343731258215122 };
  double h1  [9] = { -.841471826278881314549008974132, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -.18e-4, .9e-11, -1.08060461173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { -.400000000000133333333333386668e-5, -3.99999891939938826372056786480, .400000084147231814122984051918e-5, -3.99999891939938826372056786480, 1.08060061173627942946853988155, 2.00000168294396961579301463833, .400000084147231814122984051918e-5, 2.00000168294396961579301463833, -.540302305868139717400936607443e-12 };
  double hres[9] = { -1023074.68575129845629332591453, -571319831873.645981667620483373, -571318.843159541309583641851855, -571319831873.645981667620483373, -841470984807896503.298461801747, -420735492404.619190565041453203, -571318.843159541309583641851855, -420735492404.619190565041453203, -.727810423082781585643634541659 };
  adreal<3,DO_HESS_TEST,double> ad1(.841471826278881311549008974132, g1,h1), ad2(-.199999945969836079852694953240e-5, g2,h2), adresMaple(-420736.026801623131790442851081, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380e-6, .841470984807896515652502321630, .168294196961879301330500464326e-5 };
  double g2  [3] = { .500000000000083333333333390835e-11, .400000000000100000000000141666e-5, .199999999999966666666666710001e-5 };
  double gres[3] = { -287383.399209265958196823409333, -93497150076.938161416732998047, -186993178192.376254961281746125 };
  double h1  [9] = { -.841471826278881314549008974132e-6, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .18e-10, .9e-11, .108060461173627943480187321489e-5, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-11, .600000000000300000000000275000e-5, .400000000000033333333333403335e-5, .600000000000300000000000275000e-5, 2.00000000000300000000000541666, 2.00000000000000000000000166666, .400000000000033333333333403335e-5, 2.00000000000000000000000166666, -.999999999999500000000000041667e-12 };
  double hres[9] = { 303466.576925128860785928718069, 158126000177.240896858253992459, 129257111648.841276262588467480, 158126000177.240896858253992459, 62331994365205799.021955490718, 124661931801431118.691771841910, 129257111648.841276262588467480, 124661931801431118.691771841910, 249324798570529636.665003280064 };
  adreal<3,DO_HESS_TEST,double> ad1(.841471826278881317549008974132e-6, g1,h1), ad2(.300000000000016666666666697501e-11, g2,h2), adresMaple(280490.608759611523038071873019, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { .540302846170445585540654008380, .841470984816896506652502321630, 1.68294196961579301630500464326 };
  double g2  [3] = { .400000054030363920147305126762e-5, 2.00000108060661173627943613520, .199999915852968185877016028084e-5 };
  double gres[3] = { -571320.135188413559775300612899, -420735492404.171451784332355186, 420735.248686948165814075278878 };
  double h1  [9] = { -.841471826278881314549008974132, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, .18e-4, .9e-11, 1.08060461173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-5, 4.00000108060861173627943746854, .399999915853034852543682721418e-5, 4.00000108060861173627943746854, 1.08060861173627944013520654823, 1.99999831706003038420698802833, .399999915853034852543682721418e-5, 1.99999831706003038420698802833, -.540302305868139717400936607443e-12 };
  double hres[9] = { 1023073.06096149509548508631755, 571319831874.181978876795743171, -571319.677947218818775100770336, 571319831874.181978876795743171, 841470984807896509.568380742557, -420735492403.810505393150846163, -571319.677947218818775100770336, -420735492403.810505393150846163, .955132227019829108038076554663 };
  adreal<3,DO_HESS_TEST,double> ad1(.841471826278881317549008974132, g1,h1), ad2(.200000054030297253480638433428e-5, g2,h2), adresMaple(420735.799477039104148271782148, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 54.0302311271162776082333781452, .841470984897896506652502321630, 16.8294196961579301360500464326 };
  double g2  [3] = { .399999991609418042568808864079e-4, 19.9999983218769418470951088156, .200000054402177755603648033809e-5 };
  double gres[3] = { -5713198.79207106323385721560106, -4207354924040.87581165437921122, 420735.373751946259387088883068 };
  double h1  [9] = { -84.1470993222606354731467388155, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, .180e-3, .9e-11, 10.8060461173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-4, 39.9999983218969418470951221490, .400000054402244422270314727143e-5, 39.9999983218969418470951221490, -1.67810305815290485118439456227, 2.00000108804422177873962814283, .400000054402244422270314727143e-5, 2.00000108804422177873962814283, .839071529076452452258863947824e-12 };
  double hres[9] = { 10230729.8667596366829611753397, 5713198318740.14184495527407374, -571319.556310879838219765482467, 5713198318740.14184495527407374, 8414709848078965069.26239197160, -420735492404.100339058045131173, -571319.556310879838219765482467, -420735492404.100339058045131173, -.175672123206662339988007809967 };
  adreal<3,DO_HESS_TEST,double> ad1(84.1470993222606355031467388155, g1,h1), ad2(.199999991609351375902142170745e-4, g2,h2), adresMaple(4207355.14262522496795428827187, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 540302305868.680019706804747160, 9000000.84147098480789650665250, 1682944.96961579301330500464326 };
  double g2  [3] = { 6229631.83537173645517268616837, 6851039.51513377458817293174417, 3.46480895148109741313160210170 };
  double gres[3] = { -366841.980091144704190777819646, -594196.586989286767441521321218, .239795765948468977249886990537 };
  double h1  [9] = { -841470984808.737977637310218137, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18000000., 9., 1080604.61173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { 6229630.89861960892202789922984, 13702077.1567632941100562896113, 6.57962440079090187414555171662, 13702077.1567632941100562896113, 21339719.7634548900314502643316, 7.55102464597210542611866284066, 6.57962440079090187414555171662, 7.55102464597210542611866284066, -.936752127533144786938532535075 };
  double hres[9] = { 656912.720863440485537236487410, 806863.24310331474046417475583, -.295265003033470055496269976325, 806863.24310331474046417475583, 763055.53301040715997020663038, -.521375287141748681991214670389, -.295265003033470055496269976325, -.521375287141748681991214670389, .812457247121963127310255324438e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(841473984808.737977637310218137, g1,h1), ad2(3114816.38606193199415873655345, g2,h2), adresMaple(270152.034827521587140642889006, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 1.08060461173627943480187321489, -8.15852901519210349334749767837, 1.31705803038420698669499535674 };
  double g2  [3] = { -5.68932859275146920462696262240, -5.77043302989324008708148465221, 3.95628643411770096766645193655 };
  double gres[3] = { -1.55024500189287579545506829736, 2.02233049714825207341422102052, .274568984595773018468099048443 };
  double h1  [9] = { -1.68294196961579301330500464326, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -18., 9., -1.08060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -6.22963089861960892202789922984, -12.6214706715227596089648425193, 7.07110188342750542868040155147, -12.6214706715227596089648425193, -20.2591132782143555303588172396, 8.53397961124531253518836251036, 7.07110188342750542868040155147, 8.53397961124531253518836251036, -.540302305868139717400936607443 };
  double hres[9] = { 6.26748457632989914930128916989, -3.71225765497923654209277172250, -1.16422744252644830730998264798, -3.71225765497923654209277172250, -6.09960484041437637175806311410, .69229099379905162172410047098, -1.16422744252644830730998264798, .69229099379905162172410047098, .82811644786319057464408375357e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(-1.31705803038420698669499535674, g1,h1), ad2(-2.57451314344166474361301300748, g2,h2), adresMaple(.511575570604209610541268184659, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { .540302305868680019706804747160, .841479984807896506652502321630, 3.00000168294196961579301330500 };
  double g2  [3] = { 1.00000622963039861960892206957, 2.00000685103664162951952196669, 3.11481444930980446118061628159 };
  double gres[3] = { -.301173361868772132518799613474, -.841465886695035740049670927482, .37897333992417765126799408978 };
  double h1  [9] = { -.841470984808737977637310218137, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .18e-4, 9., .108060461173627943480187321489e-5, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { .622963089861960892202789922984e-5, 2.00001370207428325903904385005, 6.22962989861960892219456589651, 2.00001370207428325903904385005, 2.00002133971688995063496524402, 6.85103564162951952221669120043, 6.22962989861960892219456589651, 6.85103564162951952221669120043, -.999999999999500000000000041667 };
  double hres[9] = { -.239125005899597993065683655640, .30116702612692622901785507002, -4.68291606111368766046896120838, .30116702612692622901785507002, 1.68292715027775813113962229672, 5.09809464197369720243011713315, -4.68291606111368766046896120838, 5.09809464197369720243011713315, .163549553771882404025206615232 };
  adreal<3,DO_HESS_TEST,double> ad1(.841473984808737977637310218137, g1,h1), ad2(1.00000311481494930980446105562, g2,h2), adresMaple(.841471363781154655988040915677, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 1.08060461173627943480187321489, 9.84147098480789650665250232163, 4.68294196961579301330500464326 };
  double g2  [3] = { 6.76993320448774863942883583728, 7.93164225336579895668523108199, 2.27334446450190795436144729329 };
  double gres[3] = { -2.07737308827492948648744639993, -.8770172737965530837293664031e-1, .484342772852027910789510541639 };
  double h1  [9] = { -1.68294196961579301330500464326, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., 1.08060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, 14.7826798949953184785685889491, 5.38815991381171241537539690821, 14.7826798949953184785685889491, 22.4203225016869143999625636694, 5.16809567201372650857835322384, 5.38815991381171241537539690821, 5.16809567201372650857835322384, -.540302305868139717400936607443 };
  double hres[9] = { 5.05127373766997297086319177939, -.36348290218705792086071248181, -1.19807275527169575599270633138, -.36348290218705792086071248181, -2.55360063742482832477123690591, -.34571492325672147878814019446, -1.19807275527169575599270633138, -.34571492325672147878814019446, .47336946836837947814502366410e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(4.68294196961579301330500464326, g1,h1), ad2(3.65511775517794417841488622236, g2,h2), adresMaple(1.28120139576400888992747994029, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 54.5705328926821114574945973517, 90.8414709848078965066525023216, 19.8294196961579301330500464326 };
  double g2  [3] = { 61.4572374571196367680201283506, 66.8322333581422903143158507754, 3.65883656019917427441869727677 };
  double gres[3] = { -5.89229078190750508013858092970, -5.36839076119946187218953274514, .196254293978374955201294856717 };
  double h1  [9] = { -84.9885694655975471719027344846, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 180., 9., 10.8060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { 62.2963089861960892202789922984, 135.342609774437485533149429446, 6.77365200950897873543264689169, 135.342609774437485533149429446, 211.719035841353444747089176649, 7.93907986340825914869285319080, 6.77365200950897873543264689169, 7.93907986340825914869285319080, .839071529076452452258863947824 };
  double hres[9] = { 13.2935553129317428913010535650, 6.9546851267226054090017047457, -.177986020765102469964552612564, 6.9546851267226054090017047457, 3.1122566605603654659487769978, -.481500734983139247263917412954, -.177986020765102469964552612564, -.481500734983139247263917412954, -.96885376708346620144026204628e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(114.988569465597547171902734485, g1,h1), ad2(30.3090829640215921578806322014, g2,h2), adresMaple(3.79386501406508306258834107773, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 540302305873.542740459618004617, 900000000.841470984807896506653, 1685941.96961579301330500464326 };
  double g2  [3] = { 2593536.98504909999951519358529, 2840762.26020941377668623340556, 36.2960718720474685542834985441 };
  double gres[3] = { -885691.768803751942735500992564, -1425778.31700112507653513832909, -16.9257991229347400072408197683 };
  double h1  [9] = { -841470984816.311216500581286697, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 180000000., 900., 1080604.61173627943480187321489, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { 2593443.30983634668503649973204, 5681505.78537627689047672804046, 37.5927935269656418968017484101, 5681505.78537627689047672804046, 3683655.51865671540693510905368, 9.84061356859272215614354437053, 37.5927935269656418968017484101, 9.84061356859272215614354437053, -93.6752127533144786938532535075 };
  double hres[9] = { 1591481.62232325642841125021679, 1938686.51344088209273707604588, 40.5959382039993434638822802815, 1938686.51344088209273707604588, 4396941.43017943437062560348712, 72.0419699997549877861112747624, 40.5959382039993434638822802815, 72.0419699997549877861112747624, 47.0394145900291275478873026213 };
  adreal<3,DO_HESS_TEST,double> ad1(844470984816.311216500581286697, g1,h1), ad2(1296815.33013092665699694371927, g2,h2), adresMaple(651188.311238619694474635409416, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 5.94332536454953689141030268187, -899.158529015192103493347497678, 2998.31705803038420698669499536 };
  double g2  [3] = { 51.4367872769776250550571610123, 7.96530259219593123422823751399, 85.4438201357078240077684820290 };
  double gres[3] = { 55.4323910612836174781894090165, -8.48439657207661569012719778127, 148.751776589896876353856069202 };
  double h1  [9] = { -9.25618083288686157317752553793, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -180., 900., -1.08060461173627943480187321489, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { -2.59344330983634668503649973204, 5.12455906702906812043774287909, 86.7405417906259973502867318950, 5.12455906702906812043774287909, -2.60304903341618090584366196172, 19.6701632213247932468405410675, 86.7405417906259973502867318950, 19.6701632213247932468405410675, -54.0302305868139717400936607443 };
  double hres[9] = { -111.103353917083335434331498678, 5.42445211457289360940220223048, -141.642776294752783078070167483, 5.42445211457289360940220223048, -3.64983336968582685967942032497, 29.5005173754628194578771808049, -141.642776294752783078070167483, 29.5005173754628194578771808049, -540.120393979383633360708837284 };
  adreal<3,DO_HESS_TEST,double> ad1(-2990.74381916711313842682247446, g1,h1), ad2(52.7335089318957983975754108783, g2,h2), adresMaple(-56.7142957057834889560075426934, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 5.40302305868193747631523421415, .842370984807896506652502321630, 3000.00000168294196961579301331 };
  double g2  [3] = { 100.000002593393309836346689203, 20.0000028407335251668631146238, 1.29662165491817335918491653269 };
  double gres[3] = { -.301468685946154410287199388990e-1, -.841171191195527764695220673171e-2, 29.9989081693688494872269084014 };
  double h1  [9] = { -8.41470984807980653750983111281, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .180e-3, 900., .108060461173627943480187321489e-5, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { .259344330983634668503649973204e-5, 20.0000056814770503337262284143, 2.59334330983634670170316639871, 20.0000056814770503337262284143, 2.00000368365264515246034072887, 2.84072352516686311712382796824, 2.59334330983634670170316639871, 2.84072352516686311712382796824, -99.9999999999500000000000041667 };
  double hres[9] = { -.238533616016989588246315573754e-1, .30086854647259978135065765256e-2, -30.0007006578389814142438063244, .30086854647259978135065765256e-2, .168294017229071885686789472658e-2, 2.99793530453367057269700950037, -30.0007006578389814142438063244, 2.99793530453367057269700950037, -.676938153263028461011289653517 };
  adreal<3,DO_HESS_TEST,double> ad1(8.41770984807980653750983111281, g1,h1), ad2(100.000001296671654918173346685, g2,h2), adresMaple(.841770973892975035952118800378e-1, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 5.94332536454953689141030268187, 900.841470984807896506652502322, 3001.68294196961579301330500464 };
  double g2  [3] = { 56.6236738966503184251301604763, 13.6467896425296574618092267838, -82.8503768258714773227319822970 };
  double gres[3] = { -55.5577700671481048211921081238, 2.8663579235098891269353772518, 135.701488100831239730604176716 };
  double h1  [9] = { -9.25618083288686157317752553793, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 180., 900., 1.08060461173627943480187321489, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { 2.59344330983634668503649973204, 16.4875331676965205755997214187, -81.5536551709533039802137324310, 16.4875331676965205755997214187, 4.76425825688873977544740839150, -13.9886761709910670192595517977, -81.5536551709533039802137324310, -13.9886761709910670192595517977, -54.0302305868139717400936607443 };
  double hres[9] = { 111.002959829792819376707538389, -5.4284947534743524800435735176, -141.885292770996258486618379414, -5.4284947534743524800435735176, -2.84424081580219606405094439401, .8393584843487244339356787984, -141.885292770996258486618379414, .8393584843487244339356787984, 459.563516638113220982494759812 };
  adreal<3,DO_HESS_TEST,double> ad1(3009.25618083288686157317752554, g1,h1), ad2(55.3269522417321450826119106103, g2,h2), adresMaple(54.3904202003568516587772533893, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 59.4332536454953689141030268187, 9000.84147098480789650665250232, 3016.82941969615793013305004643 };
  double g2  [3] = { -57.9727198092817783755213974620, 11.6260046701395820927276673926, 55.6988327438551546829930160511 };
  double gres[3] = { 345.820219939795103143035594272, -196.399479299854806981744066006, -375.587442626646008338434638881 };
  double h1  [9] = { -92.5618083288686157317752553793, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 1800., 900., 10.8060461173627943480187321489, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { 25.9344330983634668503649973204, 40.0334399218082132306326137416, 56.9955543987733280255112659171, 40.0334399218082132306326137416, 35.1583933933716985019376238704, 13.7211657429542593818854478719, 56.9955543987733280255112659171, 13.7211657429542593818854478719, 83.9071529076452452258863947824 };
  double hres[9] = { -718.989141535404675021471087557, -22.220434406929421199376706048, 237.488454465988891325712248018, -22.220434406929421199376706048, -299.983270336960077579261116143, -310.492114286457343354975166279, 237.488454465988891325712248018, -310.492114286457343354975166279, -1091.54979805465097580642753566 };
  adreal<3,DO_HESS_TEST,double> ad1(30092.5618083288686157317752554, g1,h1), ad2(-70.9399363584635118007038961222, g2,h2), adresMaple(-424.197755919450665008601936067, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -839072368147.981528711316206688, 8999999999999999999.45597888911, 2999999999998911957.77822126037 };
  double g2  [3] = { 936737182554.985282977365595191, 246654089.074169196557152575912, 3499935021638.20463037900506198 };
  double gres[3] = { -32025547758.4789072572816631530, -7471935.15872839109563990043659, -119656866703.428298785735399532 };
  double h1  [9] = { 544021654910.480702774561066599, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, 18000000000000., 9000000000000., -1678143.05815290490451772789565, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { -1494497.81595039611669398835430, 47457313.5597675497375534501124, 349993502156.347973958148525614, 47457313.5597675497375534501124, -170312239.886395894061274938266, 7000097.96247238254865386811755, 349993502156.347973958148525614, 7000097.96247238254865386811755, -9367521275331.44786938532535075 };
  double hres[9] = { 6405109552.16144204355012312659, -32037.97954911236851479026234, 11965495767.8448663846305202116, -32037.97954911236851479026234, 5823098.80254721565054414469106, 5703081.84973900729658830353744, 11965495767.8448663846305202116, 5703081.84973900729658830353744, 409674763265.670313791239846650 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999455978345089.51930, g1,h1), ad2(9367446550440.65034957949065133, g2,h2), adresMaple(320258032308.530670447507989032, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -839072.368147981528711316206688, -9000000000000.54402111088936981, 3000000000000000001.08804222178 };
  double g2  [3] = { 540302305883.084695560440568610, 10805818.1983162708417179137670, 8414709848004.24017572750341047 };
  double gres[3] = { 55524.4715302825405429167916516, -.55526813754136015163322638755, 1419987.12395385116588941931786 };
  double h1  [9] = { 544021.654910480702774561066599, -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, -18000000., 9000000000000., 1.67814305815290490451772789565, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { 1.49449781595039611669398835430, 1080559.02792697473354170953850, 841470984792.951528492998360463, 1080559.02792697473354170953850, 181.118304738801239072189409186, 16829647.6152044536393508648145, 841470984792.951528492998360463, 16829647.6152044536393508648145, -5403023058681.39717400936607443 };
  double hres[9] = { -11104.8943059558197256197347765, .55524471530573054912876154180e-1, -141998.712399070997043622271153, .55524471530573054912876154180e-1, .175022822617133954309045756050e-4, 1.42010692441341508924606282393, -141998.712399070997043622271153, 1.42010692441341508924606282393, -4978242.54670102364472458053460 };
  adreal<3,DO_HESS_TEST,double> ad1(-3000000000000544021.65491048070, g1,h1), ad2(5403023058756.12206480688588026, g2,h2), adresMaple(-555244.715296699228162290542468, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -839071.529076452453097935476900, 8999999.45597888911063018659525, 2999999999999999999.99999891196 };
  double g2  [3] = { 999999999999.499985055021882163, 20000000.0002179190465235071341, -10000074.7248891308531391681161 };
  double gres[3] = { -.300000784669567987907812744506e-1, .300000054395423516566652765083e-6, 300000.000000450004429091133948 };
  double h1  [9] = { 544021.110889369813948768772740, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, 18.000000, 9000000000000., -.167814305815290490451772789565e-5, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 2000000.00004458380930470134349, -1000014.94497799283729450028155, 2000000.00004458380930470134349, 19.9998296877313785615552766626, 207.919046523509634151715258378, -1000014.94497799283729450028155, 207.919046523509634151715258378, -9999999999995.00000000000041667 };
  double hres[9] = { .600007009550244872233898643159e-2, -.299999215330731992968135768787e-7, -30000.0000000450000784677569780, -.299999215330731992968135768787e-7, .5000576285075528744605175e-17, .299999999986774854019400413082, -30000.0000000450000784677569780, .299999999986774854019400413082, .900004429092477984794245087489 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999455978.88911063018605123, g1,h1), ad2(9999999999994.99992527510961915, g2,h2), adresMaple(.299999945598038913277563929486, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -839072.368147981528711316206688, 8999999999999.45597888911063019, 2999999999999999998.91195777822 };
  double g2  [3] = { 540302305853.194739241432646276, 10806274.0364093178543195505308, -8414709848153.68995732254302213 };
  double gres[3] = { -55524.4715305729965317714575805, .55522129306719393187150035264, 1419987.12403209236480235649408 };
  double h1  [9] = { 544021.654910480702774561066599, -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, 18000000., 9000000000000., -1.67814305815290490451772789565, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { -1.49449781595039611669398835430, 1080650.19554558413606203689128, -841470984822.841484812006282797, 1080650.19554558413606203689128, -159.506212504075650376151944888, -16829191.7771114066267492280507, -841470984822.841484812006282797, -16829191.7771114066267492280507, -5403023058681.39717400936607443 };
  double hres[9] = { 11104.8943062152876893240892012, -.55524471530282598633565794842e-1, -141998.712399523356025248202857, -.55524471530282598633565794842e-1, .175022822666274303880403110505e-4, 1.41986732357251853521421685393, -141998.712399523356025248202857, 1.41986732357251853521421685393, 4978242.54717614246146254727917 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999455978.34508951930, g1,h1), ad2(5403023058606.67228321184626860, g2,h2), adresMaple(555244.715311856142584971025532, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -839155.436229360097504089834219, 89999999999999.4559788891106302, 2999999999999999989.11957778221 };
  double g2  [3] = { -839071529225.902233853903559493, -16779151.3910638139821690951372, 5440211108818.97324324995681268 };
  double gres[3] = { 357538.052006462269004428179943, -3.57635170971550144017563661739, -2675674.72399934551912160898373 };
  double h1  [9] = { 544075.513000458750386088136617, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, 180000000., 9000000000000., -16.7814305815290490451772789565, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { -14.9449781595039611669398835430, -1677687.22005985789191609113180, 544021110874.424835245243700684, -1677687.22005985789191609113180, -1719.90401679591349628688404933, 10880650.1368339197743957716189, 544021110874.424835245243700684, 10880650.1368339197743957716189, 8390715290764.52452258863947824 };
  double hres[9] = { -71507.6104013572963678029588370, .357538052006292533515093220388, 267567.472447656716412310397478, .357538052006292533515093220388, .725722110625509602113634170412e-3, -2.67712832505867876326560098444, 267567.472447656716412310397478, -2.67712832505867876326560098444, -7044985.87519730914842003869534 };
  adreal<3,DO_HESS_TEST,double> ad1(29999999999999455924.4869995412, g1,h1), ad2(-8390715291511.77343056383753659, g2,h2), adresMaple(-3575380.51974521121554830698007, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -839071529075.613380729787495372, 8999999.45597888911063018659525, -1088045.22177873962680949532370 };
  double g2  [3] = { -62296308.0494439616871342053599, 685103745.427909401525440047939, -307.981609909267516580218436624 };
  double gres[3] = { 2344.49436606480956564801926755, 3841.55105145717232195951513480, .176618486504209826315159646904e-2 };
  double h1  [9] = { 544021110888.825792293858292038, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, -18000000., 9., -1678143.05815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -6229630.89861960892202789922984, 137020750.959086135371377583465, -61.9463154840247962681613398116, 137020750.959086135371377583465, -2133971770.26002094585317330668, 678.103894119526093145982736974, -61.9463154840247962681613398116, 678.103894119526093145982736974, -9.36752127533144786938532535075 };
  double hres[9] = { -2719.28889267459461993030014953, 5156.72194852380304606444628499, .236887741545170459561184323366e-2, 5156.72194852380304606444628499, 4933.2307400201468549185031328, .388863911666223500463426939140e-2, .236887741545170459561184323366e-2, .388863911666223500463426939140e-2, -.525264703479900898504382946849e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(-544024110888.825792293858292038, g1,h1), ad2(-311481535.563459170769947092107, g2,h2), adresMaple(1746.56937498624199528208182396, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 0., -9.54402111088936981340474766185, -1.91195777822126037319050467630 };
  double g2  [3] = { 62.8366112920642289376799289058, -695.909810280314746536354518859, -303.066835082901481034869938276 };
  double gres[3] = { -.187729200611357025439644812960e-2, -.93274494776783960610767227130e-2, .302074476110417478905149631773e-2 };
  double h1  [9] = { 0., -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, 18., 9., 1.67814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { 6.22963089861960892202789922984, -138.101357444326669872469030557, -61.4548380013881927136264899768, -138.101357444326669872469030557, 2144.77783511242629086408777760, 668.274344466794022055285740277, -61.4548380013881927136264899768, 668.274344466794022055285740277, -5.40302305868139717400936607443 };
  double hres[9] = { .558400063444994638148908135860e-3, -.79512594152964345663064154563e-3, .473733429344337941920016456436e-2, -.79512594152964345663064154563e-3, -.482418666071409830933690658342e-1, .61494274301856955182234929344e-2, .473733429344337941920016456436e-2, .61494274301856955182234929344e-2, .250591004940296969597330938202e-2 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(316.884567989661843275404327566, g2,h2), adresMaple(.946716976163343203489202249405e-2, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { .839071529075613380729787495372, -.544012110889369813404747661851, -3.00000108804222177873962680950 };
  double g2  [3] = { .999937703690513803910779762675, -19.9993148962258370480478124975, -311.481554930980446099728294825 };
  double gres[3] = { .784695854383624776591274658691e-1, .544037675987609610283679501187e-1, 1.39461218438821071832656388378 };
  double h1  [9] = { -.544021110888825792293858292038, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, -.18e-4, 9., -.167814305815290490451772789565e-5, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -.622963089861960892202789922984e-5, -1.99986297924616740960956241617, -62.2963099861960892201123256317, -1.99986297924616740960956241617, 19.9978660282010049365034847643, 685.103784162951952185002453377, -62.2963099861960892201123256317, 685.103784162951952185002453377, -9.99999999999500000000000041667 };
  double hres[9] = { -.700972000105136562384199693589e-1, .784690039989887600356927648062e-1, 2.64372626285339061833254931740, .784690039989887600356927648062e-1, .108813803538225777303522291824, 1.65655267472266338118286539513, 2.64372626285339061833254931740, 1.65655267472266338118286539513, 86.8274981436358661880393368565 };
  adreal<3,DO_HESS_TEST,double> ad1(.544018110888825792293858292038, g1,h1), ad2(9.99968851845006901955389902171, g2,h2), adresMaple(.544035056577089734348661655001e-1, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { 0., 8.45597888911063018659525233815, -4.08804222177873962680949532370 };
  double g2  [3] = { -61.7560066803279495028780556910, 674.297718045589157840317054561, -319.896254779059411167919984708 };
  double gres[3] = { -.197758313391521915900617494042e-2, -.60341146174008788328697430339e-2, .31123026844435673938787389179e-2 };
  double h1  [9] = { 0., -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, -18., 9., -1.67814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -6.22963089861960892202789922984, 135.940148220854111002865284127, -63.1377799710039857269314946200, 135.940148220854111002865284127, -2123.16574287770070216805031330, 701.933183859109882321385833143, -63.1377799710039857269314946200, 701.933183859109882321385833143, -5.40302305868139717400936607443 };
  double hres[9] = { .598526576891615101641851183270e-3, .395532230130663147500953129011e-2, .489979518164872099420473821311e-2, .395532230130663147500953129011e-2, -.357672592773782101892259652930e-1, .62364444670725410890801389130e-2, .489979518164872099420473821311e-2, .62364444670725410890801389130e-2, -.312384855507238051221453651977e-2 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(-306.078521872299048927385595418, g2,h2), adresMaple(.980140645494769125337740007155e-2, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -83.0680813785687927736275308346, 89.4559788891106301865952523381, -13.8804222177873962680949532370 };
  double g2  [3] = { -623.802161391037344655048786932, 6867.81907221104857092853514606, -306.041333822086747967347484873 };
  double gres[3] = { .212342666348426638644520871809e-1, .303998417011418821499028357364e-1, .181326869547223053049325320454e-2 };
  double h1  [9] = { 53.8580899780476115270700185232, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, -180., 9., -16.7814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -62.2963089861960892202789922984, 1371.88567138405680928118930132, -61.7522878753067194068742446365, 1371.88567138405680928118930132, -21356.4993205321640142058677335, 674.223341945164555920240833473, -61.7522878753067194068742446365, 674.223341945164555920240833473, 8.39071529076452452258863947824 };
  double hres[9] = { -.262623421206280630310268865707e-1, .526842640262533876191023143931e-1, .239936045009753871173078599268e-2, .526842640262533876191023143931e-1, .7728976807395171128308165334e-2, .392304903217606516649054218133e-2, .239936045009753871173078599268e-2, .392304903217606516649054218133e-2, .651454269460984999813265962085e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(-83.8580899780476115270700185232, g1,h1), ad2(-3123.20616460056898553653825440, g2,h2), adresMaple(.268500014275465977237594086637e-1, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -839071529076.452453097935476900, -.544012110889369813404747661851, -1088042.22177873962680949232370 };
  double g2  [3] = { 40.0000000000142700854608718116, 200000000.000218735042550796229, .200000003500001688379596214511e-3 };
  double gres[3] = { -3651336534.49151705982272227366, 2720105554447755.76887525059776, -2720.10550684497889866637894747 };
  double h1  [9] = { 544021110889.369813948768772740, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, 18.000000, .9e-11, -1678143.05815290490451772789565, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { 4.00000000000133333333333386668, 40000000.0000418735042550929563, .400000003500068355046262907845e-4, 40000000.0000418735042550929563, 418.735042551196229072104437370, 200.000007000070043425859175686, .400000003500068355046262907845e-4, 200.000007000070043425859175686, -.936752127533144786938532535075e-11 };
  double hres[9] = { 4235042279.33130133584403459733, 3651336534494109.56006773040029, -3651.33647535456861282881424990, 3651336534494109.56006773040029, -5440211108893698134047.44642562, 2720105554.44775576880729384546, -3651.33647535456861282881424990, 2720105554.44775576880729384546, -.127403233262045314960580859240e-3 };
  adreal<3,DO_HESS_TEST,double> ad1(-544021110889.369813948765772740, g1,h1), ad2(200.000000000076034187942024782, g2,h2), adresMaple(-2720105554.44581496465908447061, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -.839072368147981528711316206688, -.544021110898369813404747661851, 1.08804222177873962980949532370 };
  double g2  [3] = { -.399999994597110274651936212659e-4, -199.999989194153882637205785314, .200000008414776514745631759859e-3 };
  double gres[3] = { 3651.34027712118432297183491843, -2720105554.44768027163956968846, -2720.10271989562335413716185722 };
  double h1  [9] = { .544021654910480702774561066599, -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, -.18e-4, .9e-11, 1.67814305815290490451772789565, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { -.400000000000133333333333386668e-5, -39.9999989194353882637205918648, .400000008414843181412298453193e-4, -39.9999989194353882637205918648, 10.8056461173627938146853988151, 200.000016829619696157930266383, .400000008414843181412298453193e-4, 200.000016829619696157930266383, -.540302305868139717400936607443e-11 };
  double hres[9] = { -4235.04664704267901988514782680, -3651336534.49401600796817513887, -3651.33274097456876783183029030, -3651336534.49401600796817513887, 5440211108893698.16214017367352, 2720105554.44802534799977644696, -3651.33274097456876783183029030, 2720105554.44802534799977644696, .536672799092328673744851478714e-2 };
  adreal<3,DO_HESS_TEST,double> ad1(-.544021654910480705774561066599, g1,h1), ad2(-.199999994597043607985269519325e-3, g2,h2), adresMaple(2720.10834803553745882898663195, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -.839072368147981528711316206688e-6, -.544021110889369804404747661851, -.108804222177573962680949532370e-5 };
  double g2  [3] = { .410000000000128333333333387085e-10, .220000000000190000000000134166e-3, .200000000000056666666666695001e-3 };
  double gres[3] = { -3489.80293559412216842143431068, 123363510.05906385615474147740, 2467213208.46250553410824730074 };
  double h1  [9] = { .544021654910480702774561066599e-6, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, .18e-10, .9e-11, -.167814305815290490451772789565e-5, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { .400000000000133333333333386668e-11, .420000000000390000000000267500e-4, .400000000000123333333333388335e-4, .420000000000390000000000267500e-4, 20.0000000003900000000005341666, 200.000000000180000000000136666, .400000000000123333333333388335e-4, 200.000000000180000000000136666, -.999999999999500000000000041667e-11 };
  double hres[9] = { 4002.60863269253325919832818086, 154435922.974523736216489882258, 3335363522.82222177706300217740, 154435922.974523736216489882258, -11754086871850.370255869823376, -234970219305741.25483213104571, 3335363522.82222177706300217740, -234970219305741.25483213104571, -4699458911558284.36050839533394 };
  adreal<3,DO_HESS_TEST,double> ad1(-.544021654910480699774561066599e-6, g1,h1), ad2(.210000000000061666666666693751e-9, g2,h2), adresMaple(-2590.57930909676641611349220241, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -.839072368147981528711316206688, -.544021110880369813404747661851, -1.08804222177873962380949532370 };
  double g2  [3] = { .400000005403156392014730560677e-4, 200.000010806246117362794481352, .199999991585356818587701626809e-3 };
  double gres[3] = { -3651.34009453523986734603698576, 2720105554.44782729937415391033, -2720.10294878513614701785069426 };
  double h1  [9] = { .544021654910480702774561066599, -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, .18e-4, .9e-11, -1.67814305815290490451772789565, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { .400000000000133333333333386668e-5, 40.0000010806446117362794614686, .399999991585423485254368320143e-4, 40.0000010806446117362794614686, 10.8064461173627948813520654827, 199.999983170780303842070000283, .399999991585423485254368320143e-4, 199.999983170780303842070000283, -.540302305868139717400936607443e-11 };
  double hres[9] = { 4235.04638170495041193628107172, 3651336534.49419858148682668145, -3651.33302533569425730313545135, 3651336534.49419858148682668145, -5440211108893698.10233591698216, 2720105554.44750252345290883419, -3651.33302533569425730313545135, 2720105554.44750252345290883419, -.551369427085481008553006617688e-2 };
  adreal<3,DO_HESS_TEST,double> ad1(-.544021654910480699774561066599, g1,h1), ad2(.200000005403089725348063867343e-3, g2,h2), adresMaple(-2720.10820106746013375980902990, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -83.9071537467167743023388470413, -.544021110799369813404747661851, -10.8804222177873962650949532370 };
  double g2  [3] = { .399999999161061804256880934409e-3, 1999.99998322056941847095228815, .200000005440277775560364827381e-3 };
  double gres[3] = { -36513.3658518252195982425596063, 27201055544.4775560991376491565, -2720.10545325514291059889992604 };
  double h1  [9] = { 54.4021116329580922298445795898, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, .180e-3, .9e-11, -16.7814305815290490451772789565, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { .400000000000133333333333386668e-4, 399.999998322256941847095362149, .400000005440344442227031520715e-4, 399.999998322256941847095362149, -16.7774305815290437118439456186, 200.000010880622217787396401428, .400000005440344442227031520715e-4, 200.000010880622217787396401428, .839071529076452452258863947824e-11 };
  double hres[9] = { 42350.4234228496766516171683242, 36513365344.9410936304423097299, -3651.33640605707436524415393734, 36513365344.9410936304423097299, -54402111088936981.3101412778529, 2720105554.44775740559570274389, -3651.33640605707436524415393734, 2720105554.44775740559570274389, .108677946430009633820224691076e-3 };
  adreal<3,DO_HESS_TEST,double> ad1(-54.4021116329580921998445795898, g1,h1), ad2(.199999999160995137590214241075e-2, g2,h2), adresMaple(-27201.0559305881370421422240247, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -839071529077.291523787940400276, 8999999.45597888911063018659525, -1088039.22177873962680949532370 };
  double g2  [3] = { 62296309.9229482167534237792369, 685103782.897994502851231525481, 314.981479952693375622571486360 };
  double gres[3] = { -2344.49808811328993413239813833, 3841.56621928829980774649770120, -.172693473590718230928115727965e-2 };
  double h1  [9] = { 544021110889.913834515637031664, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, 18000000., 9., -1678143.05815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { 6229630.89861960892202789922984, 137020754.706094645503956731219, 62.6463024883673821723966447852, 137020754.706094645503956731219, 2133971807.73010604717896478422, 692.103634206377811230688836446, 62.6463024883673821723966447852, 692.103634206377811230688836446, -9.36752127533144786938532535075 };
  double hres[9] = { 2719.28985878410203697887358885, 5156.71855146175815093114253077, -.232011497649021974699349080716e-2, 5156.71855146175815093114253077, -4933.3149937816505637372744687, .379447803013545529636730028480e-2, -.232011497649021974699349080716e-2, .379447803013545529636730028480e-2, -.525258856006484895376796178077e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(-544018110889.913834515637031664, g1,h1), ad2(311481554.298501721432842830877, g2,h2), adresMaple(-1746.55000715890113611723239539, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -1.67814305815290490451772789565, -9.54402111088936981340474766185, 4.08804222177873962680949532370 };
  double g2  [3] = { -61.7560066803279495028780556910, -674.297718045589157840317054561, 319.896254779059411167919984708 };
  double gres[3] = { .278790628466086854664685867990e-2, .17576344384795696040109599628e-2, .6029571583105049124400654721e-3 };
  double h1  [9] = { 1.08804222177873962680949532370, -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, -18., 9., 1.67814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -6.22963089861960892202789922984, -135.940148220854111002865284127, 63.1377799710039857269314946200, -135.940148220854111002865284127, -2123.16574287770070216805031330, 701.933183859109882321385833143, 63.1377799710039857269314946200, 701.933183859109882321385833143, -5.40302305868139717400936607443 };
  double hres[9] = { -.495162565160277576685596710715e-2, -.968703695024233084034198873693e-2, .6449829138610390836922380171e-4, -.968703695024233084034198873693e-2, -.415832450810433085639839210369e-1, .17343244683384054210792438796e-2, .6449829138610390836922380171e-4, .17343244683384054210792438796e-2, .457936707214753723618544972711e-2 };
  adreal<3,DO_HESS_TEST,double> ad1(-4.08804222177873962680949532370, g1,h1), ad2(-306.078521872299048927385595418, g2,h2), adresMaple(.133561878068802799317377879890e-1, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -.839071529077291523787940400276, -.544012110889369813404747661851, 2.99999891195777822126037319050 };
  double g2  [3] = { 1.00006229630848619608922032066, 20.0006851037541629519521891691, 311.481534930980446103061628159 };
  double gres[3] = { -.784643583325899906555828823012e-1, .544010546426113084258859362925e-1, 1.99440095199007770698362806100 };
  double h1  [9] = { .544021110889913834515637031664, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, .18e-4, 9., -.167814305815290490451772789565e-5, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { .622963089861960892202789922984e-5, 2.00013702075183259039043775049, 62.2963079861960892204456589651, 2.00013702075183259039043775049, 20.0021339717789950634965169023, 685.103744162951952191669120043, 62.2963079861960892204456589651, 685.103744162951952191669120043, -9.99999999999500000000000041667 };
  double hres[9] = { .700938109599307522953283918207e-1, .784648197027887082456560429535e-1, 2.58337936416816021255640914558, .784648197027887082456560429535e-1, -.108794641808613462430006785712, -1.05642567730048459145430470810, 2.58337936416816021255640914558, -1.05642567730048459145430470810, -124.403143369272345683305301824 };
  adreal<3,DO_HESS_TEST,double> ad1(-.544018110889913834515637031664, g1,h1), ad2(10.0003114815399309804461018116, g2,h2), adresMaple(-.544001166257814811167976811462e-1, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -1.67814305815290490451772789565, 8.45597888911063018659525233815, 1.91195777822126037319050467630 };
  double g2  [3] = { 62.8366112920642289376799289058, 695.909810280314746536354518859, 303.066835082901481034869938276 };
  double gres[3] = { -.649218942297388997587583648421e-2, .134343265415147365286361162496e-1, .26309519184803845255617852655e-3 };
  double h1  [9] = { 1.08804222177873962680949532370, -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, 18., 9., -1.67814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { 6.22963089861960892202789922984, 138.101357444326669872469030557, 61.4548380013881927136264899768, 138.101357444326669872469030557, 2144.77783511242629086408777760, 668.274344466794022055285740277, 61.4548380013881927136264899768, 668.274344466794022055285740277, -5.40302305868139717400936607443 };
  double hres[9] = { .588968228747930009337744339641e-2, .631614710503213376341162726331e-2, -.30895246723411238374209741377e-3, .631614710503213376341162726331e-2, -.430406300225393016697311360641e-1, .22509904433677170872753982078e-2, -.30895246723411238374209741377e-3, .22509904433677170872753982078e-2, -.383393029144279592871752119492e-2 };
  adreal<3,DO_HESS_TEST,double> ad1(1.91195777822126037319050467630, g1,h1), ad2(316.884567989661843275404327566, g2,h2), adresMaple(.603360962116538529282101472329e-2, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -84.7462244367216976781452587302, 89.4559788891106301865952523381, -7.8804222177873962680949532370 };
  double g2  [3] = { 622.124018332884439750531059036, 6834.25621104799047283818058814, 316.921756039874144235442438111 };
  double gres[3] = { -.256726837649155307523578635210e-1, .464644921964560852746893946063e-1, -.171753179262765715921466483865e-2 };
  double h1  [9] = { 54.9461321998263511538795138470, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, 180., 9., -16.7814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { 62.2963089861960892202789922984, 1368.52938526775099947215384552, 62.8403300970854590336837399603, 1368.52938526775099947215384552, 21322.9364593691059161155131755, 695.984186380739348456430739947, 62.8403300970854590336837399603, 695.984186380739348456430739947, 8.39071529076452452258863947824 };
  double hres[9] = { .281318867601700317243048318747e-1, .504431730602549244395745561478e-1, -.227658557664645026693744553910e-2, .504431730602549244395745561478e-1, -.913805263766406800214324806200e-1, .373469285696486163303963052531e-2, -.227658557664645026693744553910e-2, .373469285696486163303963052531e-2, .218855357292986669767593630733e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(-24.9461321998263511538795138470, g1,h1), ad2(3106.42473401903993649136097544, g2,h2), adresMaple(-.803049625720416730854816664239e-2, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -839071529084.843167549628472347, 899999999.455978889110630186595, -1085042.22177873962680949532370 };
  double g2  [3] = { 25934526.7735762201648436911737, 284074539.867111818008006851198, 479.665667663110286369477473383 };
  double gres[3] = { -5636.23207195233896350782613225, 9146.95160551056701106283487910, .706557596522166871897707732440e-2 };
  double h1  [9] = { 544021110894.810024513641359985, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, 180000000., 900., -1678143.05815290490451772789565, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { 2593443.30983634668503649973204, 56814889.2383798129387056314688, 60.9337833154927620621302459985, 56814889.2383798129387056314688, 368365383.250288584727449256432, 354.073052950944901802579960847, 60.9337833154927620621302459985, 354.073052950944901802579960847, -936.752127533144786938532535075 };
  double hres[9] = { 6533.25526597664648000196453981, 12345.8973634185827153909333103, .845471444442272350598316735803e-2, 12345.8973634185827153909333103, -28222.9767029591736681973061166, -.379143242602280213467686299630e-1, .845471444442272350598316735803e-2, -.379143242602280213467686299630e-1, -.301397726726808786139800238211e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(-541021110894.810024513641359985, g1,h1), ad2(129673102.243944867396611925135, g2,h2), adresMaple(-4172.19223981412229823122450603, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -9.22978681984097697484750342606, -900.544021110889369813404747662, 3001.08804222177873962680949532 };
  double g2  [3] = { 28.0957974884505048897286634239, -176.013891343058367898862142002, 971.143150299713840904327308232 };
  double gres[3] = { .478394479296477397594688128690, -5.33092690404951956867350658052, 24.6213337856343839531261791765 };
  double h1  [9] = { 5.98423221978306794745222428036, -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, -180., 900., 1.67814305815290490451772789565, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { -2.59344330983634668503649973204, -46.0088243859744679277911605492, 110.081531579153117515615229483, -46.0088243859744679277911605492, -357.559318397883239716534785512, 452.368549478265612709549927817, 110.081531579153117515615229483, 452.368549478265612709549927817, -540.302305868139717400936607443 };
  double hres[9] = { -.971253727409123611160421333997e-1, -.252446585309600207940770006571, -.84948603970703164511656084287, -.252446585309600207940770006571, -11.3827933092070611447631186486, 33.4177046387050145458287584321, -.84948603970703164511656084287, 33.4177046387050145458287584321, -126.094022186113129233380740268 };
  adreal<3,DO_HESS_TEST,double> ad1(-3005.98423221978306794745222428, g1,h1), ad2(410.630140376322383149111620841, g2,h2), adresMaple(-7.32041790567284212512315749209, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -8.39071529076536359411771593069, -.543121110889369813404747661851, 2999.99999891195777822126037319 };
  double g2  [3] = { 100.000025934383098363466854532, 200.000284074252516686311387382, 129.671165491817334418491653269 };
  double gres[3] = { -.784699309183779132712579366832e-2, .544322443867336265042959258008e-3, 3.00070465921567741032405755797 };
  double h1  [9] = { 5.44021110889424215515836598832, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, .180e-3, 900., -.167814305815290490451772789565e-5, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { .259344330983634668503649973204e-5, 20.0000568148605033372622766432, 25.9343330983634668670316639871, 20.0000568148605033372622766432, 20.0003683653545152460340653868, 284.074152516686311412382796824, 25.9343330983634668670316639871, 284.074152516686311412382796824, -999.999999999500000000000041667 };
  double hres[9] = { .700960923942904287087126376279e-2, .784641475161828458374162858118e-3, -.298911967495158361462396778989, .784641475161828458374162858118e-3, -.108803061737462764775869859672e-3, .301332164671514494992346743726, -.298911967495158361462396778989, .301332164671514494992346743726, -.784734891782184633411213848656 };
  adreal<3,DO_HESS_TEST,double> ad1(-5.43721110889424215515836598832, g1,h1), ad2(1000.00012967166549181733429349, g2,h2), adresMaple(-.543721040384211345951478976367e-2, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -9.22978681984097697484750342606, 899.455978889110630186595252338, 2998.91195777822126037319050468 };
  double g2  [3] = { 79.9646636851774385904586580647, 392.134813690314254859236784980, -711.798819316079172400677335028 };
  double gres[3] = { -.547155051044971222907629194232, -1.27308714799028271319593056634, 9.22398501590277377583280318218 };
  double h1  [9] = { 5.98423221978306794745222428036, -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, 180., 900., -1.67814305815290490451772789565, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { 2.59344330983634668503649973204, 67.6209166207000566238286248470, -58.2126653824261838148852348426, 67.6209166207000566238286248470, 379.171410632608828412572249810, 115.780155555107010048548999165, -58.2126653824261838148852348426, 115.780155555107010048548999165, -540.302305868139717400936607443 };
  double hres[9] = { .122244450357736547165671369358, .19901787249095587217260431776e-1, -1.29645480374055559199148346014, .19901787249095587217260431776e-1, -.77020363638582797593412466835, -6.18028292182634123398202434104, -1.29645480374055559199148346014, -6.18028292182634123398202434104, 23.2019071661689120846110159853 };
  adreal<3,DO_HESS_TEST,double> ad1(2994.01576778021693205254777572, g1,h1), ad2(669.974471359957051652761594045, g2,h2), adresMaple(4.46885052456218540445587584107, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "ad1/ad2" << endl;
  double g1  [3] = { -92.2978681984097697484750342606, 8999.45597888911063018659525234, 2989.11957778221260373190504676 };
  double g2  [3] = { 175.437178075989423277763578422, 2672.92921935157262333872184534, 673.693276381187147656572648453 };
  double gres[3] = { -25.2805812757850015685730188499, -362.433163248707035540807754878, -89.7736125022010611003612834020 };
  double h1  [9] = { 59.8423221978306794745222428036, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, 1800., 900., -16.7814305815290490451772789565, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { 25.9344330983634668503649973204, 551.367274451843573712921648024, 80.3365441873004481908397635055, 551.367274451843573712921648024, 3666.87221457093129160035789765, 392.878574694560274059998995861, 80.3365441873004481908397635055, 392.878574694560274059998995861, 839.071529076452452258863947824 };
  double hres[9] = { 15.8056997666840601861208505920, 207.768636400716589530184469979, 60.1080752902899159591692389609, 207.768636400716589530184469979, 3713.36968551639550415614917855, 1003.65883371850939458337776349, 60.1080752902899159591692389609, 1003.65883371850939458337776349, 144.357771409054006576192963580 };
  adreal<3,DO_HESS_TEST,double> ad1(29940.1576778021693205254777572, g1,h1), ad2(457.650125841720890259385918196, g2,h2), adresMaple(65.4214999345526807263724395443, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(ad1/ad2);
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 936753064285.272320083319473608, 8999999999999999999.65000649783, 2999999999999300012.99565741410 };
  double g2  [3] = { -557745688417.251329755455819225, 2279192338739318074.47339312918, 349992754922384976.919594139787 };
  double gres[3] = { .185915249196629348134579575728e-12, -.759730590076638735751741044457e-6, -.116664188473068284738732351008e-6 };
  double h1  [9] = { 349993852164.795123410604604433, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, 18000000000000., 9000000000000., 1873504.25506628957387706507015, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { -1494497.81595039611669398835430, 4558382803974.38108265721238129, 349992007673.477001721535792793, 4558382803974.38108265721238129, -1703122586212510942.98664048080, 2979177469577.64891241912422567, 349992007673.477001721535792793, 2979177469577.64891241912422567, -936752127533144786.938532535075 };
  double hres[9] = { .50553526274693205132354427888e-18, -.151946125517741090435778591230e-11, -.116664152044539285892376361187e-12, -.151946125517741090435778591229e-11, .5677120871215600002488741401e-6, .11666419967055762048001e-12, -.116664152044539285892376361189e-12, .11666419967055762048002e-12, .312250942506128777260235772691e-6 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999650006147835.20488, g1,h1), ad2(189503219557946728.591538357925, g2,h2), adresMaple(1.57079626362715676657512673746, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 936753.064285272320083319473608, -9000000000000.34999350217129295, 3000000000000000000.69998700434 };
  double g2  [3] = { 540303800365.955667797053301431, -1198585853498.78357338194603722, 841470237558988531.454443974636 };
  double gres[3] = { .174443023425999728522287287672e-6, -.910304685373762849895751491809e-6, .446120562332651936953633199103 };
  double h1  [9] = { 349993.852164795123410604604433, .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, -18000000., 9000000000000., -1.87350425506628957387706507015, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { 1.49449781595039611669398835430, -3477776.31873384658156576528933, 841469490310.080556256385627642, -3477776.31873384658156576528933, 1703123666818.99618352114157224, 3962132434850.85602148882389537, 841469490310.080556256385627642, 3962132434850.85602148882389537, -540302305868139717.400936607443 };
  double hres[9] = { .9390804894129144507082590510e-14, -.158896852645378792199991528459e-11, .418088890084988273852110364792e-6, -.158896852645378792199991528460e-11, .549876149308169633836490122779e-6, -.29984048488490374488157591047e-6, .418088890084988273852110364804e-6, -.29984048488490374488157591051e-6, .64610994820903599760038119749 };
  adreal<3,DO_HESS_TEST,double> ad1(-3000000000000349993.85216479512, g1,h1), ad2(540303053117047692.598994954437, g2,h2), adresMaple(-1.39260554283898765211095755042, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 936752.127533144787875284662608, 8999999.65000649782870704788235, 2999999999999999999.99999930001 };
  double g2  [3] = { 999999999998.005502184049645550, 2000002279189.46523506300826715, -1747248907975.03139168032751882 };
  double gres[3] = { -.206324752245511545421925123668e-11, .299999351239516246982457291727e-11, 2.99999999998198349913631930995 };
  double h1  [9] = { 349993.502171292952467645988952, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, 18.000000, 9000000000000., .187350425506628957387706507015e-5, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 2000004.55837993047012601645097, -2494497.81595022945002732169597, 2000004.55837993047012601645097, 296877.41378461555275829331296, 2279188465235.06300851715258544, -2494497.81595022945002732169597, 2279188465235.06300851715258544, -999999999999500000.000000041667 };
  double hres[9] = { .349997628663624426785419065669e-12, -.393675461249466352110056987279e-17, -.299999999993872481387337652896e-5, -.393675461249466352110056987279e-17, .510938013766072857313978828543e-17, .299998632477702299360854699357e-5, -.299999999993872481387337652896e-5, .299998632477702299360854699357e-5, -.405165006017506317976568485336e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999650006.49782870704753235, g1,h1), ad2(999999999998752751.092024843609, g2,h2), adresMaple(.299999965000123957814440473135e-5, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 936753.064285272320083319473608, 8999999999999.65000649782870705, 2999999999999999999.30001299566 };
  double g2  [3] = { 540300811370.323767004819913455, 3359795076971.34244298569246700, -841471732056804481.850560668624 };
  double gres[3] = { -.174441979775013039306951371335e-6, -.561419810067761329074583617897e-6, .446120639869721774585010039030 };
  double h1  [9] = { 349993.852164795123410604604433, .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, 18000000., 9000000000000., 1.87350425506628957387706507015, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { -1.49449781595039611669398835430, 5638985.54220640545116951171911, -841472479305.712457048619015618, 5638985.54220640545116951171911, -1703121505609.77271096227196850, 596248495619.26999487881460885, -841472479305.712457048619015618, 596248495619.26999487881460885, -540302305868139717.400936607443 };
  double hres[9] = { .31312751953048467374056546865e-13, -.126200571579684299716312280620e-11, .418088820452024536522887378849e-6, -.126200571579684299716312280620e-11, .549875959123841181535300496491e-6, -.53633693967669121827786747609e-6, .418088820452024536522887378857e-6, -.53633693967669121827786747605e-6, -.64611024633893272548841227835 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999650006.14783520488, g1,h1), ad2(540301558619231742.202878260449, g2,h2), adresMaple(1.39260602535389241507040266612, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 936845.802745898101417226388329, 89999999999999.6500064978287070, 2999999999999999993.00012995657 };
  double g2  [3] = { -839086474054.611956220030887708, 21113761594197.7251773204646254, 544020363640461838.206689314857 };
  double gres[3] = { .279476852976885250588910503759e-7, -.787084231669952453252407063305e-6, -.209145810316135339158917726980e-1 };
  double h1  [9] = { 350028.501521510081412864252030, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, 180000000., 9000000000000., 18.7350425506628957387706507015, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { -14.9449781595039611669398835430, 43905666.2465483552591586571466, 544019616391.553863008630967863, 43905666.2465483552591586571466, -17031227540286.9026253219722214, 3367232687013.80263499331457581, 544019616391.553863008630967863, 3367232687013.80263499331457581, 839071529076452452.258863947824 };
  double hres[9] = { -.3692760919640255464308148006e-15, -.154499075703097601466552367103e-11, -.208818833891250564401023989123e-7, -.154499075703097601466552367102e-11, .567268344708181693813034389998e-6, .1999374569951500366488926532e-7, -.208818833891250564401023989122e-7, .1999374569951500366488926533e-7, -.237887408332374487951528044726e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(29999999999999649971.4984784899, g1,h1), ad2(-839079001565532204.239447417766, g2,h2), adresMaple(1.59875833697746049447335061821, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 936752127532.208034810999390288, 8999999.65000649782870704788235, -699990.004342585904235304973562 };
  double g2  [3] = { -6229630898618.67216990036608505, 6851037641627646017.62829157753, -3114815099316.30228972099749727 };
  double gres[3] = { -.300741036754858908641730166796e-6, .247144152922832015282173108604e-6, .112364134310506681580101001354e-12 };
  double h1  [9] = { 349993502170.942958615481193829, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, -18000000., 9., 1873504.25506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -6229630.89861960892202789922984, 13702075283257.1655395116494446, -6229630.54862610675073494711219, 13702075283257.1655395116494446, -21339717889948761460.9056241649, 6851036941642.51517929745363180, -6229630.54862610675073494711219, 6851036941642.51517929745363180, -936752.127533144786938532535075 };
  double hres[9] = { -.112362918720609718211593906833e-6, -.661480012765994437471537136900e-6, -.300741070545951148821825547898e-12, -.661480012765994437471537136900e-6, .317375650159957344391352383611e-6, .247144954204382700348651687678e-12, -.300741070545951148821825547898e-12, .247144954204382700348651687678e-12, -.337927668534984966321337306451e-19 };
  adreal<3,DO_HESS_TEST,double> ad1(-349996502170.942958615481193829, g1,h1), ad2(-3114815449308867708.88641647013, g2,h2), adresMaple(-3.14159254122470841502611390212, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 0., -9.34999350217129295211765248678, -2.30001299565741409576469502644 };
  double g2  [3] = { 6229631.43892191479016761663078, -6851038722234.13125816279266897, -3114814607838.81965311744296242 };
  double gres[3] = { -.192627734659892120877341410008e-17, -.883356382334303285082787203583e-12, .224727777126361188461205609395e-12 };
  double h1  [9] = { 0., .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, 18., 9., -1.87350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { 6.22963089861960892202789922984, -13702076.3638636507800461505361, -6229630.05714862411413139257734, -13702076.3638636507800461505361, 21339718970555.2467014401252564, 6851035958687.54990609034456210, -6229630.05714862411413139257734, 6851035958687.54990609034456210, -540302.305868139717400936607443 };
  double hres[9] = { .577883153859280864590541461538e-23, .300742526570436247781923951432e-12, -.601481969170670965753242289443e-12, .300742526570436247781923951432e-12, -.470555179219791303305056424724e-11, .381925958749244908418397050534e-12, -.601481969170670965753242289443e-12, .381925958749244908418397050534e-12, .224727317548972602505500705132e-12 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(3114815989612.11032915366701586, g2,h2), adresMaple(.963138756833462761107591876058e-12, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -.936752127532208034810999390288, -.349984502171292952117652486781, -3.00000069998700434258590423530 };
  double g2  [3] = { -5.22963089862010892202789918817, 4851037.64163051952188335778377, -3114815449310.80446101394944825 };
  double gres[3] = { .442947867301267109059064990652e-6, -.214125517428902442997001872747e-6, .243750860595502278606943476052 };
  double h1  [9] = { -.349993502170942958615481193829, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, -.18e-4, 9., .187350425506628957387706507015e-5, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -.622963089861960892202789922984e-5, 11.7020752832600390437667156509, -6229630.89862060892202789906317, 11.7020752832600390437667156509, -19339717.8899516349651606903712, 6851037641631.51952188335753377, -6229630.89862060892202789906317, 6851037641631.51952188335753377, -999999.999999500000000000041667 };
  double hres[9] = { .165493811471131153111283790684e-6, .573101465467274226195503459568e-6, -.652397874489650305141881920410, .573101465467274226195503459568e-6, .531098195500083823137028988269e-6, .338368744290591203550756959865, -.652397874489650305141881920410, .338368744290591203550756959865, -718019.103381175357996070220702 };
  adreal<3,DO_HESS_TEST,double> ad1(.349990502170942958615481193829, g1,h1), ad2(-2114815.44931030446101394957325, g2,h2), adresMaple(3.14159248809520964012519062053, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 0., 8.65000649782870704788234751322, -3.69998700434258590423530497356 };
  double g2  [3] = { -6229630.35831730305388818182890, 6851036561024.90778560392306523, -3114816290780.78926891045626742 };
  double gres[3] = { -.192627834900729484902768780306e-17, -.658628339780696424984430448900e-12, .224727855089713022100353797260e-12 };
  double h1  [9] = { 0., .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, -18., 9., 1.87350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -6.22963089861960892202789922984, 13702074.2026544273074872809323, -6229631.74009059372992440588234, 13702074.2026544273074872809323, -21339716809346.0232288812556526, 6851039324571.48913767637117210, -6229631.74009059372992440588234, 6851039324571.48913767637117210, -540302.305868139717400936607443 };
  double hres[9] = { .577883554822630320702304793455e-23, -.300739546935272851174426854934e-12, -.601482177839388558740930271677e-12, -.300739546935272851174426854934e-12, -.371697499191707272108750411404e-11, .381926007109966953641928149633e-12, -.601482177839388558740930271677e-12, .381926007109966953641928149633e-12, -.224727794281058495095674950459e-12 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(-3114814909007.49859287423221398, g2,h2), adresMaple(-3.14159265358883009937167379597, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 92.7384606257813339069147209724, 89.6500064978287070478823475132, -9.99987004342585904235304973562 };
  double g2  [3] = { -62296309.8252676182967314445573, 68510378094438.2533717384831887, -3114814905288.69357164413621017 };
  double gres[3] = { -.297733810993016734368275199950e-11, .168697872178295890459946816867e-11, .113487801686019570818218528381e-12 };
  double h1  [9] = { 34.6493567149580022596475961913, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, -180., 9., 18.7350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -62.2963089861960892202789922984, 137020754.510733448590572061860, -6229630.35459849803265808582509, 137020754.510733448590572061860, -213397180577649.407804511809063, 6851036553587.29774314373105760, -6229630.35459849803265808582509, 6851036553587.29774314373105760, 839071.529076452452258863947824 };
  double hres[9] = { -.111239286536327867692518151451e-11, -.657872449487188037133054130735e-11, -.303748498959680115053537706865e-12, -.657872449487188037133054130735e-11, -.101977364120291022501147170131e-11, .248492766989682448843449420939e-12, -.303748498959680115053537706865e-12, .248492766989682448843449420939e-12, -.224676118803910249991458284198e-15 };
  adreal<3,DO_HESS_TEST,double> ad1(-64.6493567149580022596475961913, g1,h1), ad2(-31148155332169.5736865919484081, g2,h2), adresMaple(-3.14159265358771769478997559460, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 936752127533.144787875284662608, -.349984502171292952117652486781, -699987.004342585904235301973562 };
  double g2  [3] = { 4000000.00000133333427008599421, 2000000000002000001.87350558840, 2000000.00000101666016883822629 };
  double gres[3] = { .454459119980299330563405994390, 169796.913681878965443357400669, -.169796913681736053422864343734e-6 };
  double h1  [9] = { 349993502171.292952467645988952, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, 18.000000, .9e-11, 1873504.25506628957387706507015, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { 4.00000000000133333333333386668, 4000000000004.00000187350692174, 4.00000000000168332683550515963, 4000000000004.00000187350692174, 4000001873509.58839962291174375, 2000000000002.69998700434391923, 4.00000000000168332683550515963, 2000000000002.69998700434391923, -.936752127533144786938532535075e-6 };
  double hres[9] = { .242080335935592761169697000583, -427451.606801942483926216910378, .427451606801582713088747349312e-6, -427451.606801942483926216910378, -329503167538.932880607440456035, .159706253857175606055869703619, .427451606801582713088747349312e-6, .159706253857175606055869703619, .100905802958847961471626466799e-13 };
  adreal<3,DO_HESS_TEST,double> ad1(-349993502171.292952467642988952, g1,h1), ad2(2000000000000.66666760341906087, g2,h2), adresMaple(-.173242514077636835842361597586, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { .936753064285272320083319473608, -.349993502180292952117652486781, .699987004342585907235304973562 };
  double g2  [3] = { -4.00000000000079303102746572696, -2000000000000.91939538826505390, 2000000.00000150813765147482985 };
  double gres[3] = { -.468376882136444388273293043422e-6, -.174996751085699446291347419464, -.174996576088758071626034340790e-6 };
  double h1  [9] = { .349993852164795123410604604433, .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, -.18e-4, .9e-11, -1.87350425506628957387706507015, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { -.400000000000133333333333386668e-5, -4000000.00000291939538826638724, 4.00000000000217480431814176319, -4000000.00000291939538826638724, -2919395.38826905389853146465179, 2000000000003.68294196961712634, 4.00000000000217480431814176319, 2000000000003.68294196961712634, -.540302305868139717400936607443e-6 };
  double hres[9] = { -.174995052575279374314515992603e-6, .468376413760187659847894913556, .468375945383264585739438181571e-6, .468376413760187659847894913556, 349993.502171271518662787284391, .174996751085688731120449334446, .468375945383264585739438181571e-6, .174996751085688731120449334446, .349993444177980086470942832864e-12 };
  adreal<3,DO_HESS_TEST,double> ad1(-.349993852164795126410604604433, g1,h1), ad2(-2000000.00000012636436079879362, g2,h2), adresMaple(-3.14159247859286715607792322953, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { .936753064285272320083319473608e-6, -.349993502171292943117652486781, -.699987004339585904235304973562e-6 };
  double g2  [3] = { .400000100000133333283333386668e-5, 2000002.00000199999900000133333, 2000000.00000066666566666693334 };
  double gres[3] = { .468376647947906383508311472072e-6, .262495155797448315222394821891e-6, .174996401092211861138922091032 };
  double h1  [9] = { .349993852164795123410604604433e-6, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, .18e-10, .9e-11, .187350425506628957387706507015e-5, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { .400000000000133333333333386668e-11, 4.00000200000399999900000266667, 4.00000000000133333233333386668, 4.00000200000399999900000266667, 2000003.99999900000533333341667, 2000000000001.99999800000133333, 4.00000000000133333233333386668, 2000000000001.99999800000133333, -.999999999999500000000000041667e-6 };
  double hres[9] = { .174994965078217937167839035882e-6, -.702564786200612682420672151290e-6, -.468375477007224174872648770228, -.702564786200612682420672151290e-6, -.349993473002375802973473486993, .145830831563475016366039320700e-6, -.468375477007224174872648770228, .145830831563475016366039320700e-6, -349992.977181426584667585110495 };
  adreal<3,DO_HESS_TEST,double> ad1(-.349993852164795120410604604433e-6, g1,h1), ad2(2.00000100000066666616666693334, g2,h2), adresMaple(-.174996838583918149648038795555e-6, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { .936753064285272320083319473608, -.349993502162292952117652486781, -.699987004342585901235304973562 };
  double g2  [3] = { 4.00000000000187363563920200640, 2000000000003.08060461173761276, 1999999.99999982519568185903683 };
  double gres[3] = { .468376882136191323069302318159e-6, .174996751085699452385898447313, -.174996576088905326650865449912e-6 };
  double h1  [9] = { .349993852164795123410604604433, .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, .18e-4, .9e-11, 1.87350425506628957387706507015, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { .400000000000133333333333386668e-5, 4000000.00000508060461173894610, 4.00000000000049186234852597017, 4000000.00000508060461173894610, 5080604.61174161276813521108157, 2000000000000.31705803038554032, 4.00000000000049186234852597017, 2000000000000.31705803038554032, -.540302305868139717400936607443e-6 };
  double hres[9] = { .174995052575184824590224440684e-6, -.468376413760187660100971573554, .468375945383658711949095309583e-6, -.468376413760187660100971573554, -349993.502171271512662787427840, .174996751085688730784092548615, .468375945383658711949095309583e-6, .174996751085688730784092548615, -.349993538728066442905888808932e-12 };
  adreal<3,DO_HESS_TEST,double> ad1(-.349993852164795120410604604433, g1,h1), ad2(2000000.00000120696897253507306, g2,h2), adresMaple(-.174996926082290165911070875142e-6, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 93.6752136900666062269980404460, -.349993502081292952117652486781, -6.99987004342585903935304973562 };
  double g2  [3] = { 40.0000000000124942618042622143, 20000000000018.3218569418604284, 2000000.00000121068777755630315 };
  double gres[3] = { .468376418442267877412731601399e-5, 1.74996751085168900948411461651, -.174996749335037124331985947308e-6 };
  double h1  [9] = { 34.9993505671227973830582007958, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, .180e-3, .9e-11, 18.7350425506628957387706507015, .9e-11, -.699987004342585904235304973562 };
  double h2  [9] = { .400000000000133333333333386668e-4, 40000000.0000383218569418737618, 4.00000000000187735444422323649, 40000000.0000383218569418737618, 38321856.9419004284288156507712, 2000000000003.08804222178007296, 4.00000000000187735444422323649, 2000000000003.08804222178007296, .839071529076452452258863947824e-6 };
  double hres[9] = { .174994879337381347088680987029e-5, -4.68376413755927641627516231611, .468376409071723849748200979181e-6, -4.68376413755927641627516231611, -3499935.02169149321179727281166, .174996751084097085344474464587, .468376409071723849748200979181e-6, .174996751084097085344474464587, -.349812903244688527217999544614e-15 };
  adreal<3,DO_HESS_TEST,double> ad1(-34.9993505671227973530582007958, g1,h1), ad2(20000000.0000058275951375928809, g2,h2), adresMaple(-.174996752835384360364918613491e-5, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 936752127534.081539066065679862, 8999999.65000649782870704788235, -699984.004342585904235304973562 };
  double g2  [3] = { 6229630898620.54567415543237463, 6851037641631393026.13842415667, 3114815799303.30663230690173257 };
  double gres[3] = { .300741036751426944875028346819e-6, .247145694907700537423102493564e-6, -.112364109058890269486242779783e-12 };
  double h1  [9] = { 349993502171.642945619823779733, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, 18000000., 9., 1873504.25506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { 6229630.89861960892202789922984, 13702075283260.9125480217820238, 6229631.24861311109332085134749, 13702075283260.9125480217820238, 21339717889952508469.4157567441, 6851038341616.52386446926210240, 6229631.24861311109332085134749, 6851038341616.52386446926210240, -936752.127533144786938532535075 };
  double hres[9] = { .112362918720766871437842972206e-6, -.661480012769365929521800839455e-6, .300741002960319517057900623008e-12, -.661480012769365929521800839455e-6, -.317384072686593007201150298793e-6, .247144893626007288542366885070e-12, .300741002960319517057900623008e-12, .247144893626007288542366885070e-12, -.337921875427284088375691971368e-19 };
  adreal<3,DO_HESS_TEST,double> ad1(-349990502171.642945619823779733, g1,h1), ad2(3114815449310741213.14148275971, g2,h2), adresMaple(-.112363158545745869802344431150e-6, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 1.87350425506628957387706507015, -9.34999350217129295211765248678, 3.69998700434258590423530497356 };
  double g2  [3] = { -6229630.35831730305388818182890, -6851036561024.90778560392306523, 3114816290780.78926891045626742 };
  double gres[3] = { -.601484104119019350087691108771e-12, .389066680783731635750300984125e-12, .526953754001039360622129256452e-18 };
  double h1  [9] = { .699987004342585904235304973562, .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, -18., 9., -1.87350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { -6.22963089861960892202789922984, -13702074.2026544273074872809323, 6229631.74009059372992440588234, -13702074.2026544273074872809323, -21339716809346.0232288812556526, 6851039324571.48913767637117210, 6229631.74009059372992440588234, 6851039324571.48913767637117210, -540302.305868139717400936607443 };
  double hres[9] = { -.224725876416764840075763634686e-12, .102221764492825783760484826020e-11, -.266826869486888721481496627110e-18, .102221764492825783760484826020e-11, -.407079516234096990657101999875e-11, .112364208643185927094102190741e-12, -.266826869486888721481496627110e-18, .112364208643185927094102190741e-12, .224729130209031878750822404387e-12 };
  adreal<3,DO_HESS_TEST,double> ad1(-3.69998700434258590423530497356, g1,h1), ad2(-3114814909007.49859287423221398, g2,h2), adresMaple(-3.14159265358860537108932278172, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { .936752127534081539066065679862, -.349984502171292952117652486781, 2.99999930001299565741409576470 };
  double g2  [3] = { 7.22963089861910892202789927151, 8851037.64162851952188335795043, 3114815449308.80446101394978159 };
  double gres[3] = { .227653646682048384839905111198e-6, .979025654340101576976856674539e-7, .643861968787333272948580096171e-1 };
  double h1  [9] = { .349993502171642945619823779733, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, .18e-4, 9., .187350425506628957387706507015e-5, 9., -.699987004342585904235304973562 };
  double h2  [9] = { .622963089861960892202789922984e-5, 15.7020752832580390437667158175, 6229630.89861860892202789939651, 15.7020752832580390437667158175, 23339717.8899496349651606905378, 6851037641627.51952188335820043, 6229630.89861860892202789939651, 6851037641627.51952188335820043, -999999.999999500000000000041667 };
  double hres[9] = { .850561136410815134121644492210e-7, -.262033195419600315214929391617e-6, -.172328270886043767790109797433, -.262033195419600315214929391617e-6, .612729224777798325165301855234e-7, -.709876195499281243739813414395e-1, -.172328270886043767790109797433, -.709876195499281243739813414395e-1, -97477.5774180451406878854338669 };
  adreal<3,DO_HESS_TEST,double> ad1(-.349990502171642945619823779733, g1,h1), ad2(4114815.44930930446101394965659, g2,h2), adresMaple(-.850561845320158960788397309061e-7, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 1.87350425506628957387706507015, 8.65000649782870704788234751322, 2.30001299565741409576469502644 };
  double g2  [3] = { 6229631.43892191479016761663078, 6851038722234.13125816279266897, 3114814607838.81965311744296242 };
  double gres[3] = { .601480042894606149698128246749e-12, .115291793226007101219107529465e-11, .327568621172518601209749821393e-18 };
  double h1  [9] = { .699987004342585904235304973562, .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, 18., 9., 1.87350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { 6.22963089861960892202789922984, 13702076.3638636507800461505361, 6229630.05714862411413139257734, 13702076.3638636507800461505361, 21339718970555.2467014401252564, 6851035958687.54990609034456210, 6229630.05714862411413139257734, 6851035958687.54990609034456210, -540302.305868139717400936607443 };
  double hres[9] = { .224725798465926230961357299914e-12, -.102222033263574317932418197419e-11, .266824120783500839443651161172e-18, -.102222033263574317932418197419e-11, -.435173201699271194909469158590e-11, .112364548293182848055691720272e-12, .266824120783500839443651161172e-18, .112364548293182848055691720272e-12, -.224728731438123986731024176895e-12 };
  adreal<3,DO_HESS_TEST,double> ad1(2.30001299565741409576469502644, g1,h1), ad2(3114815989612.11032915366701586, g2,h2), adresMaple(.738410552446096798771881864793e-12, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 94.6119648808476234807917860426, 89.6500064978287070478823475132, -3.99987004342585904235304973562 };
  double g2  [3] = { 62296308.1471245601438265400395, 68510374738152.1370659286741533, 3114815993330.91535038376301967 };
  double gres[3] = { .303748262675289375308140749358e-11, .325591978855534585012089362048e-11, -.111240480002200672077114633273e-12 };
  double h1  [9] = { 35.3493437193005881638829011649, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, 180., 9., 18.7350425506628957387706507015, 9., -.699987004342585904235304973562 };
  double h2  [9] = { 62.2963089861960892202789922984, 137020751.154447332284762252824, 6229631.44264071981139771263459, 137020751.154447332284762252824, 213397177221363.291498702000027, 6851038729671.74130062298467660, 6229631.44264071981139771263459, 6851038729671.74130062298467660, 839071.529076452452258863947824 };
  double hres[9] = { .113486550965547576773069139912e-11, -.665087576274909921958618206905e-11, .297733573172143411896989133519e-12, -.665087576274909921958618206905e-11, -.736737131624289178050081262046e-11, .245797056783981490135359609900e-12, .297733573172143411896989133519e-12, .245797056783981490135359609900e-12, -.224719830457567486384942636400e-15 };
  adreal<3,DO_HESS_TEST,double> ad1(-5.3493437193005881638829011649, g1,h1), ad2(31148153654026.5155336870438903, g2,h2), adresMaple(-.171738709739191221094502249910e-12, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 936752127542.512308213863982944, 899999999.650006497828707047882, -696987.004342585904235304973562 };
  double g2  [3] = { 2593443309930.02189778981421073, 2840743525185598156.34115753065, 1296756654268.39047181346163127 };
  double gres[3] = { .722400846711309181683601586115e-6, .586912990935642426882462154685e-6, -.269899199464032718465768617799e-12 };
  double h1  [9] = { 349993502174.792887139365416302, .936752127533144786938532535075, 1873504.25506628957387706507015, .936752127533144786938532535075, 180000000., 900., 1873504.25506628957387706507015, 900., -.699987004342585904235304973562 };
  double h2  [9] = { 2593443.30983634668503649973204, 5681487050352.46127013165216555, 2593478.30918656381433171149729, 5681487050352.46127013165216555, 3683653645154333844.90060146618, 2840750525036.90653964953698796, 2593478.30918656381433171149729, 2840750525036.90653964953698796, -93675212.7533144786938532535075 };
  double hres[9] = { .269903532351621003256148091961e-6, -.158257211310607990918629558084e-5, .722381353305998667739633235751e-12, -.158257211310607990918629558084e-5, -.181121291844743766528110780499e-5, .591256984071576311381925207054e-12, .722381353305998667739633235751e-12, .591256984071576311381925207054e-12, -.193309189742261883303106008696e-16 };
  adreal<3,DO_HESS_TEST,double> ad1(-346993502174.792887139365416302, g1,h1), ad2(1296721655011848555.27156434471, g2,h2), adresMaple(-.267592895386337953661119847033e-6, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 10.3042734028645926563238578858, -900.349993502171292952117652487, 3000.69998700434258590423530497 };
  double g2  [3] = { -2593389.27960575987106475963838, -2840732719120.74575099614661618, 1296805802016.65413216891511625 };
  double gres[3] = { -.795136782286189814261081282832e-11, -.438082109121081176108496982894e-8, .267612297659548981043113210378e-11 };
  double h1  [9] = { 3.84992852388422247329417735459, .936752127533144786938532535075, -1.87350425506628957387706507015, .936752127533144786938532535075, -180., 900., -1.87350425506628957387706507015, 900., -.699987004342585904235304973562 };
  double h2  [9] = { -2.59344330983634668503649973204, -5681476.24428760886478664125108, 2593527.45693482747468716498227, -5681476.24428760886478664125108, -3683652564547.84860436610037474, 2840760354586.55927172062768496, 2593527.45693482747468716498227, 2840760354586.55927172062768496, -54030230.5868139717400936607443 };
  double hres[9] = { -.296906255281542003231595710860e-11, .166959964975813767894034925587e-10, -.650272614674571978078645569698e-11, .166959964975813767894034925587e-10, .127526615223364974103694959310e-7, -.601038115410656078029003248914e-11, -.650272614674571978078645569698e-11, -.601038115410656078029003248914e-11, .579612266381510293008924421754e-11 };
  adreal<3,DO_HESS_TEST,double> ad1(-3003.84992852388422247329417735, g1,h1), ad2(-1296667624687.58652854650977236, g2,h2), adresMaple(-3.14159265127320117482750883163, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 9.36752127533238462151285849554, -.349093502171292952117652486781, 2999.99999930001299565741409576 };
  double g2  [3] = { 102.593443309786346685036503899, 22840743.5251568631137904954682, 1296721654818.17334251826653269 };
  double gres[3] = { .924760906769408889741351642225e-7, .433782834421280878149821258790e-8, .471535850201494960715129182626e-3 };
  double h1  [9] = { 3.49993502171327951467869616076, .936752127533144786938532535075, .187350425506628957387706507015e-5, .936752127533144786938532535075, .180e-3, 900., .187350425506628957387706507015e-5, 900., -.699987004342585904235304973562 };
  double h2  [9] = { .259344330983634668503649973204e-5, 25.6814870503237262275809901031, 2593443.30973634668503651639871, 25.6814870503237262275809901031, 5683653.64515146034064553525994, 2840743525146.86311379049796824, 2593443.30973634668503651639871, 2840743525146.86311379049796824, -99999999.9999500000000000041667 };
  double hres[9] = { .345511285030228917635824192472e-7, -.116042264852080445049882248371e-7, -.118380640774169054680059498642e-2, -.116042264852080445049882248371e-7, -.174641791055373540632074385166e-10, .815150862116457341957208222603e-3, -.118380640774169054680059498642e-2, .815150862116457341957208222603e-3, -12.0724686853884796755117978395 };
  adreal<3,DO_HESS_TEST,double> ad1(-3.49693502171327951467869616076, g1,h1), ad2(101296721.654868173342518254033, g2,h2), adresMaple(-.345216998594269956468012683375e-7, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 10.3042734028645926563238578858, 899.650006497828707047882347513, 2999.30001299565741409576469503 };
  double g2  [3] = { 2593497.34006693349900823982570, 2840754331212.98047658484265364, 1296637507819.69255286758461579 };
  double gres[3] = { .794145151354763958837999127006e-11, -.436760426853484452375078152139e-8, .267524671727988687144757914607e-11 };
  double h1  [9] = { 3.84992852388422247329417735459, .936752127533144786938532535075, 1.87350425506628957387706507015, .936752127533144786938532535075, 180., 900., 1.87350425506628957387706507015, 900., -.699987004342585904235304973562 };
  double h2  [9] = { 2.59344330983634668503649973204, 5681497.85637984359037533728854, 2593359.16273786589538583448181, 5681497.85637984359037533728854, 3683654725757.07207692496997848, 2840726695747.16695586036158486, 2593359.16273786589538583448181, 2840726695747.16695586036158486, -54030230.5868139717400936607443 };
  double hres[9] = { .296881516959024201402881068632e-11, -.166757908976703306610313169210e-10, -.650049082101974884110513735646e-11, -.166757908976703306610313169210e-10, .127112498216687306746633791655e-7, -.600672768885353453233227510085e-11, -.650049082101974884110513735646e-11, -.600672768885353453233227510085e-11, -.579344816892251533461097336288e-11 };
  adreal<3,DO_HESS_TEST,double> ad1(2996.15007147611577752670582265, g1,h1), ad2(1296775685148.76015648998995968, g2,h2), adresMaple(.231046132788371273594266518728e-8, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 103.042734028645926563238578858, 8999.65000649782870704788234751, 2993.00012995657414095764695026 };
  double g2  [3] = { 25934349.1912105592051197714340, 28407418470238.0496088559011718, 1296776057029.26227949959034079 };
  double gres[3] = { .794183368646642012354267650799e-11, -.436779300764977386252822324738e-8, -.254106207700403766634762978701e-12 };
  double h1  [9] = { 38.4992852388422247329417735459, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, 1800., 900., 18.7350425506628957387706507015, 900., -.699987004342585904235304973562 };
  double h2  [9] = { 25.9344330983634668503649973204, 56814853.7219066807467608475208, 2593497.71194743562201784020681, 56814853.7219066807467608475208, 36836534773381.5452535504472484, 2840754405589.08090118676272986, 2593497.71194743562201784020681, 2840754405589.08090118676272986, 83907152.9076452452258863947824 };
  double hres[9] = { .296895808110737810530462276194e-11, -.173275191979601660544210373279e-10, .650126526452130138302511602119e-12, -.173275191979601660544210373279e-10, .127122908388975761510457669938e-7, .578288934576042029445883000504e-12, .650126526452130138302511602119e-12, .578288934576042029445883000504e-12, -.181090826148854460302468723748e-13 };
  adreal<3,DO_HESS_TEST,double> ad1(29961.5007147611577752670582265, g1,h1), ad2(12967132642028.8257799372727738, g2,h2), adresMaple(.231057254844841384835565394740e-8, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 540302846170.445585540654008380, 8999999999999999999.15852901519, 2999999999998317058.03038420699 };
  double g2  [3] = { 936753622030.960737334649229063, 405686.21016877343430675418196, -349993502172.040201025627684839 };
  double gres[3] = { -.312251207343797399336606084198e-12, -.107198161150554067131015413536e-17, .116664188473087862954450388529e-12 };
  double h1  [9] = { 841471826278.881314549008974132, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18000000000000., 9000000000000., 1080604.61173627943480187321489, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { -1494497.81595039611669398835430, -2684876.67540383644249057343407, 349993502172.787449933602882898, -2684876.67540383644249057343407, -1703124.45971863951353128064744, -699984.725152120669172296789743, 349993502172.787449933602882898, -699984.725152120669172296789743, 936752127533.144786938532535075 };
  double hres[9] = { .498165963540287766711797e-18, .183171251383337785509284637897e-17, -.116664188473108874341713081110e-12, .183171251383337785509284637899e-17, .567712711623625211207512934566e-18, -.116664188473186033025309787720e-18, -.116664188473108874341713081113e-12, -.116664188473186033025309787723e-18, -.312250942506179458481293176325e-12 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999158528173721.11869, g1,h1), ad2(-936752874782.052762136590882069, g2,h2), adresMaple(1.57079632679520887018958246348, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 540302.846170445585540654008380, -9000000000000.84147098480789651, 3000000000000000001.68294196962 };
  double g2  [3] = { 540302305866.645219584986211326, -1080606.89092674466986488139871, -841470984808.643755560477519688 };
  double gres[3] = { .180100768622126278501277337437e-6, .180100008891653520535676554665e-12, -.460591096891817426869184057640e-6 };
  double h1  [9] = { 841471.826278881314549008974132, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -18000000., 9000000000000., -1.08060461173627943480187321489, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { 1.49449781595039611669398835430, 1080609.17011720990492788958253, 841470984809.391004468452717747, 1080609.17011720990492788958253, .62251797447810501243983355548, -1682939.69042532777824199645944, 841470984809.391004468452717747, -1682939.69042532777824199645944, 540302305868.139717400936607443 };
  double hres[9] = { .524205603399209567e-18, -.180099249160642201106510288491e-12, .460591096891672157991351859336e-6, -.180099249160642201106510288483e-12, .207510549877073049734863899063e-18, .460591096891428131499058694295e-12, .460591096891672157991351859328e-6, .460591096891428131499058694309e-12, -.74108142516064317578854342299e-6 };
  adreal<3,DO_HESS_TEST,double> ad1(-3000000000000841471.82627888131, g1,h1), ad2(-540302305867.392468492961409385, g2,h2), adresMaple(-1.57079650689566524164301401500, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 540302.305868139717941238913311, 8999999.15852901519210349334750, 2999999999999999999.99999831706 };
  double g2  [3] = { 999999999999.500001494497857617, -1999999.99999672080953476502032, 999999.252750925358135274994673 };
  double gres[3] = { -.300000121347829396071763123316, -.300000235612537218216986483950e-6, -300000.151465012495142199536197 };
  double h1  [9] = { 841470.984807896507493973306438, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, 18.000000, 9000000000000., .108060461173627943480187321489e-5, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 1999999.99999444161906952995731, -999998.505502017382937216647679, 1999999.99999444161906952995731, -2.00000170312158621438444732504, 4.27919046523472967485048593544, -999998.505502017382937216647679, 4.27919046523472967485048593544, 999999999999.500000000000041667 };
  double hres[9] = { -.60000041455155378207545472088e-1, .240000309482548368339512989027e-6, 240000.188133568184103068023765, .240000309482548368339512989027e-6, .540001375973261845548586310706e-12, .240000393808720901068434174454, 240000.188133568184103068023765, .240000393808720901068434174454, 540000393808.622422727616541102 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999158529.01519210349250603, g1,h1), ad2(-999999999999.500000747248949642, g2,h2), adresMaple(1.89254696533850853582060494705, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 540302.846170445585540654008380, 8999999999999.15852901519210349, 2999999999999999998.31705803038 };
  double g2  [3] = { 540302305869.634215216887003560, -1080602.33254581419973886503107, 841470984807.149257744527123572 };
  double gres[3] = { -.180100768623288516165625206008e-6, -.180101528353761274557420742594e-12, -.460591096892176842769888984604e-6 };
  double h1  [9] = { 841471.826278881314549008974132, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 18000000., 9000000000000., 1.08060461173627943480187321489, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { -1.49449781595039611669398835430, 1080600.05335534896467585684725, -841470984806.402008836551925513, 1080600.05335534896467585684725, -2.78372719795066388204357998526, 1682944.24880625824836801282708, -841470984806.402008836551925513, 1682944.24880625824836801282708, 540302305868.139717400936607443 };
  double hres[9] = { .500838402621824214e-18, .180102288084749227485661005334e-12, .460591096892262352187948554772e-6, .180102288084749227485661005344e-12, .927913624368197749390505376430e-18, .460591096892506379106435895018e-12, .460591096892262352187948554776e-6, .460591096892506379106435894995e-12, .74108142516177773951865613618e-6 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999158528.17372111869, g1,h1), ad2(-540302305868.886966308911805501, g2,h2), adresMaple(1.57079650689566524224221310211, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 540356.336098726531372676701104, 89999999999999.1585290151921035, 2999999999999999983.17058030384 };
  double g2  [3] = { -839071529061.507474099359986657, 1678165.85005755725514780973384, -544021110890.117062312722859909 };
  double gres[3] = { .279690509687181822824331257879e-7, .279682912383150864079332673801e-13, .209309421265678178414487359078e-7 };
  double h1  [9] = { 841555.131906377296303167571862, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 180000000., 9000000000000., 10.8060461173627943480187321489, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { -14.9449781595039611669398835430, -1678188.64196220960577789157204, 544021110890.864311220698057968, -1678188.64196220960577789157204, -15.3530828039909395678993398080, -1088039.94258827439174648713988, 544021110890.864311220698057968, -1088039.94258827439174648713988, -839071529076.452452258863947824 };
  double hres[9] = { .4979867302456362749e-18, -.279675315074142267295953439689e-13, -.209309421265682124672559411343e-7, -.279675315074142267295953439684e-13, .511773985183623604592087718679e-18, -.209309421265691163319269202979e-13, -.209309421265682124672559411344e-7, -.209309421265691163319269202984e-13, .237828625439021879760247508268e-7 };
  adreal<3,DO_HESS_TEST,double> ad1(29999999999999158444.8680936227, g1,h1), ad2(839071529068.979963179111967241, g2,h2), adresMaple(1.57079629882584565026454562882, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 540302305867.599415095068467726, 8999999.15852901519210349334750, -1682944.96961579301330500464326 };
  double g2  [3] = { 6229631.83537173645517268616837, 6851039.51513377458817293174417, -3.46480895148109741313160210170 };
  double gres[3] = { .502646361093307817732544082399e-5, .814167321172709469675495908306e-5, .328567818574571013834115064894e-11 };
  double h1  [9] = { 841470984807.055035667694425123, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, -18000000., 9., 1080604.61173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -6229630.89861960892202789922984, -13702077.1567632941100562896113, 6.57962440079090187414555171662, -13702077.1567632941100562896113, -21339719.7634548900314502643316, 7.55102464597210542611866284066, 6.57962440079090187414555171662, 7.55102464597210542611866284066, .936752127533144786938532535075 };
  double hres[9] = { -.464995530639226583424840975129e-5, -.110556800046181627805625919921e-4, -.487758952076763104465243433789e-11, -.110556800046181627805625919920e-4, -.253596747716331772883984570468e-4, -.730975310517783736736537409789e-11, -.487758952076763104465243433794e-11, -.730975310517783736736537409799e-11, .111322193533352481583356222147e-11 };
  adreal<3,DO_HESS_TEST,double> ad1(-841473984807.055035667694425123, g1,h1), ad2(-3114816.38606193199415873655345, g2,h2), adresMaple(-1.57080002841424824055853115972, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 0., -9.84147098480789650665250232163, -1.31705803038420698669499535674 };
  double g2  [3] = { -5.68932859275146920462696262240, -5.77043302989324008708148465221, -3.95628643411770096766645193655 };
  double gres[3] = { 1.09213315764195375927331867704, -.513542152013217758626002169157, .542488617806139204078357093430 };
  double h1  [9] = { 0., .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., -1.08060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, 12.6214706715227596089648425193, 7.07110188342750542868040155147, 12.6214706715227596089648425193, 20.2591132782143555303588172396, 8.53397961124531253518836251036, 7.07110188342750542868040155147, 8.53397961124531253518836251036, .540302305868139717400936607443 };
  double hres[9] = { .85132482753613384657233073871, .28627911678560271989876669515, -.3904669515183425274005232632e-1, .28627911678560271989876669511, -3.84042315756520046354078360093, .920443185180612901645344853617, -.3904669515183425274005232632e-1, .920443185180612901645344853635, .600476581847369024294819073523 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(2.57451314344166474361301300748, g2,h2), adresMaple(.861577634033237696575326781475, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -.540302305867599415095068467726, -.841461984807896506652502321630, -3.00000168294196961579301330500 };
  double g2  [3] = { 1.00000622963039861960892206957, 2.00000685103664162951952196669, -3.11481444930980446118061628159 };
  double gres[3] = { -.176320892654156428586577711224, -.492646591186217084175655371870, 3.29085607155530924908523260252 };
  double h1  [9] = { -.841470984807055035667694425123, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, -.18e-4, 9., .108060461173627943480187321489e-5, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -.622963089861960892202789922984e-5, -2.00001370207428325903904385005, 6.22962989861960892219456589651, -2.00001370207428325903904385005, -2.00002133971688995063496524402, 6.85103564162951952221669120043, 6.22962989861960892219456589651, 6.85103564162951952221669120043, .999999999999500000000000041667 };
  double hres[9] = { .192325443572109019679239592124, -.30138304758834014422126856830e-1, -.205416709303358760110937840322, -.30138304758834014422126856833e-1, -.576835045579006160383319778759, -3.25641381481310607613248941907, -.205416709303358760110937840299, -3.25641381481310607613248941905, -1.7824088210071440381674004835 };
  adreal<3,DO_HESS_TEST,double> ad1(.841467984807055035667694425123, g1,h1), ad2(-1.00000311481494930980446105562, g2,h2), adresMaple(2.44207430009823633679683728484, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 0., 8.15852901519210349334749767837, -4.68294196961579301330500464326 };
  double g2  [3] = { 6.76993320448774863942883583728, 7.93164225336579895668523108199, -2.27334446450190795436144729329 };
  double gres[3] = { .908314102822154682451796397960, -.269476219700965214676645282259, .460497474641082080520819418604 };
  double h1  [9] = { 0., .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, -18., 9., 1.08060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -6.22963089861960892202789922984, -14.7826798949953184785685889491, 5.38815991381171241537539690821, -14.7826798949953184785685889491, -22.4203225016869143999625636694, 5.16809567201372650857835322384, 5.38815991381171241537539690821, 5.16809567201372650857835322384, .540302305868139717400936607443 };
  double hres[9] = { 1.17457648816055844696669734541, -.197967809887094356781857612149, .147651426707878586416236187803, -.197967809887094356781857612154, -1.35442740058336244316180917801, .592779853102827805058090185803, .147651426707878586416236187799, .592779853102827805058090185807, -.573325891648283332444536544128 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(-3.65511775517794417841488622236, g2,h2), adresMaple(-2.45431655958364165715991790358, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 53.4899282809458320226927241369, 89.1585290151921034933474976784, -19.8294196961579301330500464326 };
  double g2  [3] = { 61.4572374571196367680201283506, 66.8322333581422903143158507754, -3.65883656019917427441869727677 };
  double gres[3] = { .388332893854003710440789016713, .354017857013723722462803118583, .135529103170970796497064419463e-1 };
  double h1  [9] = { 83.3056274959817541585977298414, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, -180., 9., 10.8060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -62.2963089861960892202789922984, -135.342609774437485533149429446, 6.77365200950897873543264689169, -135.342609774437485533149429446, -211.719035841353444747089176649, 7.93907986340825914869285319080, 6.77365200950897873543264689169, 7.93907986340825914869285319080, -.839071529076452452258863947824 };
  double hres[9] = { -.249301220399338529783576205078, -.569667406284539449792749341859, -.267655186432094761239733958486e-1, -.569667406284539449792749341859, -.723017922540099542429940012226, -.31645156242249873554224462829e-2, -.267655186432094761239733958496e-1, -.31645156242249873554224462839e-2, -.784847688632298559383144951861e-2 };
  adreal<3,DO_HESS_TEST,double> ad1(-113.305627495981754158597729841, g1,h1), ad2(-30.3090829640215921578806322014, g2,h2), adresMaple(-1.83217514543474808973155049666, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 540302305868.139717941238913311, -.841461984807896506652502321630, -1682941.96961579301330500164326 };
  double g2  [3] = { -4.00000000000039658120580072189, 2000000.00000012649574493504376, .199999965000716449537371481569e-5 };
  double gres[3] = { -.322746097864790325598478596066e-11, .237679021155639275469382151320e-5, -.237679062748537326001809391988e-17 };
  double h1  [9] = { 841470984807.896507493973306438, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18.000000, .9e-11, 1080604.61173627943480187321489, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { 4.00000000000133333333333386668, -4000000.00000212649574493637710, -.399999965000783116204038174903e-5, -4000000.00000212649574493637710, 2.12649574493904375945627279653, 1.99999930001499565741409709803, -.399999965000783116204038174903e-5, 1.99999930001499565741409709803, .936752127533144786938532535075e-12 };
  double hres[9] = { .298571290945797634699068633815e-11, -.322746097864965645958428855385e-5, .322746112751212530016115900523e-17, -.322746097864965645958428855383e-5, .252711238223796725e-11, -.237679104341529635091686201858e-11, .322746112751212530016115900522e-17, -.237679104341529635091686201860e-11, .586681373051728180525814730929e-23 };
  adreal<3,DO_HESS_TEST,double> ad1(-841470984807.896507493970306438, g1,h1), ad2(1.99999999999972991453913378855, g2,h2), adresMaple(-1.57079632679251982901976577018, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { .540302846170445585540654008380, -.841470984816896506652502321630, 1.68294196961579301630500464326 };
  double g2  [3] = { .400000054030363920147305126762e-5, -2.00000108060661173627943613520, .199999915852968185877016028084e-5 };
  double gres[3] = { .322745798098177687529312455498e-5, -2.37678674215520526594219984061, -.237678536536652069137035308196e-5 };
  double h1  [9] = { .841471826278881314549008974132, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -.18e-4, .9e-11, -1.08060461173627943480187321489, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { -.400000000000133333333333386668e-5, 4.00000108060861173627943746854, -.399999915853034852543682721418e-5, 4.00000108060861173627943746854, -1.08060861173627944013520654823, 1.99999831706003038420698802833, -.399999915853034852543682721418e-5, 1.99999831706003038420698802833, .540302305868139717400936607443e-12 };
  double hres[9] = { -.298571027065633280189486457951e-5, 3.22745498330216906415229740922, .322745211375229008850327171760e-5, 3.22745498330216906415229740919, 3.46940688309414292012682, -2.37678051917248002499725313280, .322745211375229008850327171756e-5, -2.37678051917248002499725313280, -.475355911209200726500534085461e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841471826278881317549008974132, g1,h1), ad2(-.200000054030297253480638433428e-5, g2,h2), adresMaple(-1.57079870358337347592949178430, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { .540302846170445585540654008380e-6, -.841470984807896497652502321630, -.168294196961279301330500464326e-5 };
  double g2  [3] = { -.300000000000183333333333382501e-11, .300000000000125000e-17, .200000000000166666666666676667e-5 };
  double gres[3] = { -.280212279297627228540896395394e-5, -1.18839272898761776937219221644, 2.37678545798157366082129533367 };
  double h1  [9] = { .841471826278881314549008974132e-6, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .18e-10, .9e-11, .108060461173627943480187321489e-5, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-11, -.200000000000500000000000258334e-5, -.400000000000233333333333370001e-5, -.200000000000500000000000258334e-5, -1.99999999999499999999999475000, 2.00000000000400000000000100000, -.400000000000233333333333370001e-5, 2.00000000000400000000000100000, .999999999999500000000000041667e-12 };
  double hres[9] = { .23435248782742408229957862307e-5, .42533215607966288283955545852, -3.22745214693060655061704475691, .42533215607966288283955545854, -4.75357031134122517837593, 7.13036110668024634551902, -3.22745214693060655061704475701, 7.13036110668024634551901, -11.88393002109928880617561 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841471826278881311549008974132e-6, g1,h1), ad2(.100000000000116666666666689167e-11, g2,h2), adresMaple(-1.57079513840097923420047418805, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { .540302846170445585540654008380, -.841470984798896506652502321630, -1.68294196961579301030500464326 };
  double g2  [3] = { -.399999945969902746519361646574e-5, 1.99999891939738826372056653146, .200000084147165147456317358584e-5 };
  double gres[3] = { -.322745752136285953476244149794e-5, 2.37678417378859417598568757565, -.237678079700319375948079626486e-5 };
  double h1  [9] = { .841471826278881314549008974132, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, .18e-4, .9e-11, 1.08060461173627943480187321489, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-5, -3.99999891939938826372056786480, -.400000084147231814122984051918e-5, -3.99999891939938826372056786480, -1.08060061173627942946853988155, 2.00000168294396961579301463833, -.400000084147231814122984051918e-5, 2.00000168294396961579301463833, .540302305868139717400936607443e-12 };
  double hres[9] = { .298570957670821118322806194760e-5, -3.22745406406479407040763419314, .322745047870132240639527261183e-5, -3.22745406406479407040763419312, -6.03776964144506271072596, -2.37677138245296303115688748828, .322745047870132240639527261177e-5, -2.37677138245296303115688748825, .475354469120624769435694399676e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841471826278881311549008974132, g1,h1), ad2(.199999945969836079852694953240e-5, g2,h2), adresMaple(-1.57079395000770394648081211083, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 54.0302311271162776082333781452, -.841470984717896506652502321630, -16.8294196961579301300500464326 };
  double g2  [3] = { -.400000008390848624097857909257e-4, 20.0000016781630581529049178510, .199999945597955577729685352859e-5 };
  double gres[3] = { -.322746098206219061367064267435e-6, .237679036345237815897674276973, -.237679098619491014887763304063e-7 };
  double h1  [9] = { 84.1470993222606354731467388155, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, .180e-3, .9e-11, 10.8060461173627943480187321489, .9e-11, -1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-4, -40.0000016781830581529049311844, -.399999945598022244396352046193e-5, -40.0000016781830581529049311844, 1.67818305815290495785106122903, 1.99999891195977822126037452383, -.399999945598022244396352046193e-5, 1.99999891195977822126037452383, -.839071529076452452258863947824e-12 };
  double hres[9] = { .298571293348475744899497916677e-6, -.322746098547804881846164473106, .322746118459271322169352088569e-7, -.322746098547804881846164473108, .15189837597692847204602e-1, -.237679176083422659854473763327e-1, .322746118459271322169352088572e-7, -.237679176083422659854473763328e-1, .475357335075095821228411299130e-8 };
  adreal<3,DO_HESS_TEST,double> ad1(-84.1470993222606354431467388155, g1,h1), ad2(.200000008390781957431191215923e-4, g2,h2), adresMaple(-1.57079608911586786883762959672, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 540302305868.680019706804747160, 8999999.15852901519210349334750, -1682938.96961579301330500464326 };
  double g2  [3] = { -6229629.96186748138888311229131, 6851035.76812526445559378399003, 2.76482194713851150889629712814 };
  double gres[3] = { -.502648170727328866170870824145e-5, .814180599441007369708467894275e-5, -.411758765087329239544866789290e-11 };
  double h1  [9] = { 841470984808.737977637310218137, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18000000., 9., 1080604.61173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { 6229630.89861960892202789922984, -13702073.4097547839774771418571, -5.87963739644831596991024674306, -13702073.4097547839774771418571, 21339716.0164463798988711165774, 6.15105063728693361764805289354, -5.87963739644831596991024674306, 6.15105063728693361764805289354, .936752127533144786938532535075 };
  double hres[9] = { .464998939088429007290739443059e-5, -.110557766461436705536166703230e-4, .517535495436208111208528545225e-11, -.110557766461436705536166703228e-4, .253603578306892310145500946813e-4, -.897374093066979427498376111369e-11, .517535495436208111208528545205e-11, -.897374093066979427498376111349e-11, .111324467962905638067620874176e-11 };
  adreal<3,DO_HESS_TEST,double> ad1(-841467984808.737977637310218137, g1,h1), ad2(3114814.51255767692786916267639, g2,h2), adresMaple(-1.57079262515137746450770352545, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 1.08060461173627943480187321489, -9.84147098480789650665250232163, 4.68294196961579301330500464326 };
  double g2  [3] = { 6.76993320448774863942883583728, -7.93164225336579895668523108199, 2.27334446450190795436144729329 };
  double gres[3] = { .786443749195088818358281032685, -.332017756851837806553126376577e-1, -.183360585697008355574836322694 };
  double h1  [9] = { 1.68294196961579301330500464326, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -18., 9., -1.08060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -6.22963089861960892202789922984, 14.7826798949953184785685889491, -5.38815991381171241537539690821, 14.7826798949953184785685889491, -22.4203225016869143999625636694, 5.16809567201372650857835322384, -5.38815991381171241537539690821, 5.16809567201372650857835322384, .540302305868139717400936607443 };
  double hres[9] = { .32746121877968079776410071473, .204513672477992463795977518936, -.84056058153491109345451611469e-1, .204513672477992463795977518935, -.969556790341000888943018535884, .115279754210785099569886744920, -.84056058153491109345451611466e-1, .115279754210785099569886744919, -.682301762198449990016742943995e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(-4.68294196961579301330500464326, g1,h1), ad2(-3.65511775517794417841488622236, g2,h2), adresMaple(-2.23354423465498334113976781746, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { .540302305868680019706804747160, -.841461984807896506652502321630, 2.99999831705803038420698669500 };
  double g2  [3] = { .999993770368601380391078013768, -1.99999314896135837048047819997, 3.11481644930980446084728294825 };
  double gres[3] = { .176318011402006485355863292034, -.492646503457984867266816200039, -.221871700757917363512440379006 };
  double h1  [9] = { .841470984808737977637310218137, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .18e-4, 9., .108060461173627943480187321489e-5, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { .622963089861960892202789922984e-5, 1.99998629792371674096095631661, -6.22963189861960892186123256317, 1.99998629792371674096095631661, -1.99997866028111004936503492264, 6.85103964162951952155002453377, -6.22963189861960892186123256317, 6.85103964162951952155002453377, .999999999999500000000000041667 };
  double hres[9] = { -.192326405452072365554092307867, -.30137320797077009449384416871e-1, -2.67583102387796957361264409495, -.30137320797077009449384416870e-1, .576844909795192116019015721716, -3.16870115180902703800840397526, -2.67583102387796957361264409495, -3.16870115180902703800840397526, .129051523605312244237661963513e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841467984808737977637310218137, g1,h1), ad2(-.999996885184050690195539027717, g2,h2), adresMaple(-2.44207123111298079676277764195, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 1.08060461173627943480187321489, 8.15852901519210349334749767837, 1.31705803038420698669499535674 };
  double g2  [3] = { -5.68932859275146920462696262240, 5.77043302989324008708148465221, 3.95628643411770096766645193655 };
  double gres[3] = { 1.22868609827978982164561193257, 1.60284946246517067008816758273, -.217616630906535941901607448399 };
  double h1  [9] = { 1.68294196961579301330500464326, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., 1.08060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, -12.6214706715227596089648425193, -7.07110188342750542868040155147, -12.6214706715227596089648425193, 20.2591132782143555303588172396, 8.53397961124531253518836251036, -7.07110188342750542868040155147, 8.53397961124531253518836251036, .540302305868139717400936607443 };
  double hres[9] = { 3.42283417974050208370858507321, .92725152239940186875528499183, -.649165325513551423148721448106, .92725152239940186875528499184, -7.46300153384204013683602722659, -.191810858747249667401134728859, -.649165325513551423148721448103, -.191810858747249667401134728853, .171811083419810726379478863960e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(1.31705803038420698669499535674, g1,h1), ad2(2.57451314344166474361301300748, g2,h2), adresMaple(.472865124020225947619420880590, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
}
void test5() { 
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 54.5705328926821114574945973517, 89.1585290151921034933474976784, -13.8294196961579301330500464326 };
  double g2  [3] = { -63.1353805152725416725378562462, 70.1885194744481001233513065666, 2.57079433842043464760920195307 };
  double gres[3] = { -.426537214452551439243926524104, 1.65841957389379984581327839088, -.743775683341777372202481577854e-1 };
  double h1  [9] = { 84.9885694655975471719027344846, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 180., 9., 10.8060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { 62.2963089861960892202789922984, -138.698895890743295342184885238, -5.68560978773023910862315156799, -138.698895890743295342184885238, 215.075321957659254556124632441, 5.76299541985077989507386254340, -5.68560978773023910862315156799, 5.76299541985077989507386254340, -.839071529076452452258863947824 };
  double hres[9] = { .459968932345560603197879045168, -.10313715315100910440890996189, .4708594042749309408337081622e-2, -.10313715315100910440890996189, 6.52324775797351222501588801251, -.244733226993597566163812790851, .4708594042749309408337081621e-2, -.244733226993597566163812790846, .62721350013003437796283723384e-2 };
  adreal<3,DO_HESS_TEST,double> ad1(-54.9885694655975471719027344846, g1,h1), ad2(31.9872260221744970623983600970, g2,h2), adresMaple(-1.04393629990050700961701594849, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 540302305873.542740459618004617, 899999999.158529015192103493347, -1679941.96961579301330500464326 };
  double g2  [3] = { -2593349.63462359337055780587879, 2840724.79012431245089475586426, -33.7026285622111218692469988121 };
  double gres[3] = { -.209645364146858482155236323110e-5, .338964212147983941964799380598e-5, -.432937149140759908439677422029e-10 };
  double h1  [9] = { 841470984816.311216500581286697, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 180000000., 900., 1080604.61173627943480187321489, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { 2593443.30983634668503649973204, -5681468.31529117556468525049916, 32.4059069072929485267287489461, -5681468.31529117556468525049916, 3683651.77164820527435596129954, -4.15912651825899592856255510071, 32.4059069072929485267287489461, -4.15912651825899592856255510071, 93.6752127533144786938532535075 };
  double hres[9] = { .194314783050704559193408562400e-5, -.459398564645156058872891351494e-5, .16944177910095108000790450444e-10, -.459398564645156058872891351485e-5, .44009053977724980927258096359e-5, -.11796593232880076078208048791e-10, .16944177910095108000790450443e-10, -.11796593232880076078208048791e-10, .111721642500170000091807357487e-9 };
  adreal<3,DO_HESS_TEST,double> ad1(-838470984816.311216500581286697, g1,h1), ad2(1296627.97970542002803955601277, g2,h2), adresMaple(-1.57079478037527902394103851135, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 5.94332536454953689141030268187, -900.841470984807896506652502322, 3001.68294196961579301330500464 };
  double g2  [3] = { 56.6236738966503184251301604763, -13.6467896425296574618092267838, -82.8503768258714773227319822970 };
  double gres[3] = { .187738437174460909350115045220e-1, .968587393432082443852512372129e-3, -.458556656746797970983021170819e-1 };
  double h1  [9] = { 9.25618083288686157317752553793, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -180., 900., -1.08060461173627943480187321489, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { -2.59344330983634668503649973204, 16.4875331676965205755997214187, 81.5536551709533039802137324310, 16.4875331676965205755997214187, -4.76425825688873977544740839150, -13.9886761709910670192595517977, 81.5536551709533039802137324310, -13.9886761709910670192595517977, 54.0302305868139717400936607443 };
  double hres[9] = { -.8309465030429483651835136432e-3, -.14370889050157794093581170438e-3, .457027518652095000237678129323e-1, -.14370889050157794093581170440e-3, -.106316767573208174879026555988e-2, .454789250023892310974618233735e-2, .457027518652095000237678129322e-1, .454789250023892310974618233729e-2, -.73444314689688154895353047121e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(-3009.25618083288686157317752554, g1,h1), ad2(-55.3269522417321450826119106103, g2,h2), adresMaple(-1.58917984621828887803126729076, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 5.40302305868193747631523421415, -.840570984807896506652502321630, 2999.99999831705803038420698669 };
  double g2  [3] = { 99.9999974065066901636533191302, -19.9999971592464748331368870428, 1.29682165491817332585158319935 };
  double gres[3] = { .298754776810455778617458309817e-1, -.835856519939888763071596665808e-2, -29.7881379993005959189869770383 };
  double h1  [9] = { 8.41470984807980653750983111281, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .180e-3, 900., .108060461173627943480187321489e-5, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { .259344330983634668503649973204e-5, 19.9999943185029496662737732523, -2.59354330983634666836983306537, 19.9999943185029496662737732523, -1.99999631634535484753965943779, 2.84076352516686311045716130158, -2.59354330983634666836983306537, 2.84076352516686311045716130158, 99.9999999999500000000000041667 };
  double hres[9] = { -.239550840337900056760333759469e-1, -.295149620438700324392090975277e-2, -29.6401990004634518490155398285, -.295149620438700324392090975277e-2, .165936566252685967752840245350e-2, -3.01876312211590948197298499360, -29.6401990004634518490155398285, -3.01876312211590948197298499360, -149.952145250576158281858175798 };
  adreal<3,DO_HESS_TEST,double> ad1(-8.41170984807980653750983111281, g1,h1), ad2(-99.9999987032283450818266616485, g2,h2), adresMaple(-3.05767311138851402144888953325, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 5.94332536454953689141030268187, 899.158529015192103493347497678, 2998.31705803038420698669499536 };
  double g2  [3] = { 51.4367872769776250550571610123, -7.96530259219593123422823751399, 85.4438201357078240077684820290 };
  double gres[3] = { -.172283436632813044836920363404e-1, -.263694379983898454482723264016e-2, -.462319354902285541211247584718e-1 };
  double h1  [9] = { 9.25618083288686157317752553793, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 180., 900., 1.08060461173627943480187321489, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { 2.59344330983634668503649973204, 5.12455906702906812043774287909, -86.7405417906259973502867318950, 5.12455906702906812043774287909, 2.60304903341618090584366196172, 19.6701632213247932468405410675, -86.7405417906259973502867318950, 19.6701632213247932468405410675, 54.0302305868139717400936607443 };
  double hres[9] = { -.8634342716444762695208920105e-3, .346716518237613429735125496236e-2, .463233721760399968570059093377e-1, .346716518237613429735125496238e-2, -.345642745705399924625305529363e-3, .465945712075144660128127285932e-2, .463233721760399968570059093379e-1, .465945712075144660128127285932e-2, .74572353076796785473812644401e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(2990.74381916711313842682247446, g1,h1), ad2(-52.7335089318957983975754108783, g2,h2), adresMaple(1.58842673857972833795851982299, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 59.4332536454953689141030268187, 8999.15852901519210349334749768, 2983.17058030384206986694995357 };
  double g2  [3] = { -109.841586006008712076251392103, 45.1888658331976801830822253056, -53.1053894340188079979565163191 };
  double gres[3] = { .367911632691186928816477996776e-2, -.536293548932243869766483275900e-3, .209872997611298454208261985451e-2 };
  double h1  [9] = { 92.5618083288686157317752553793, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 1800., 900., 10.8060461173627943480187321489, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { 25.9344330983634668503649973204, -73.5963010848663113209871716546, 51.8086677791006346554382664531, -73.5963010848663113209871716546, 38.5146795096775083109730796618, -8.03967869262053315430445860209, 51.8086677791006346554382664531, -8.03967869262053315430445860209, -83.9071529076452452258863947824 };
  double hres[9] = { -.87165756206206990496346468861e-3, .135484086166880791345487913231e-2, -.210221255970299732896376118490e-2, .135484086166880791345487913230e-2, -.770090971446648449341613830704e-3, -.211732519528355118313132324099e-3, -.210221255970299732896376118494e-2, -.211732519528355118313132324088e-3, .238669508347052461177336845892e-2 };
  adreal<3,DO_HESS_TEST,double> ad1(29907.4381916711313842682247446, g1,h1), ad2(96.8743694568269786510688934426, g2,h2), adresMaple(1.56755719845380241026299353124, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 1000000999999.49999950000004167, 9000000000000000000.00000100000, 3000000000000000002.00000000000 };
  double g2  [3] = { 936752127531.650289122582138958, 1.87350653425675480894007325397, 349993.502171292951370403578806 };
  double gres[3] = { -.312250709177216762832693365367e-12, .312249949446812601300865247783e-24, -.116664188473055139618733643620e-18 };
  double h1  [9] = { -1000000.99999983333316666667500, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, 18000000000000., 9000000000000., 1999999.99999900000000000008333, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { -1494497.81595039611669398835430, 1873508.81344722004400308143779, 349993502171.292950623154670831, 1873508.81344722004400308143779, .17038166885190512663535829978e-6, .699987004344865094700540036570, 349993502171.292950623154670831, .699987004344865094700540036570, -936752.127533144786938532535075 };
  double hres[9] = { .498166146817479656e-18, .312249189715910273622219903781e-18, -.116664188473055139579845437824e-12, .312249189715910273622219903778e-18, -.56789331233382241228102034281e-31, .116664188473055139502069065119e-24, -.116664188473055139579845437823e-12, .116664188473055139502069065119e-24, .312250942506091874985706486457e-18 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000000001000001.00000, g1,h1), ad2(936752.127532397538030557337017, g2,h2), adresMaple(1.57079632679489661891907098246, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 1000000.99999949999950000004167, -8999999999999.99999900000000000, 2999999999999999999.99999800000 };
  double g2  [3] = { 540302305868.139718895434423393, 1.08060461173400024433663815188, 841470.984807896505905253413655 };
  double gres[3] = { .180100768622713239751878767771e-6, -.180100768623472970216073801039e-18, .460591096892012074898043676754e-12 };
  double h1  [9] = { -1.00000099999983333316666667500, .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, -18000000., 9000000000000., -1.99999999999900000000000008333, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { 1.49449781595039611669398835430, 1080604.61173172105387140308887, 841470984807.896505158004505680, 1080604.61173172105387140308887, .108060631485886564918632045660e-5, 1.68294196961807220377023970627, 841470984807.896505158004505680, 1.68294196961807220377023970627, -540302.305868139717400936607443 };
  double hres[9] = { .618233226115e-18, -.180100768624232701298502060434e-12, .460591096892012075111607695542e-6, -.180100768624232701298502060428e-12, .360202104957513601035310351136e-24, -.460591096892012075325171837701e-18, .460591096892012075111607695540e-6, -.460591096892012075325171837713e-18, .74108142516131091090946864181e-12 };
  adreal<3,DO_HESS_TEST,double> ad1(-2999999999999999998.99999900000, g1,h1), ad2(540302.305868139718148185515418, g2,h2), adresMaple(-1.57079632679471651846269897840, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 999999.999999500001000000041667, 9000000.00000099999999999983333, 3000000000000000000.00000000000 };
  double g2  [3] = { 999999999999.499999999998547169, 1.99999999999900000227919054857, -1.00000000000058058224130853973 };
  double gres[3] = { -.333333333332907407407407328481, .333333333332796295536565936666e-12, .333333333333240740740740919240 };
  double h1  [9] = { -.999999999999833334333333341667, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, 18.000000, 9000000000000., .199999999999900000000000008333e-5, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 1999999.99999900000455838101380, -1000000.00000132783114928373778, 1999999.99999900000455838101380, .199999999999729687741378569888e-5, -.199999772080920143160365849951e-5, -1000000.00000132783114928373778, -.199999772080920143160365849951e-5, -999999.999999500000000000041667 };
  double hres[9] = { .296296296295963187e-6, .333333333332388887369428643400e-6, 333333.333332944444444445157923, .333333333332388887369428643401e-6, -.666666666664284139764732701620e-18, -.333333333332722222222223170272e-6, 333333.333332944444444445157923, -.333333333332722222222223170270e-6, -666666.666665851851851852799386 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000.99999999999983333, g1,h1), ad2(999999.999999499999999999294418, g2,h2), adresMaple(1.57079599346156328618811181510, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 1000000.99999949999950000004167, 9000000000000.00000100000000000, 3000000000000000000.00000200000 };
  double g2  [3] = { 540302305868.139715906438791493, 1.08060461173855862526710827790, -841470.984807896507399751229605 };
  double gres[3] = { -.180100768622713238515412292174e-6, .180100768621953508051217258901e-18, .460591096892012074470915579418e-12 };
  double h1  [9] = { -1.00000099999983333316666667500, .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, 18000000., 9000000000000., 1.99999999999900000000000008333, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { -1.49449781595039611669398835430, 1080604.61174083781573234334091, -841470984807.896508147000137580, 1080604.61174083781573234334091, .108060290861369322041742597318e-5, -1.68294196961351382283976958025, -841470984807.896508147000137580, -1.68294196961351382283976958025, -540302.305868139717400936607443 };
  double hres[9] = { .618233249483e-18, .180100768621193776968788976164e-12, .460591096892012074257351500870e-6, .180100768621193776968788976152e-12, -.360200969533339355499272123844e-24, -.460591096892012074043787358694e-18, .460591096892012074257351500866e-6, -.460591096892012074043787358720e-18, -.74108142516131090956115865777e-12 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000000001.00000100000, g1,h1), ad2(540302.305868139716653687699468, g2,h2), adresMaple(1.57079632679471651846269897840, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 1000099.99999949995000000004167, 90000000000000.0000010000000000, 3000000000000000000.00002000000 };
  double g2  [3] = { -839071529076.452467203842107328, -1.67814305813011299986537726557, 544021.110889369812657498753876 };
  double gres[3] = { .279690509692150822382632803641e-7, -.279690509699748126414921158659e-19, -.209309421265671686202301465172e-13 };
  double h1  [9] = { -1.00009999999983331666666667500, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, 180000000., 9000000000000., 19.9999999999900000000000008333, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { -14.9449781595039611669398835430, -1678143.05810732109521302663549, 544021110889.369811910249845901, -1678143.05810732109521302663549, -.167816008937876704836220031272e-5, 1.08804222178101881727473038671, 544021110889.369811910249845901, 1.08804222178101881727473038671, 839071.529076452452258863947824 };
  double hres[9] = { .4963011487485e-18, -.279690509707345435410221001170e-13, -.209309421265671686194391577971e-7, -.279690509707345435410221001169e-13, .559386696505172855203495976723e-25, .209309421265671686186481086629e-19, -.209309421265671686194391577970e-7, .209309421265671686186481086629e-19, -.237828625439016480171232348889e-13 };
  adreal<3,DO_HESS_TEST,double> ad1(30000000000000000001.0001000000, g1,h1), ad2(-839071.529076452459731353027576, g2,h2), adresMaple(1.57079632679492458828229090672, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 999999999998.500000000000541667, 9000000.00000099999999999983333, -1.00000000000033333333333331667 };
  double g2  [3] = { -5.29287877108646413508936669476, .497753338656322994800629279695e-5, .349990387355843642313191472831e-6 };
  double gres[3] = { -.319095521598440118754078553882e-5, -.241187578071214817284840461572e-11, .174995738193650184338105476154e-12 };
  double h1  [9] = { -999999.999998833333333333508334, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, -18000000., 9., 1999999.99999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -6229630.89861960892202789922984, 11.8285710281927494698896506640, .349987272540394332508730458882, 11.8285710281927494698896506640, -.194662136348843453912836253844e-4, -.699980153304944274715783090204e-6, .349987272540394332508730458882, -.699980153304944274715783090204e-6, -.936752127533144786938532535075e-6 };
  double hres[9] = { -6.3057706652851963336788753839, -.965095084818420606068769759470e-5, .262492011812684996861914211526e-6, -.965095084818420606068769759460e-5, -.216387038958520444326658576044e-10, .437487050514202351103719985261e-12, .262492011812684996861914211526e-6, .437487050514202351103719985270e-12, -.468376238763126399366057626498e-12 };
  adreal<3,DO_HESS_TEST,double> ad1(-2000000.00000116666666666649167, g1,h1), ad2(-.217806332177665967407541707984e-5, g2,h2), adresMaple(-1.57079632679598565089220938621, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 0., -8.99999900000000000016666666667, -3.00000199999999999966666666667 };
  double g2  [3] = { .540308535499038337009858635342, -.108061146277392106432139509825e-5, .841467869992447196848041307680e-6 };
  double gres[3] = { -.180102845166340270401713363413, -.180101539725007199039150975612e-6, -.460591216959868397643158670265e-6 };
  double h1  [9] = { 0., .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, 18., 9., -1.99999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 6.22963089861960892202789922984, -1.08061831381156269384091698161, .841464755176997887043580293731, -1.08061831381156269384091698161, .108062595145416938543683837558e-5, -.168293511857815138378548275990e-5, .841464755176997887043580293731, -.168293511857815138378548275990e-5, -.540302305868139717400936607443e-6 };
  double hres[9] = { -2.076543621189198448974868, -.180102310826949226374258880081, -.460591337028401961555528417546, -.180102310826949226374258880074, -.360206927399906801992015614327e-6, -.460591363598932908820024357543e-6, -.460591337028401961555528417542, -.460591363598932908820024357554e-6, -.74108215935070433294746478152e-6 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(.540305420683589027205397621393e-6, g2,h2), adresMaple(1.57079614669308972470359325692, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -.999999999998500000000000541667, .999999999999983333333333334167e-5, -2.99999999999800000000000033333 };
  double g2  [3] = { .999999999993270369101380432745, -.199999999999214896235837056381e-5, -.411481544930963779434728295659e-11 };
  double gres[3] = { 176470.588234114853013475142448, .117647058823492426280433175390, -176470.588235678687734720497590 };
  double h1  [9] = { .999999999998833333333333508334e-6, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, -.18e-4, 9., .199999999999900000000000008333e-5, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -.622963089861960892202789922984e-5, -1.99999999998529792471674104429, -.722963089861944225536123257151e-5, -1.99999999998529792471674104429, .199999999997766028211004944836e-5, .885103764162918618855002455043e-11, -.722963089861944225536123257151e-5, .885103764162918618855002455043e-11, -.999999999999500000000000041667e-6 };
  double hres[9] = { -103806228374.153294102835950118, -10380.622837091826693971136244, -72664359862.320088177808925392, -10380.622837091826693971136246, -.6920415227048629130648977355e-2, 10380.622837017855725424392916, -72664359862.320088177808925392, 10380.622837017855725424392914, 249134948097.229635737205394575 };
  adreal<3,DO_HESS_TEST,double> ad1(-.399999999999883333333333350833e-5, g1,h1), ad2(.999999999996385184550690237206e-6, g2,h2), adresMaple(-1.32581766366881438241986150660, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 0., 9.00000099999999999983333333333, -2.99999800000000000033333333333 };
  double g2  [3] = { .540296076237241097792014579544, -.108059776069863780528235133153e-5, -.841474099623345816456963335580e-6 };
  double gres[3] = { .180098692079074524265186804618, .180099997519715414416792572342e-6, -.460590976825510234417828213265e-6 };
  double h1  [9] = { 0., .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, -18., 9., 1.99999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -6.22963089861960892202789922984, -1.08059090966099617576282944817, -.841477214438795126261424349529, -1.08059090966099617576282944817, .108058327201838948416690805420e-5, .168294882065343464282452652662e-5, -.841477214438795126261424349529, .168294882065343464282452652662e-5, -.540302305868139717400936607443e-6 };
  double hres[9] = { -2.076543644556399234664308, .180099226416365657458987966798, -.460590856759685635889510945936, .180099226416365657458987966797, .360196147085718196014069135172e-6, -.460590830189410599489195732651e-6, -.460590856759685635889510945932, -.460590830189410599489195732649e-6, .74108069097342112392586407841e-6 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(.540299191052690407596475593493e-6, g2,h2), adresMaple(-1.57079614669516626833646639254, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 98.9999999999505000000000041250, 90.0000009999999999998333333333, -2.99998000000000000333333333333 };
  double g2  [3] = { -.839133825385438648348084226816, .167821156852932119971294672923e-5, .544017996073920503600286647901e-6 };
  double gres[3] = { -.279713121197770189458194490012e-1, -.279702522444195564782204733588e-7, .209310017822452476265053098043e-7 };
  double h1  [9] = { -.989999999999835000000000008250e-4, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, -180., 9., 19.9999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -62.2963089861960892202789922984, 1.67828007890573749490816556281, .544014881258471193795825633952, 1.67828007890573749490816556281, -.167835645533180441086737950255e-5, -.108803537074109799728997344034e-5, .544014881258471193795825633952, -.108803537074109799728997344034e-5, .839071529076452452258863947824e-6 };
  double hres[9] = { -2.2611617546535681462287357, -.279714535348186671781566963978e-1, .209310614377395457277542229239e-1, -.279714535348186671781566963971e-1, -.559458258743694106197389133043e-7, .209311815407828991399244376943e-7, .209310614377395457277542229238e-1, .209311815407828991399244376947e-7, .237829551398416031215386296030e-7 };
  adreal<3,DO_HESS_TEST,double> ad1(-29.9999010000000000165000000000, g1,h1), ad2(-.839102677230945550303474087320e-6, g2,h2), adresMaple(-1.57079635476507816186192340673, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 999999999999.500001000000041667, .999999999999983333333333334167e-5, 1.99999999999966666966666668333 };
  double g2  [3] = { .400000093675346086647812080521e-5, .200000187350625506628957521040e-5, .234999350217195961878431942012e-17 };
  double gres[3] = { -.200000000000166666497892098054e-11, -.200000187350658837193514276357e-11, .165000837133390376563377245805e-23 };
  double h1  [9] = { -999999.999999833334333333341667, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, 18.000000, .9e-11, 1999999.99999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { 4.00000000000133333333333386668, 4.00000187350825506628957654374, .434999350217262628545098635346e-11, 4.00000187350825506628957654374, .187350825506628957921039840349e-5, .269998700434458590423530630689e-11, .434999350217262628545098635346e-11, .269998700434458590423530630689e-11, -.936752127533144786938532535075e-18 };
  double hres[9] = { -.200000031224653317e-17, -.200000000000299999662451799740e-5, .200000000000154999574047301220e-17, -.200000000000299999662451799739e-5, -.187350825499060176876051e-11, .130001674266814084410078510405e-17, .200000000000154999574047301217e-17, .130001674266814084410078510402e-17, .936749527501689079186101467425e-24 };
  adreal<3,DO_HESS_TEST,double> ad1(999999.999999833337333333341667, g1,h1), ad2(.200000093675279419981145387187e-11, g2,h2), adresMaple(1.57079632679489661723132075489, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 1.00000099999949999950000004167, .999990999999833333333333341667e-6, -.199999999999666666666666668333e-5 };
  double g2  [3] = { -.345969769413319361593239725924e-11, -.91939538826572056519812811844e-12, .284147098480856317331916925497e-17 };
  double gres[3] = { .199999800000510746608726866478e-5, .919393009192525609459896127678e-6, .779214061472415364633360824387e-13 };
  double h1  [9] = { -.100000099999983333316666667500e-5, .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, -.18e-4, .9e-11, -1.99999999999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { -.400000000000133333333333386668e-5, -.291939538826772056519812945178e-5, .484147098480922983998583618831e-11, -.291939538826772056519812945178e-5, .108060461173227943480186788156e-5, .368294196961779301330500597659e-11, .484147098480922983998583618831e-11, .368294196961779301330500597659e-11, -.540302305868139717400936607443e-18 };
  double hres[9] = { -.142190994011055354e-11, 1.99999600001674430147353686549, .199999400001841306925145530505e-5, 1.99999600001674430147353686548, -1.08060536987352625681966426754, -.184415418502130335902227456272e-5, .199999400001841306925145530510e-5, -.184415418502130335902227456270e-5, -.206740247102883255338521214438e-11 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000099999683333316666667500e-5, g1,h1), ad2(-.145969769413252694926573032590e-17, g2,h2), adresMaple(1.57079632679635631546576260652, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { .100000099999949999950000004167e-5, .100000000000883333333333334167e-5, .200000299999966666666666668333e-11 };
  double g2  [3] = { .100000399999950000133333337500e-11, .200000199999900000200000008333e-11, .199999900000066666683333360001e-17 };
  double gres[3] = { -.200000133332866664641115817844e-5, -.999999999990666664000069477737, .599998733331416674587224759048e-11 };
  double h1  [9] = { -.100000099999983333316666667500e-11, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, .18e-10, .9e-11, .199999999999900000000000008333e-5, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { .400000000000133333333333386668e-11, .200000399999900000400000008333e-5, .399999900000133333350000053335e-11, .200000399999900000400000008333e-5, .199999999999900000400000008334e-5, .199999800000200000033333466666e-11, .399999900000133333350000053335e-11, .199999800000200000033333466666e-11, -.999999999999500000000000041667e-18 };
  double hres[9] = { .566665299996493348201047852893e-5, -.1133331466656607794511026e-4, -1.99999699999099998450017097220, -.1133331466656607796495660e-4, .2199999466643100006e-4, .799999466652383363404523180037e-5, -1.99999699999099998450017097220, .799999466652383363404525853687e-5, 2.00000099995833338400026628835 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000100000283333316666667500e-11, g1,h1), ad2(.100000199999950000066666670833e-17, g2,h2), adresMaple(1.57079532679389662389798702496, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 1.00000099999949999950000004167, .100000899999983333333333334167e-5, .200000000000266666666666668333e-5 };
  double g2  [3] = { .454030230586947305073427047412e-11, .308060461173827943480187454822e-11, .115852901519277016001416461171e-17 };
  double gres[3] = { -.199999800000546766726427690262e-5, -.308059899080793200426601446072e-5, .392206659385998420463802140135e-11 };
  double h1  [9] = { -.100000099999983333316666667500e-5, .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, .18e-4, .9e-11, 1.99999999999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { .400000000000133333333333386668e-5, .508060461174027943480187588156e-5, .315852901519343682668083154505e-11, .508060461174027943480187588156e-5, .108060461174027943480187854822e-5, .31705803038620698669499669007e-12, .315852901519343682668083154505e-11, .31705803038620698669499669007e-12, -.540302305868139717400936607443e-18 };
  double hres[9] = { .106170876302434434e-11, -1.99999600001746470346720252990, .199999400001969445098052883266e-5, -1.99999600001746470346720252992, -1.08059736984069010929213350730, .584413018501209881171159294534e-5, .199999400001969445098052883273e-5, .584413018501209881171159294541e-5, -.100673544710868796867464972664e-10 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000100000283333316666667500e-5, g1,h1), ad2(.254030230586880638406760354078e-17, g2,h2), adresMaple(1.57079632679235631946575984833, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 100.000000999949999999500004167, .100008999999983333333333334167e-5, .199999999999996666666666668333e-4 };
  double g2  [3] = { .391609284709368808810744747190e-10, .183218569418670950954822854376e-10, .254402111089003648007141459519e-17 };
  double gres[3] = { -.199999998000161372545393978290e-6, -.183218565670195588825050783069e-6, .128816453209175790014502295877e-13 };
  double h1  [9] = { -.100000000999983333333166667500e-3, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, .180e-3, .9e-11, 19.9999999999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { .400000000000133333333333386668e-4, .383218569418870950954822987710e-4, .454402111089070314673808152853e-11, .383218569418870950954822987710e-4, -.167814305811290490451767456232e-5, .308804222178073962680949665703e-11, .454402111089070314673808152853e-11, .308804222178073962680949665703e-11, .839071529076452452258863947824e-18 };
  double hres[9] = { -.202237522004936315e-12, -.199999996000281880112588476854, .199999994000119166538224706085e-7, -.199999996000281880112588476858, .16781434078358474267611333772e-1, .57632907297866331772504988185e-8, .199999994000119166538224706088e-7, .57632907297866331772504988185e-8, -.971118766615526213042023254507e-14 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000001000013333333166667500e-3, g1,h1), ad2(.191609284709302142144078053856e-16, g2,h2), adresMaple(1.57079632679470500994852850787, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 1000000000000.49999999999954167, 9000000.00000099999999999983333, 4.99999999999966666666666668333 };
  double g2  [3] = { 7.16638302615275370896643176492, .872454189669580909576042293725e-5, .349996616986742261922113500731e-6 };
  double gres[3] = { -.153837278298510974821416831342e-5, .978712877999647180796818812635e-13, -.874978881317995736803757674508e-13 };
  double h1  [9] = { -1000000.00000083333333333317500, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, 18000000., 9., 1999999.99999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 6229630.89861960892202789922984, 15.5755795383253286176437808044, .349999731802191571726574514680, 15.5755795383253286176437808044, .232132221450169245390377555246e-4, .699993855380227533754826856920e-6, .349999731802191571726574514680, .699993855380227533754826856920e-6, -.936752127533144786938532535075e-6 };
  double hres[9] = { -.78822133316205177339994911349, -.457023944814105604868823288437e-6, -.65623031505647554541724868137e-7, -.457023944814105604868823288442e-6, -.168571280740640179379797619292e-11, .218739411191616984795226187256e-13, -.65623031505647554541724868136e-7, .218739411191616984795226187258e-13, .234188250628464182947208386567e-12 };
  adreal<3,DO_HESS_TEST,double> ad1(4000000.00000083333333333317500, g1,h1), ad2(.405156757684294924795248215000e-5, g2,h2), adresMaple(1.57079632679388372733711116535, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 1.99999999999900000000000008333, -8.99999900000000000016666666667, 2.99999800000000000033333333333 };
  double g2  [3] = { .540296076237241097792014579544, .108059776069863780528235133153e-5, .841474099623345816456963335580e-6 };
  double gres[3] = { .180098932211596276880142071760, -.180100357719794473011474968744e-6, .460591403952933103542763616457e-6 };
  double h1  [9] = { -.199999999999966666666666668333e-5, .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, -18., 9., -1.99999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { -6.22963089861960892202789922984, 1.08059090966099617576282944817, .841477214438795126261424349529, 1.08059090966099617576282944817, .108058327201838948416690805420e-5, .168294882065343464282452652662e-5, .841477214438795126261424349529, .168294882065343464282452652662e-5, -.540302305868139717400936607443e-6 };
  double hres[9] = { -1.836412959216514964240033, -.180099946815065585513969732376, .460591711014043900145618151402, -.180099946815065585513969732375, .360197587884945974812421057182e-6, -.460592111572431419316861179351e-6, .460591711014043900145618151400, -.460592111572431419316861179351e-6, .74108203928247025808709979751e-6 };
  adreal<3,DO_HESS_TEST,double> ad1(-2.99999800000000000033333333333, g1,h1), ad2(.540299191052690407596475593493e-6, g2,h2), adresMaple(-1.57079614669504620176952144061, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 1.00000000000049999999999954167, .999999999999983333333333334167e-5, 3.00000000000199999999999966667 };
  double g2  [3] = { 1.00000000000572963089861965059, .200000000000585103764162960285e-5, .211481544930997112768061627325e-11 };
  double gres[3] = { -176470.588236384570285254329289, .117647058823500653304340934175, 176470.588235252108113030823589 };
  double h1  [9] = { -.100000000000083333333333317500e-5, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, .18e-4, 9., .199999999999900000000000008333e-5, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { .622963089861960892202789922984e-5, 2.00000000001270207528325912237, .522963089861977558869456588817e-5, 2.00000000001270207528325912237, .200000000002033971788995071830e-5, .485103764162985285521669118377e-11, .522963089861977558869456588817e-5, .485103764162985285521669118377e-11, -.999999999999500000000000041667e-6 };
  double hres[9] = { 103806228372.978668716897858294, -10380.622837505567973240431649, 72664359861.224996291966659518, -10380.622837505567973240431650, .6920415222676046898937717370e-2, 10380.622837448051052509910811, 72664359861.224996291966659519, 10380.622837448051052509910809, -249134948096.561123473053251021 };
  adreal<3,DO_HESS_TEST,double> ad1(.400000000000083333333333317500e-5, g1,h1), ad2(.100000000000261481544930984613e-5, g2,h2), adresMaple(1.32581766366746623397312727858, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 1.99999999999900000000000008333, 9.00000099999999999983333333333, 3.00000199999999999966666666667 };
  double g2  [3] = { .540308535499038337009858635342, .108061146277392106432139509825e-5, -.841467869992447196848041307680e-6 };
  double gres[3] = { -.180102605030145699237337713467, .180101179522011771386044280409e-6, .460590789831470580404657273872e-6 };
  double h1  [9] = { -.199999999999966666666666668333e-5, .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, 18., 9., 1.99999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 6.22963089861960892202789922984, 1.08061831381156269384091698161, -.841464755176997887043580293731, 1.08061831381156269384091698161, .108062595145416938543683837558e-5, -.168293511857815138378548275990e-5, -.841464755176997887043580293731, -.168293511857815138378548275990e-5, -.540302305868139717400936607443e-6 };
  double hres[9] = { -1.836405590212215335360668, .180101590419500191143997348421, .460590482771118852958725273012, .180101590419500191143997348410, -.360205486586836649687564400280e-6, -.460590082214491668351380233716e-6, .460590482771118852958725273007, -.460590082214491668351380233741e-6, -.74108081103954521298698891291e-6 };
  adreal<3,DO_HESS_TEST,double> ad1(3.00000199999999999966666666667, g1,h1), ad2(.540305420683589027205397621393e-6, g2,h2), adresMaple(1.57079614669320979249481105865, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 100.999999999949500000000004208, 90.0000009999999999998333333333, 3.00001999999999999666666666667 };
  double g2  [3] = { -.839009232767466256169643668832, -.167807454777648860932250906207e-5, .544024225704819123209208675801e-6 };
  double gres[3] = { .279667861120765289784257475055e-1, -.279678441308577627638928752273e-7, -.209308808886812781493637178598e-7 };
  double h1  [9] = { -.100999999999983166666666667508e-3, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, 180., 9., 19.9999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 62.2963089861960892202789922984, -1.67800603740007231412729022849, .544027340520268433013669689750, -1.67800603740007231412729022849, -.167792966097400539816807628875e-5, .108804907281638125632901720706e-5, .544027340520268433013669689750, .108804907281638125632901720706e-5, .839071529076452452258863947824e-6 };
  double hres[9] = { -2.2648457010908845258244463, -.279666373079631541899059684081e-1, -.209308196506278386416056776062e-1, -.279666373079631541899059684089e-1, .559303558175011017161783551605e-7, .209306979665373311420839041828e-7, -.209308196506278386416056776061e-1, .209306979665373311420839041821e-7, -.237827686795109920785220921930e-7 };
  adreal<3,DO_HESS_TEST,double> ad1(30.0001009999999999831666666667, g1,h1), ad2(-.839040380921959354214253808328e-6, g2,h2), adresMaple(1.57079635476281515797087913240, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 1000000000009.49999999999504167, 900000000.000000999999999999833, 3001.99999999999966666666666668 };
  double g2  [3] = { 96.2686560631508253788897532395, .215757860758297588525611453364e-4, .349993515138509501299385911963e-4 };
  double gres[3] = { -.320683136623131116748972834053e-7, .230133296163791537468539776172e-14, -.116625313263144500724721742558e-13 };
  double h1  [9] = { -1000000.00000983333333333167500, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, 180000000., 900., 1999999.99999900000000000008333, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { 2593443.30983634668503649973204, 24.4165296009966219663516399713, 34.9993528105726050481119337146, 24.4165296009966219663516399713, .555715790021874991452260024676e-5, .699987288416938420921616352611e-5, 34.9993528105726050481119337146, .699987288416938420921616352611e-5, -.936752127533144786938532535075e-4 };
  double hres[9] = { -.8428212870746866120449896614e-3, .148039032393321156978433400089e-8, -.116586451005914447849406667147e-7, .148039032393321156978433400081e-8, -.133393534569342295887724775998e-14, .116508726524437318559192447845e-14, -.116586451005914447849406667146e-7, .116508726524437318559192447847e-14, .312146893619301293685049711404e-13 };
  adreal<3,DO_HESS_TEST,double> ad1(3001000000.00000983333333333168, g1,h1), ad2(.949719344082326520363715033735e-4, g2,h2), adresMaple(1.57079632679486497246877313038, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 10.9999999999945000000000004583, -899.999999000000000000166666667, 2999.99999800000000000033333333 };
  double g2  [3] = { 54.0302279933706619037469757078, .108060432766192691811556183584e-4, .841470997775113055834235746812e-4 };
  double gres[3] = { .180100761298641077544886356708e-1, -.180100852388089793883836921512e-8, .460591099121148250278373088481e-7 };
  double h1  [9] = { -.109999999999981666666666667583e-4, .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, -180., 900., -1.99999999999900000000000008333, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { -2.59344330983634668503649973204, 10.8060404358757440142925045679, 84.1471010742329605015969171995, 10.8060404358757440142925045679, .108060092808263428234153256935e-5, .168294225369014552999131602231e-4, 84.1471010742329605015969171995, .168294225369014552999131602231e-4, -.540302305868139717400936607443e-4 };
  double hres[9] = { -.7324072260290028853664e-3, -.180100936153466569279401883362e-2, .460591101350284273660276433971e-1, -.180100936153466569279401883363e-2, .360200834045417850926414596215e-9, -.460591103672917658491548508098e-8, .460591101350284273660276433976e-1, -.460591103672917658491548508099e-8, .74108143184282685026350592998e-7 };
  adreal<3,DO_HESS_TEST,double> ad1(-2999.99998900000000000183333333, g1,h1), ad2(.540302292900923168219203182261e-4, g2,h2), adresMaple(-1.57079630878482012316360421270, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 9.99999999999599999999999991667, .900999999999999833333333333342e-3, 3000.00000000000199999999999967 };
  double g2  [3] = { 99.9999999999525934433098405134, .199999999999928407435251676964e-4, -.987032783450651599908150843007e-10 };
  double gres[3] = { -33075.7103008631196517607442893, .329654579331845400993611801082e-2, 33075.7103008954302549849655778 };
  double h1  [9] = { -.999999999999933333333333325000e-5, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, .180e-3, 900., .199999999999900000000000008333e-5, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { .259344330983634668503649973204e-5, 19.9999999999956814870503345595, -.974065566901469866482968344347e-4, 19.9999999999956814870503345595, .200000000000268365364515254367e-5, -.171592564748298035528761721984e-10, -.974065566901469866482968344347e-4, -.171592564748298035528761721984e-10, -.999999999999500000000000041667e-4 };
  double hres[9] = { 292463364.9153799042922190826, 3256.37170784736469716195336497, 32783246935.9789231846003895055, 3256.37170784736469716195336500, -.652001245528193553193527621354e-3, -3256.37170785227981044150151137, 32783246935.9789231846003895058, -3256.37170785227981044150151137, -65858957236.8409156702687877768 };
  adreal<3,DO_HESS_TEST,double> ad1(.300999999999999933333333333325e-2, g1,h1), ad2(.999999999999512967216549223400e-4, g2,h2), adresMaple(1.53758595038524092151993225536, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 10.9999999999945000000000004583, 900.000000999999999999833333333, 3000.00000199999999999966666667 };
  double g2  [3] = { 54.0302331802572815764403457808, .108060489581063195148818459394e-4, -.841470971840679957470768896448e-4 };
  double gres[3] = { -.180100775946785203321608133547e-1, .180100684857337125675657561684e-8, .460591094662875594668070881007e-7 };
  double h1  [9] = { -.109999999999981666666666667583e-4, .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, 180., 900., 1.99999999999900000000000008333, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { 2.59344330983634668503649973204, 10.8060517988498446817449597299, -84.1470958873463408289035471265, 10.8060517988498446817449597299, .108060829538992458726221386043e-5, -.168294168554144049661869326421e-4, -84.1470958873463408289035471265, -.168294168554144049661869326421e-4, -.540302305868139717400936607443e-4 };
  double hres[9] = { -.7324071865488435690957e-3, .180100601091961232864499422790e-2, .460591092433738962441136902389e-1, .180100601091961232864499422793e-2, -.360202240445431874491245305726e-9, -.460591090111106139481429760090e-8, .460591092433738962441136902389e-1, -.460591090111106139481429760081e-8, -.74108141847979298807576695819e-7 };
  adreal<3,DO_HESS_TEST,double> ad1(3000.00001099999999999816666667, g1,h1), ad2(.540302318835356266582670032625e-4, g2,h2), adresMaple(1.57079630878481939075639792388, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 109.999999999945000000000004583, 9000.00000099999999999983333333, 3000.00001999999999999666666667 };
  double g2  [3] = { -83.9071269732121468624195444174, -.167814021740937973765461410516e-4, .544021123856586362586481087033e-4 };
  double gres[3] = { .279690421192977236357170376420e-2, -.279691322925593896921532247458e-9, -.209309420582110948737994604826e-8 };
  double h1  [9] = { -.109999999999981666666666667583e-3, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, 1800., 900., 19.9999999999900000000000008333, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { 25.9344330983634668503649973204, -16.7813737666585457079150031466, 54.4021136823802911768214512216, -16.7813737666585457079150031466, -.167810622161645337991432144030e-5, .108804250585309214349580670275e-4, 54.4021136823802911768214512216, .108804250585309214349580670275e-4, .839071529076452452258863947824e-4 };
  double hres[9] = { -.88499173096503557024157e-3, -.279692136159034464376482101709e-3, -.209309419898550198860159919322e-2, -.279692136159034464376482101697e-3, .559373883572420806914043706047e-10, .209309418610521824808205739461e-9, -.209309419898550198860159919321e-2, .209309418610521824808205739469e-9, -.237828624443257141896368598202e-8 };
  adreal<3,DO_HESS_TEST,double> ad1(30000.0001099999999999816666667, g1,h1), ad2(-.839071399404286960441529695999e-4, g2,h2), adresMaple(1.57079632959180127365696115293, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 540302846170.445585540654008380, 9000000000000000000.84147098481, 3000000000001682941.96961579301 };
  double g2  [3] = { 936750633035.328836542415841087, 4152694.72030135258206088432226, 349993502170.545703209677288723 };
  double gres[3] = { -.312250211011632458991597550156e-12, -.447480193149684618165365150600e-18, -.116664188473022416360793445642e-12 };
  double h1  [9] = { -841471826278.881314549008974132, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18000000000000., 9000000000000., 1080604.61173627943480187321489, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { -1494497.81595039611669398835430, 6431885.18553641559024470357437, 349993502169.798454301702090664, 6431885.18553641559024470357437, -1703120.71271012938095213289330, 699989.283533051139298313157381, 349993502169.798454301702090664, 699989.283533051139298313157381, -936752127533.144786938532535075 };
  double hres[9] = { .498165963539789155265040e-18, -.120721109547682194998056230412e-17, -.116664188473001404973530960591e-12, -.120721109547682194998056230411e-17, .567711462620470021972793469503e-18, .116664188472924246716128304751e-18, -.116664188473001404973530960591e-12, .116664188472924246716128304748e-18, .312250942506004291698287149457e-12 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000841471826278.88131, g1,h1), ad2(936751380284.236811740474188081, g2,h2), adresMaple(1.57079632679458436877122703362, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 540302.846170445585540654008380, -8999999999999.15852901519210349, 2999999999999999998.31705803038 };
  double g2  [3] = { 540302305869.634215216887003560, 1080602.33254581419973886503107, 841470984807.149257744527123572 };
  double gres[3] = { .180100768623288516165625206008e-6, -.180101528353761274557420742594e-12, .460591096892176842769888984604e-6 };
  double h1  [9] = { -841471.826278881314549008974132, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -18000000., 9000000000000., -1.08060461173627943480187321489, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { 1.49449781595039611669398835430, 1080600.05335534896467585684725, 841470984806.402008836551925513, 1080600.05335534896467585684725, 2.78372719795066388204357998526, 1682944.24880625824836801282708, 841470984806.402008836551925513, 1682944.24880625824836801282708, -540302305868.139717400936607443 };
  double hres[9] = { .500838402621824214e-18, -.180102288084749227485661005334e-12, .460591096892262352187948554772e-6, -.180102288084749227485661005344e-12, .927913624368197749390505376430e-18, -.460591096892506379106435895018e-12, .460591096892262352187948554776e-6, -.460591096892506379106435894995e-12, .74108142516177773951865613618e-6 };
  adreal<3,DO_HESS_TEST,double> ad1(-2999999999999158528.17372111869, g1,h1), ad2(540302305868.886966308911805501, g2,h2), adresMaple(-1.57079614669412799622043028117, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 540302.305868139717941238913311, 9000000.84147098480789650665250, 3000000000000000000.00000168294 };
  double g2  [3] = { 999999999999.499998505502225717, 2000000.00000127919046523514634, -1000000.74724874130853139168866 };
  double gres[3] = { -.299999878652010652416904444905, .299999764387418210353317039391e-6, 299999.848535457964311051134274 };
  double h1  [9] = { -841470.984807896507493973306438, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, 18.000000, 9000000000000., .108060461173627943480187321489e-5, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 2000000.00000355838093047020935, -1000001.49449764928372945003566, 2000000.00000355838093047020935, 1.99999829687641378561555284162, .27919046523539634151715256878, -1000001.49449764928372945003566, .27919046523539634151715256878, -999999999999.500000000000041667 };
  double hres[9] = { .59999958544713875027001294539e-1, .239999690517705266547981098743e-6, 239999.811867005353195797780439, .239999690517705266547981098745e-6, -.539998624027707267143087328901e-12, -.239999606192152623752250555393, 239999.811867005353195797780442, -.239999606192152623752250555394, -539999606191.780642532416663406 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000841470.98480789650749397, g1,h1), ad2(999999999999.499999252751133692, g2,h2), adresMaple(1.24904585654548166461269920379, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 540302.846170445585540654008380, 9000000000000.84147098480789651, 3000000000000000001.68294196962 };
  double g2  [3] = { 540302305866.645219584986211326, 1080606.89092674466986488139871, -841470984808.643755560477519688 };
  double gres[3] = { -.180100768622126278501277337437e-6, .180100008891653520535676554665e-12, .460591096891817426869184057640e-6 };
  double h1  [9] = { -841471.826278881314549008974132, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 18000000., 9000000000000., 1.08060461173627943480187321489, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { -1.49449781595039611669398835430, 1080609.17011720990492788958253, -841470984809.391004468452717747, 1080609.17011720990492788958253, -.62251797447810501243983355548, -1682939.69042532777824199645944, -841470984809.391004468452717747, -1682939.69042532777824199645944, -540302305868.139717400936607443 };
  double hres[9] = { .524205603399209567e-18, .180099249160642201106510288491e-12, .460591096891672157991351859336e-6, .180099249160642201106510288483e-12, .207510549877073049734863899063e-18, -.460591096891428131499058694295e-12, .460591096891672157991351859328e-6, -.460591096891428131499058694309e-12, -.74108142516064317578854342299e-6 };
  adreal<3,DO_HESS_TEST,double> ad1(3000000000000841471.82627888131, g1,h1), ad2(540302305867.392468492961409385, g2,h2), adresMaple(1.57079614669412799681962936828, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 540356.336098726531372676701104, 90000000000000.8414709848078965, 3000000000000000016.82941969616 };
  double g2  [3] = { -839071529091.397430418367908991, -1678120.26624825255388764605746, 544021110888.622564496772463793 };
  double gres[3] = { .279690509697119374429144831389e-7, -.279698107001150332747906546561e-13, -.209309421265664866533889273195e-7 };
  double h1  [9] = { -841555.131906377296303167571862, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 180000000., 9000000000000., 10.8060461173627943480187321489, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { -14.9449781595039611669398835430, -1678097.47434360020325756421926, 544021110887.875315588797265734, -1678097.47434360020325756421926, -18.7093689202967493769347955994, 1088044.50096920486187250350752, 544021110887.875315588797265734, 1088044.50096920486187250350752, 839071529076.452452258863947824 };
  double hres[9] = { .4978992130923515900e-18, -.279705704310158053659832411377e-13, -.209309421265660265331725081337e-7, -.279705704310158053659832411388e-13, .623650189060451905620435448654e-18, .209309421265651226642400127713e-13, -.209309421265660265331725081335e-7, .209309421265651226642400127703e-13, -.237828625439011198638056339319e-7 };
  adreal<3,DO_HESS_TEST,double> ad1(30000000000000841555.1319063773, g1,h1), ad2(-839071529083.924941338615928407, g2,h2), adresMaple(1.57079635476394758869469452655, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 540302305867.599415095068467726, 9000000.84147098480789650665250, 1682938.96961579301330500464326 };
  double g2  [3] = { -6229629.96186748138888311229131, 6851035.76812526445559378399003, -2.76482194713851150889629712814 };
  double gres[3] = { .502648170728334164401622342114e-5, -.814180599443376075974264680470e-5, -.411758765089633425336938817845e-11 };
  double h1  [9] = { -841470984807.055035667694425123, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, -18000000., 9., 1080604.61173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -6229630.89861960892202789922984, 13702073.4097547839774771418571, -5.87963739644831596991024674306, 13702073.4097547839774771418571, -21339716.0164463798988711165774, 6.15105063728693361764805289354, -5.87963739644831596991024674306, 6.15105063728693361764805289354, -.936752127533144786938532535075 };
  double hres[9] = { .464998939089359008697621507610e-5, -.110557766461758351874501051602e-4, -.517535495439253782355181925014e-11, -.110557766461758351874501051600e-4, .253603578307725199161830819107e-4, .897374093074335140252011998397e-11, -.517535495439253782355181925004e-11, .897374093074335140252011998397e-11, .111324467963128295533419986480e-11 };
  adreal<3,DO_HESS_TEST,double> ad1(841467984807.055035667694425123, g1,h1), ad2(-3114814.51255767692786916267639, g2,h2), adresMaple(1.57080002843841578135825329026, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 0., -8.15852901519210349334749767837, -4.68294196961579301330500464326 };
  double g2  [3] = { 6.76993320448774863942883583728, -7.93164225336579895668523108199, -2.27334446450190795436144729329 };
  double gres[3] = { -.908314102822154682451796397960, -.269476219700965214676645282259, -.460497474641082080520819418604 };
  double h1  [9] = { 0., .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., -1.08060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, -14.7826798949953184785685889491, -5.38815991381171241537539690821, -14.7826798949953184785685889491, 22.4203225016869143999625636694, 5.16809567201372650857835322384, -5.38815991381171241537539690821, 5.16809567201372650857835322384, -.540302305868139717400936607443 };
  double hres[9] = { 1.17457648816055844696669734541, .197967809887094356781857612149, .147651426707878586416236187803, .197967809887094356781857612154, -1.35442740058336244316180917801, -.592779853102827805058090185803, .147651426707878586416236187799, -.592779853102827805058090185807, -.573325891648283332444536544128 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(3.65511775517794417841488622236, g2,h2), adresMaple(.687276094006151581302725479696, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -.540302305867599415095068467726, .841479984807896506652502321630, -2.99999831705803038420698669500 };
  double g2  [3] = { .999993770368601380391078013768, -1.99999314896135837048047819997, -3.11481644930980446084728294825 };
  double gres[3] = { .176320481768621162765901372807, -.492640078343384690227431889041, -3.29085963626202164894306198964 };
  double h1  [9] = { .841470984807055035667694425123, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, -.18e-4, 9., .108060461173627943480187321489e-5, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -.622963089861960892202789922984e-5, -1.99998629792371674096095631661, -6.22963189861960892186123256317, -1.99998629792371674096095631661, 1.99997866028111004936503492264, 6.85103964162951952155002453377, -6.22963189861960892186123256317, 6.85103964162951952155002453377, -.999999999999500000000000041667 };
  double hres[9] = { .192320391504804848892139266362, .30131581768199828783657298319e-1, -.205468825985034635633151288112, .30131581768199828783657298317e-1, -.576846826696623823680772648986, 3.25642901744791171107477207469, -.205468825985034635633151288116, 3.25642901744791171107477207467, -1.7822978912626267135919091198 };
  adreal<3,DO_HESS_TEST,double> ad1(-.841473984807055035667694425123, g1,h1), ad2(.999996885184050690195539027717, g2,h2), adresMaple(-.699524935207264755973285632772, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 0., 9.84147098480789650665250232163, -1.31705803038420698669499535674 };
  double g2  [3] = { -5.68932859275146920462696262240, 5.77043302989324008708148465221, -3.95628643411770096766645193655 };
  double gres[3] = { -1.09213315764195375927331867704, -.513542152013217758626002169157, -.542488617806139204078357093430 };
  double h1  [9] = { 0., .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, -18., 9., 1.08060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -6.22963089861960892202789922984, 12.6214706715227596089648425193, -7.07110188342750542868040155147, 12.6214706715227596089648425193, -20.2591132782143555303588172396, 8.53397961124531253518836251036, -7.07110188342750542868040155147, 8.53397961124531253518836251036, -.540302305868139717400936607443 };
  double hres[9] = { .85132482753613384657233073871, -.28627911678560271989876669515, -.3904669515183425274005232632e-1, -.28627911678560271989876669511, -3.84042315756520046354078360093, -.920443185180612901645344853617, -.3904669515183425274005232632e-1, -.920443185180612901645344853635, .600476581847369024294819073523 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(-2.57451314344166474361301300748, g2,h2), adresMaple(-2.28001501955655554188731660180, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 53.4899282809458320226927241369, 90.8414709848078965066525023216, 13.8294196961579301330500464326 };
  double g2  [3] = { -63.1353805152725416725378562462, 70.1885194744481001233513065666, -2.57079433842043464760920195307 };
  double gres[3] = { .428102673061022232593036956548, -1.71999300067031629461238293070, -.790046153065416489727378380613e-1 };
  double h1  [9] = { -83.3056274959817541585977298414, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, -180., 9., 10.8060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -62.2963089861960892202789922984, 138.698895890743295342184885238, -5.68560978773023910862315156799, 138.698895890743295342184885238, -215.075321957659254556124632441, 5.76299541985077989507386254340, -5.68560978773023910862315156799, 5.76299541985077989507386254340, .839071529076452452258863947824 };
  double hres[9] = { .469644092439602041880251436862, -.3746324236299874625458693575e-1, -.2214120458223070096796224281e-2, -.3746324236299874625458693569e-1, 6.76819186083892694046344036089, .263800286634644671548192955270, -.2214120458223070096796224277e-2, .263800286634644671548192955264, .79995918771216920206694767377e-2 };
  adreal<3,DO_HESS_TEST,double> ad1(53.3056274959817541585977298414, g1,h1), ad2(-31.9872260221744970623983600970, g2,h2), adresMaple(2.11126892544806600401593816073, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 540302305868.139717941238913311, .841479984807896506652502321630, 1682941.96961579301330500764326 };
  double g2  [3] = { 4.00000000000227008546086701147, 2000000.00000387350425506762290, .200000034999416883795961905099e-5 };
  double gres[3] = { -.322746097864870012363567656047e-11, -.237679021156084568126850425037e-5, .237678979562869611757524056214e-17 };
  double h1  [9] = { -841470984807.896507493973306438, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18.000000, .9e-11, 1080604.61173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { 4.00000000000133333333333386668, 4000000.00000587350425506895624, .400000034999483550462628598433e-5, 4000000.00000587350425506895624, 5.87350425507162290721040293683, 2.00000069998900434258590556863, .400000034999483550462628598433e-5, 2.00000069998900434258590556863, -.936752127533144786938532535075e-12 };
  double hres[9] = { -.298571290945917948460899578440e-11, -.322746097865125019488604549102e-5, .322746082978447806654938667201e-17, -.322746097865125019488604549101e-5, -.698003895678512520e-11, .237678937970194206603108834536e-11, .322746082978447806654938667203e-17, .237678937970194206603108834538e-11, -.364034711571085692140699334658e-23 };
  adreal<3,DO_HESS_TEST,double> ad1(841470984807.896507493976306438, g1,h1), ad2(2.00000000000160341879420007813, g2,h2), adresMaple(1.57079632679251982901976354371, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { .540302846170445585540654008380, .841470984798896506652502321630, -1.68294196961579301030500464326 };
  double g2  [3] = { -.399999945969902746519361646574e-5, -1.99999891939738826372056653146, .200000084147165147456317358584e-5 };
  double gres[3] = { .322745752136285953476244149794e-5, 2.37678417378859417598568757565, .237678079700319375948079626486e-5 };
  double h1  [9] = { -.841471826278881314549008974132, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -.18e-4, .9e-11, -1.08060461173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { -.400000000000133333333333386668e-5, -3.99999891939938826372056786480, .400000084147231814122984051918e-5, -3.99999891939938826372056786480, 1.08060061173627942946853988155, 2.00000168294396961579301463833, .400000084147231814122984051918e-5, 2.00000168294396961579301463833, -.540302305868139717400936607443e-12 };
  double hres[9] = { .298570957670821118322806194760e-5, 3.22745406406479407040763419314, .322745047870132240639527261183e-5, 3.22745406406479407040763419312, -6.03776964144506271072596, 2.37677138245296303115688748828, .322745047870132240639527261177e-5, 2.37677138245296303115688748825, .475354469120624769435694399676e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(.841471826278881311549008974132, g1,h1), ad2(-.199999945969836079852694953240e-5, g2,h2), adresMaple(1.57079870358208929198183127245, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { .540302846170445585540654008380e-6, .841470984807896515652502321630, .168294196961879301330500464326e-5 };
  double g2  [3] = { .500000000000083333333333390835e-11, .400000000000100000000000141666e-5, .199999999999966666666666710001e-5 };
  double gres[3] = { -.365279270935444244153703871373e-5, -1.18839748254827595421673818345, -2.37678070438142744150113949486 };
  double h1  [9] = { -.841471826278881314549008974132e-6, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .18e-10, .9e-11, .108060461173627943480187321489e-5, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-11, .600000000000300000000000275000e-5, .400000000000033333333333403335e-5, .600000000000300000000000275000e-5, 2.00000000000300000000000541666, 2.00000000000000000000000166666, .400000000000033333333333403335e-5, 2.00000000000000000000000166666, -.999999999999500000000000041667e-12 };
  double hres[9] = { -.362789496905984338237139043912e-5, -.42533861096517011692492573550, -3.22745044550908434470273482710, -.42533861096517011692492573550, 4.753572271202719891420260, -7.13032236910144527451186, -3.22745044550908434470273482713, -7.13032236910144527451187, 16.63751115272221006262047 };
  adreal<3,DO_HESS_TEST,double> ad1(.841471826278881317549008974132e-6, g1,h1), ad2(.300000000000016666666666697501e-11, g2,h2), adresMaple(1.57079276161314448152687833095, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { .540302846170445585540654008380, .841470984816896506652502321630, 1.68294196961579301630500464326 };
  double g2  [3] = { .400000054030363920147305126762e-5, 2.00000108060661173627943613520, .199999915852968185877016028084e-5 };
  double gres[3] = { -.322745798098177687529312455498e-5, -2.37678674215520526594219984061, .237678536536652069137035308196e-5 };
  double h1  [9] = { -.841471826278881314549008974132, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, .18e-4, .9e-11, 1.08060461173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-5, 4.00000108060861173627943746854, .399999915853034852543682721418e-5, 4.00000108060861173627943746854, 1.08060861173627944013520654823, 1.99999831706003038420698802833, .399999915853034852543682721418e-5, 1.99999831706003038420698802833, -.540302305868139717400936607443e-12 };
  double hres[9] = { -.298571027065633280189486457951e-5, -3.22745498330216906415229740922, .322745211375229008850327171760e-5, -3.22745498330216906415229740919, 3.46940688309414292012682, 2.37678051917248002499725313280, .322745211375229008850327171756e-5, 2.37678051917248002499725313280, -.475355911209200726500534085461e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(.841471826278881317549008974132, g1,h1), ad2(.200000054030297253480638433428e-5, g2,h2), adresMaple(1.57079395000641976253315159898, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 54.0302311271162776082333781452, .841470984897896506652502321630, 16.8294196961579301360500464326 };
  double g2  [3] = { .399999991609418042568808864079e-4, 19.9999983218769418470951088156, .200000054402177755603648033809e-5 };
  double gres[3] = { -.322746091068482919789874362028e-6, -.237678996459298471424551110684, .237678929431148039033896280863e-7 };
  double h1  [9] = { -84.1470993222606354731467388155, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, .180e-3, .9e-11, 10.8060461173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-4, 39.9999983218969418470951221490, .400000054402244422270314727143e-5, 39.9999983218969418470951221490, -1.67810305815290485118439456227, 2.00000108804422177873962814283, .400000054402244422270314727143e-5, 2.00000108804422177873962814283, .839071529076452452258863947824e-12 };
  double hres[9] = { -.298571282571681314905276147882e-6, -.322746084272332669833447195060, .322746057905514073187004046882e-7, -.322746084272332669833447195060, .24696101149837971507617e-1, .237678837706738798235266006179e-1, .322746057905514073187004046883e-7, .237678837706738798235266006181e-1, -.475358692504646991448120266564e-8 };
  adreal<3,DO_HESS_TEST,double> ad1(84.1470993222606355031467388155, g1,h1), ad2(.199999991609351375902142170745e-4, g2,h2), adresMaple(1.57079608911588781180740137978, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 540302305868.680019706804747160, 9000000.84147098480789650665250, 1682944.96961579301330500464326 };
  double g2  [3] = { 6229631.83537173645517268616837, 6851039.51513377458817293174417, 3.46480895148109741313160210170 };
  double gres[3] = { -.502646361092302526899706199433e-5, -.814167321170340827525676080801e-5, .328567818572433240717292254259e-11 };
  double h1  [9] = { -841470984808.737977637310218137, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18000000., 9., 1080604.61173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { 6229630.89861960892202789922984, 13702077.1567632941100562896113, 6.57962440079090187414555171662, 13702077.1567632941100562896113, 21339719.7634548900314502643316, 7.55102464597210542611866284066, 6.57962440079090187414555171662, 7.55102464597210542611866284066, -.936752127533144786938532535075 };
  double hres[9] = { -.464995530638296595892386962859e-5, -.110556800045859986104619947422e-4, .487758952073777008758411477242e-11, -.110556800045859986104619947424e-4, -.253596747715498922079812399774e-4, .730975310510927397124857263568e-11, .487758952073777008758411477248e-11, .730975310510927397124857263568e-11, .111322193533129845060501552050e-11 };
  adreal<3,DO_HESS_TEST,double> ad1(841473984808.737977637310218137, g1,h1), ad2(3114816.38606193199415873655345, g2,h2), adresMaple(1.57079262517554500530732453290, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 1.08060461173627943480187321489, -8.15852901519210349334749767837, 1.31705803038420698669499535674 };
  double g2  [3] = { -5.68932859275146920462696262240, -5.77043302989324008708148465221, 3.95628643411770096766645193655 };
  double gres[3] = { -1.22868609827978982164561193257, 1.60284946246517067008816758273, .217616630906535941901607448399 };
  double h1  [9] = { -1.68294196961579301330500464326, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -18., 9., -1.08060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -6.22963089861960892202789922984, -12.6214706715227596089648425193, 7.07110188342750542868040155147, -12.6214706715227596089648425193, -20.2591132782143555303588172396, 8.53397961124531253518836251036, 7.07110188342750542868040155147, 8.53397961124531253518836251036, -.540302305868139717400936607443 };
  double hres[9] = { 3.42283417974050208370858507321, -.92725152239940186875528499183, -.649165325513551423148721448106, -.92725152239940186875528499184, -7.46300153384204013683602722659, .191810858747249667401134728859, -.649165325513551423148721448103, .191810858747249667401134728853, .171811083419810726379478863960e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(-1.31705803038420698669499535674, g1,h1), ad2(-2.57451314344166474361301300748, g2,h2), adresMaple(-2.66872752956956729084322250269, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { .540302305868680019706804747160, .841479984807896506652502321630, 3.00000168294196961579301330500 };
  double g2  [3] = { 1.00000622963039861960892206957, 2.00000685103664162951952196669, 3.11481444930980446118061628159 };
  double gres[3] = { -.176323363029604764068555948362, -.492640166102755045684768813402, .221871726567598426349471768829 };
  double h1  [9] = { -.841470984808737977637310218137, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .18e-4, 9., .108060461173627943480187321489e-5, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { .622963089861960892202789922984e-5, 2.00001370207428325903904385005, 6.22962989861960892219456589651, 2.00001370207428325903904385005, 2.00002133971688995063496524402, 6.85103564162951952221669120043, 6.22962989861960892219456589651, 6.85103564162951952221669120043, -.999999999999500000000000041667 };
  double hres[9] = { -.192319429638701320315801728662, .30132565709332556096987365379e-1, -2.67579657451243673326904495480, .30132565709332556096987365376e-1, .576836962405920498716565845685, 3.16865407816673539796606201439, -2.67579657451243673326904495480, 3.16865407816673539796606201438, .129045287045127481196377867131e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(.841473984808737977637310218137, g1,h1), ad2(1.00000311481494930980446105562, g2,h2), adresMaple(.699521866220239767423540942733, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 1.08060461173627943480187321489, 9.84147098480789650665250232163, 4.68294196961579301330500464326 };
  double g2  [3] = { 6.76993320448774863942883583728, 7.93164225336579895668523108199, 2.27334446450190795436144729329 };
  double gres[3] = { -.786443749195088818358281032685, -.332017756851837806553126376577e-1, .183360585697008355574836322694 };
  double h1  [9] = { -1.68294196961579301330500464326, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., 1.08060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, 14.7826798949953184785685889491, 5.38815991381171241537539690821, 14.7826798949953184785685889491, 22.4203225016869143999625636694, 5.16809567201372650857835322384, 5.38815991381171241537539690821, 5.16809567201372650857835322384, -.540302305868139717400936607443 };
  double hres[9] = { .32746121877968079776410071473, -.204513672477992463795977518936, -.84056058153491109345451611469e-1, -.204513672477992463795977518935, -.969556790341000888943018535884, -.115279754210785099569886744920, -.84056058153491109345451611466e-1, -.115279754210785099569886744919, -.682301762198449990016742943995e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(4.68294196961579301330500464326, g1,h1), ad2(3.65511775517794417841488622236, g2,h2), adresMaple(.908048418934809897322875565815, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 54.5705328926821114574945973517, 90.8414709848078965066525023216, 19.8294196961579301330500464326 };
  double g2  [3] = { 61.4572374571196367680201283506, 66.8322333581422903143158507754, 3.65883656019917427441869727677 };
  double gres[3] = { -.382780041197928222610814336166, -.348745999272166351058714902169, .127492395597614146978768319612e-1 };
  double h1  [9] = { -84.9885694655975471719027344846, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 180., 9., 10.8060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { 62.2963089861960892202789922984, 135.342609774437485533149429446, 6.77365200950897873543264689169, 135.342609774437485533149429446, 211.719035841353444747089176649, 7.93907986340825914869285319080, 6.77365200950897873543264689169, 7.93907986340825914869285319080, .839071529076452452258863947824 };
  double hres[9] = { -.248171124696030412586614430654, -.561112692423340170196706903344, .254668140696962178603792820235e-1, -.561112692423340170196706903344, -.720667263813627147496859504393, .24572532821908480781443153176e-2, .254668140696962178603792820224e-1, .24572532821908480781443153166e-2, -.752728406687511103739229168565e-2 };
  adreal<3,DO_HESS_TEST,double> ad1(114.988569465597547171902734485, g1,h1), ad2(30.3090829640215921578806322014, g2,h2), adresMaple(1.31307466733743403683013106433, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 540302305873.542740459618004617, 900000000.841470984807896506653, 1685941.96961579301330500464326 };
  double g2  [3] = { 2593536.98504909999951519358529, 2840762.26020941377668623340556, 36.2960718720474685542834985441 };
  double gres[3] = { -.208866801290483408130321943079e-5, -.336231821171343294478506583272e-5, -.399149867551266873327077999075e-10 };
  double h1  [9] = { -841470984816.311216500581286697, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 180000000., 900., 1080604.61173627943480187321489, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { 2593443.30983634668503649973204, 5681505.78537627689047672804046, 37.5927935269656418968017484101, 5681505.78537627689047672804046, 3683655.51865671540693510905368, 9.84061356859272215614354437053, 37.5927935269656418968017484101, 9.84061356859272215614354437053, -93.6752127533144786938532535075 };
  double hres[9] = { -.192857708527142197905232430274e-5, -.457441140159641609244122488750e-5, -.128433378682839686044861344543e-10, -.457441140159641609244122488752e-5, -.43545923947805758834034973444e-5, -.4896123937267586504365285205e-11, -.128433378682839686044861344543e-10, -.4896123937267586504365285205e-11, .110927849044558098500373332947e-9 };
  adreal<3,DO_HESS_TEST,double> ad1(844470984816.311216500581286697, g1,h1), ad2(1296815.33013092665699694371927, g2,h2), adresMaple(1.57079479114079665984705379631, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 5.94332536454953689141030268187, -899.158529015192103493347497678, 2998.31705803038420698669499536 };
  double g2  [3] = { 51.4367872769776250550571610123, 7.96530259219593123422823751399, 85.4438201357078240077684820290 };
  double gres[3] = { .172283436632813044836920363404e-1, -.263694379983898454482723264016e-2, .462319354902285541211247584718e-1 };
  double h1  [9] = { -9.25618083288686157317752553793, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -180., 900., -1.08060461173627943480187321489, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { -2.59344330983634668503649973204, 5.12455906702906812043774287909, 86.7405417906259973502867318950, 5.12455906702906812043774287909, -2.60304903341618090584366196172, 19.6701632213247932468405410675, 86.7405417906259973502867318950, 19.6701632213247932468405410675, -54.0302305868139717400936607443 };
  double hres[9] = { -.8634342716444762695208920105e-3, -.346716518237613429735125496236e-2, .463233721760399968570059093377e-1, -.346716518237613429735125496238e-2, -.345642745705399924625305529363e-3, -.465945712075144660128127285932e-2, .463233721760399968570059093379e-1, -.465945712075144660128127285932e-2, .74572353076796785473812644401e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(-2990.74381916711313842682247446, g1,h1), ad2(52.7335089318957983975754108783, g2,h2), adresMaple(-1.55316591501006490050412356029, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 5.40302305868193747631523421415, .842370984807896506652502321630, 3000.00000168294196961579301331 };
  double g2  [3] = { 100.000002593393309836346689203, 20.0000028407335251668631146238, 1.29662165491817335918491653269 };
  double gres[3] = { -.299347573779781143802019487004e-1, -.835252770706687315502272323403e-2, 29.7878379917274879549506191508 };
  double h1  [9] = { -8.41470984807980653750983111281, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .180e-3, 900., .108060461173627943480187321489e-5, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { .259344330983634668503649973204e-5, 20.0000056814770503337262284143, 2.59334330983634670170316639871, 20.0000056814770503337262284143, 2.00000368365264515246034072887, 2.84072352516686311712382796824, 2.59334330983634670170316639871, 2.84072352516686311712382796824, -99.9999999999500000000000041667 };
  double hres[9] = { -.238363915110320349981856250690e-1, .294542281922374022051042292612e-2, -29.6394978297109976589358558808, .294542281922374022051042292612e-2, .165935394219836843039883161414e-2, 3.01872919928445728585945124194, -29.6394978297109976589358558808, 3.01872919928445728585945124194, -150.055426801380172534016078989 };
  adreal<3,DO_HESS_TEST,double> ad1(8.41770984807980653750983111281, g1,h1), ad2(100.000001296671654918173346685, g2,h2), adresMaple(.839791181773046722812522927474e-1, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 5.94332536454953689141030268187, 900.841470984807896506652502322, 3001.68294196961579301330500464 };
  double g2  [3] = { 56.6236738966503184251301604763, 13.6467896425296574618092267838, -82.8503768258714773227319822970 };
  double gres[3] = { -.187738437174460909350115045220e-1, .968587393432082443852512372129e-3, .458556656746797970983021170819e-1 };
  double h1  [9] = { -9.25618083288686157317752553793, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 180., 900., 1.08060461173627943480187321489, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { 2.59344330983634668503649973204, 16.4875331676965205755997214187, -81.5536551709533039802137324310, 16.4875331676965205755997214187, 4.76425825688873977544740839150, -13.9886761709910670192595517977, -81.5536551709533039802137324310, -13.9886761709910670192595517977, -54.0302305868139717400936607443 };
  double hres[9] = { -.8309465030429483651835136432e-3, .14370889050157794093581170438e-3, .457027518652095000237678129323e-1, .14370889050157794093581170440e-3, -.106316767573208174879026555988e-2, -.454789250023892310974618233735e-2, .457027518652095000237678129322e-1, -.454789250023892310974618233729e-2, -.73444314689688154895353047121e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(3009.25618083288686157317752554, g1,h1), ad2(55.3269522417321450826119106103, g2,h2), adresMaple(1.55241280737150436043137609252, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 59.4332536454953689141030268187, 9000.84147098480789650665250232, 3016.82941969615793013305004643 };
  double g2  [3] = { -57.9727198092817783755213974620, 11.6260046701395820927276673926, 55.6988327438551546829930160511 };
  double gres[3] = { .192181348219898334450632160360e-2, -.109144331491383397462999519401e-2, -.208723773037385543571696518819e-2 };
  double h1  [9] = { -92.5618083288686157317752553793, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 1800., 900., 10.8060461173627943480187321489, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { 25.9344330983634668503649973204, 40.0334399218082132306326137416, 56.9955543987733280255112659171, 40.0334399218082132306326137416, 35.1583933933716985019376238704, 13.7211657429542593818854478719, 56.9955543987733280255112659171, 13.7211657429542593818854478719, 83.9071529076452452258863947824 };
  double hres[9] = { -.86217482056007009346590918964e-3, -.190303718139771469191997949059e-2, -.208336781017793800238710399487e-2, -.190303718139771469191997949059e-2, -.65643566614000428294097274033e-3, .20724527838610390234960360115e-3, -.208336781017793800238710399488e-2, .20724527838610390234960360115e-3, -.236994085531116458636946485291e-2 };
  adreal<3,DO_HESS_TEST,double> ad1(30092.5618083288686157317752554, g1,h1), ad2(-70.9399363584635118007038961222, g2,h2), adresMaple(1.57315371349395587435646972676, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -839072368147.981528711316206688, 8999999999999999999.45597888911, 2999999999998911957.77822126037 };
  double g2  [3] = { 936737182554.985282977365595191, 246654089.074169196557152575912, 3499935021638.20463037900506198 };
  double gres[3] = { -.312245727519258379978324438948e-12, -.728505831409605939037125170515e-16, -.116664188473076295662537833268e-11 };
  double h1  [9] = { 544021654910.480702774561066599, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, 18000000000000., 9000000000000., -1678143.05815290490451772789565, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { -1494497.81595039611669398835430, 47457313.5597675497375534501124, 349993502156.347973958148525614, 47457313.5597675497375534501124, -170312239.886395894061274938266, 7000097.96247238254865386811755, 349993502156.347973958148525614, 7000097.96247238254865386811755, -9367521275331.44786938532535075 };
  double hres[9] = { .4981663302183559833839333e-18, -.148823673373878158539874713619e-16, -.116664188473402595525530147838e-12, -.148823673373878158539874713619e-16, .567712024672008729231917383365e-16, .11666418847313976227848941234e-17, -.116664188473402595525530147838e-12, .11666418847313976227848941233e-17, .312250942506148498805639337953e-11 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999455978345089.51930, g1,h1), ad2(9367446550440.65034957949065133, g2,h2), adresMaple(1.57079632679177413704784090862, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -839072.368147981528711316206688, -9000000000000.54402111088936981, 3000000000000000001.08804222178 };
  double g2  [3] = { 540302305883.084695560440568610, 10805818.1983162708417179137670, 8414709848004.24017572750341047 };
  double gres[3] = { .180100768626574333666485215334e-6, -.180108365931054326965889386378e-11, .460591096890401904839115388040e-5 };
  double h1  [9] = { 544021.654910480702774561066599, -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, -18000000., 9000000000000., 1.67814305815290490451772789565, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { 1.49449781595039611669398835430, 1080559.02792697473354170953850, 841470984792.951528492998360463, 1080559.02792697473354170953850, 181.118304738801239072189409186, 16829647.6152044536393508648145, 841470984792.951528492998360463, 16829647.6152044536393508648145, -5403023058681.39717400936607443 };
  double hres[9] = { .6071806097869666598e-18, -.180115963237397966706777826947e-12, .460591096885621976721649741163e-6, -.180115963237397966706777826936e-12, .603732240844372992301411946810e-16, -.460591096887181437676251311157e-11, .460591096885621976721649741160e-6, -.460591096887181437676251311181e-11, .74108142515089889751608925358e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(-3000000000000544021.65491048070, g1,h1), ad2(5403023058756.12206480688588026, g2,h2), adresMaple(-1.57079452578721036946449588157, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -839071.529076452453097935476900, 8999999.45597888911063018659525, 2999999999999999999.99999891196 };
  double g2  [3] = { 999999999999.499985055021882163, 20000000.0002179190465235071341, -10000074.7248891308531391681161 };
  double gres[3] = { -.275230085920551401680042017466e-1, .275229415944252007043419676730e-6, 275229.366040605088647852170596 };
  double h1  [9] = { 544021.110889369813948768772740, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, 18.000000, 9000000000000., -.167814305815290490451772789565e-5, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 2000000.00004458380930470134349, -1000014.94497799283729450028155, 2000000.00004458380930470134349, 19.9998296877313785615552766626, 207.919046523509634151715258378, -1000014.94497799283729450028155, 207.919046523509634151715258378, -9999999999995.00000000000041667 };
  double hres[9] = { .505014210985188972677008223874e-2, -.229777804923239644372760343689e-7, -22977.8533044725961504387825053, -.229777804923239644372760343689e-7, -.454461429137747727917700259649e-13, .229778643670451178558498523523, -22977.8533044725961504387825054, .229778643670451178558498523523, -45450714115.8142397397759248853 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999455978.88911063018605123, g1,h1), ad2(9999999999994.99992527510961915, g2,h2), adresMaple(.291456744567810301826906365505, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -839072.368147981528711316206688, 8999999999999.45597888911063019, 2999999999999999998.91195777822 };
  double g2  [3] = { 540302305853.194739241432646276, 10806274.0364093178543195505308, -8414709848153.68995732254302213 };
  double gres[3] = { -.180100768617683784561898035669e-6, .180093171313203788507107060050e-11, .460591096890634271541201374887e-5 };
  double h1  [9] = { 544021.654910480702774561066599, -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, 18000000., 9000000000000., -1.67814305815290490451772789565, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { -1.49449781595039611669398835430, 1080650.19554558413606203689128, -841470984822.841484812006282797, 1080650.19554558413606203689128, -159.506212504075650376151944888, -16829191.7771114066267492280507, -841470984822.841484812006282797, -16829191.7771114066267492280507, -5403023058681.39717400936607443 };
  double hres[9] = { .8408526175610207641e-18, .180085574004523383435065855385e-12, .460591096889438253681389886682e-6, .180085574004523383435065855387e-12, .531691933395960940212286072750e-16, -.460591096887878789971405889600e-11, .460591096889438253681389886677e-6, -.460591096887878789971405889590e-11, -.74108142515163240661177054199e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999455978.34508951930, g1,h1), ad2(5403023058606.67228321184626860, g2,h2), adresMaple(1.57079452578721041862789829178, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -839155.436229360097504089834219, 89999999999999.4559788891106302, 2999999999999999989.11957778221 };
  double g2  [3] = { -839071529225.902233853903559493, -16779151.3910638139821690951372, 5440211108818.97324324995681268 };
  double gres[3] = { .279690509742028839025467254020e-7, -.279766482782376877580087846042e-12, -.209309421265659615753350695925e-6 };
  double h1  [9] = { 544075.513000458750386088136617, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, 180000000., 9000000000000., -16.7814305815290490451772789565, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { -14.9449781595039611669398835430, -1677687.22005985789191609113180, 544021110874.424835245243700684, -1677687.22005985789191609113180, -1719.90401679591349628688404933, 10880650.1368339197743957716189, 544021110874.424835245243700684, 10880650.1368339197743957716189, 8390715290764.52452258863947824 };
  double hres[9] = { .49422061970995583030e-18, -.279842455872800561668470422959e-13, -.209309421265693238157493230722e-7, -.279842455872800561668470422953e-13, .573305897315856250216573022931e-16, .209309421265635466411019830356e-12, -.209309421265693238157493230725e-7, .209309421265635466411019830364e-12, -.237828625439025835071837439975e-6 };
  adreal<3,DO_HESS_TEST,double> ad1(29999999999999455924.4869995412, g1,h1), ad2(-8390715291511.77343056383753659, g2,h2), adresMaple(1.57079660648540633628821537291, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -839071529075.613380729787495372, 8999999.45597888911063018659525, -1088045.22177873962680949532370 };
  double g2  [3] = { -62296308.0494439616871342053599, 685103745.427909401525440047939, -307.981609909267516580218436624 };
  double gres[3] = { .768559277575391769675476830977e-3, .125931618502140400496978181032e-2, .578981030446981394733559097524e-9 };
  double h1  [9] = { 544021110888.825792293858292038, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, -18000000., 9., -1678143.05815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -6229630.89861960892202789922984, 137020750.959086135371377583465, -61.9463154840247962681613398116, 137020750.959086135371377583465, -2133971770.26002094585317330668, 678.103894119526093145982736974, -61.9463154840247962681613398116, 678.103894119526093145982736974, -9.36752127533144786938532535075 };
  double hres[9] = { -.295476130736201875435100819353e-2, -.169041796591944028012324220173e-2, -.777828826130947119548513559546e-9, -.169041796591944028012324220171e-2, -.392250465825783162097572098024e-2, -.127216562658664827659456070566e-8, -.777828826130947119548513559556e-9, -.127216562658664827659456070569e-8, -.172201102349365933484796120777e-10 };
  adreal<3,DO_HESS_TEST,double> ad1(-544024110888.825792293858292038, g1,h1), ad2(-311481535.563459170769947092107, g2,h2), adresMaple(-1.57136887770816129197110875053, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 0., -9.54402111088936981340474766185, -1.91195777822126037319050467630 };
  double g2  [3] = { 62.8366112920642289376799289058, -695.909810280314746536354518859, -303.066835082901481034869938276 };
  double gres[3] = { -.187712376457259955306797619038e-2, -.932661355845627157235263274463e-2, .302047404416092233159262027882e-2 };
  double h1  [9] = { 0., -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, 18., 9., 1.67814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { 6.22963089861960892202789922984, -138.101357444326669872469030557, -61.4548380013881927136264899768, -138.101357444326669872469030557, 2144.77783511242629086408777760, 668.274344466794022055285740277, -61.4548380013881927136264899768, 668.274344466794022055285740277, -5.40302305868139717400936607443 };
  double hres[9] = { .558283303120318015459820669973e-3, -.795386170341937796065285099652e-3, .473701709098425260248847041482e-2, -.795386170341937796065285099652e-3, -.482391902233908366106061855397e-1, .614940971836408463723316031477e-2, .473701709098425260248847041482e-2, .614940971836408463723316031477e-2, .250551272860349587273382673449e-2 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(316.884567989661843275404327566, g2,h2), adresMaple(.946688693787732235140897223212e-2, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { .839071529075613380729787495372, -.544012110889369813404747661851, -3.00000108804222177873962680950 };
  double g2  [3] = { .999937703690513803910779762675, -19.9993148962258370480478124975, -311.481554930980446099728294825 };
  double gres[3] = { .782380211260029705118411633779e-1, .542432216883499882391241172894e-1, 1.39049667377754595215305849976 };
  double h1  [9] = { -.544021110888825792293858292038, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, -.18e-4, 9., -.167814305815290490451772789565e-5, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -.622963089861960892202789922984e-5, -1.99986297924616740960956241617, -62.2963099861960892201123256317, -1.99986297924616740960956241617, 19.9978660282010049365034847643, 685.103784162951952185002453377, -62.2963099861960892201123256317, 685.103784162951952185002453377, -9.99999999999500000000000041667 };
  double hres[9] = { -.705563708344211257402399444565e-1, .777756772503692235899522010142e-1, 2.62408752458717423805805431632, .777756772503692235899522010143e-1, .108172547401516362607814022519, 1.64345740490455596654490703811, 2.62408752458717423805805431632, 1.64345740490455596654490703811, 86.3608932816043479923865954087 };
  adreal<3,DO_HESS_TEST,double> ad1(.544018110888825792293858292038, g1,h1), ad2(9.99968851845006901955389902171, g2,h2), adresMaple(.543499273358557738155095338528e-1, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { 0., 8.45597888911063018659525233815, -4.08804222177873962680949532370 };
  double g2  [3] = { -61.7560066803279495028780556910, 674.297718045589157840317054561, -319.896254779059411167919984708 };
  double gres[3] = { -.197739317056136453140523418243e-2, -.603353499036492442668947647603e-2, .311200372181286516061359274299e-2 };
  double h1  [9] = { 0., -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, -18., 9., -1.67814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -6.22963089861960892202789922984, 135.940148220854111002865284127, -63.1377799710039857269314946200, 135.940148220854111002865284127, -2123.16574287770070216805031330, 701.933183859109882321385833143, -63.1377799710039857269314946200, 701.933183859109882321385833143, -5.40302305868139717400936607443 };
  double hres[9] = { .598392434781718733109406036240e-3, .395470848490137116392314532916e-2, .489944514440109257683056835130e-2, .395470848490137116392314532916e-2, -.357645371456829271265438060630e-1, .623621347449686336066249654990e-2, .489944514440109257683056835130e-2, .623621347449686336066249654990e-2, -.312373832812274767847593844093e-2 };
  adreal<3,DO_HESS_TEST,double> ad1(-3., g1,h1), ad2(-306.078521872299048927385595418, g2,h2), adresMaple(-3.13179156098251738249195868308, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -83.0680813785687927736275308346, 89.4559788891106301865952523381, -13.8804222177873962680949532370 };
  double g2  [3] = { -623.802161391037344655048786932, 6867.81907221104857092853514606, -306.041333822086747967347484873 };
  double gres[3] = { .212189694007482225819253265762e-1, .303779415572408318482745044873e-1, .181196241086218205175211801625e-2 };
  double h1  [9] = { 53.8580899780476115270700185232, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, -180., 9., -16.7814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -62.2963089861960892202789922984, 1371.88567138405680928118930132, -61.7522878753067194068742446365, 1371.88567138405680928118930132, -21356.4993205321640142058677335, 674.223341945164555920240833473, -61.7522878753067194068742446365, 674.223341945164555920240833473, 8.39071529076452452258863947824 };
  double hres[9] = { -.262676007844126242185652671974e-1, .526116957023911906143481077535e-1, .239556728673457684567647096877e-2, .526116957023911906143481077535e-1, .767385342677204685140002834587e-2, .391726700879972240733821948132e-2, .239556728673457684567647096877e-2, .391726700879972240733821948132e-2, .649221877035739638207879889695e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(-83.8580899780476115270700185232, g1,h1), ad2(-3123.20616460056898553653825440, g2,h2), adresMaple(-3.11474910163014034930167864136, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -839071529076.452453097935476900, -.544012110889369813404747661851, -1088042.22177873962680949232370 };
  double g2  [3] = { 40.0000000000142700854608718116, 200000000.000218735042550796229, .200000003500001688379596214511e-3 };
  double gres[3] = { -.493492262887721193233470578674e-9, .367632792178335187828303376209e-3, -.367632785744635676564251455198e-15 };
  double h1  [9] = { 544021110889.369813948768772740, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, 18.000000, .9e-11, -1678143.05815290490451772789565, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { 4.00000000000133333333333386668, 40000000.0000418735042550929563, .400000003500068355046262907845e-4, 40000000.0000418735042550929563, 418.735042551196229072104437370, 200.000007000070043425859175686, .400000003500068355046262907845e-4, 200.000007000070043425859175686, -.936752127533144786938532535075e-11 };
  double hres[9] = { .189726206310249155837397031315e-8, -.493492262888075023348886536800e-3, .493492253608446316654444952633e-15, -.493492262888075023348886536809e-3, .769702829763963740e-9, -.367632779311460779601836186587e-9, .493492253608446316654444952629e-15, -.367632779311460779601836186578e-9, .718046518611215478328062794774e-21 };
  adreal<3,DO_HESS_TEST,double> ad1(-544021110889.369813948765772740, g1,h1), ad2(200.000000000076034187942024782, g2,h2), adresMaple(-1.57079632642726382705324881098, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -.839072368147981528711316206688, -.544021110898369813404747661851, 1.08804222177873962980949532370 };
  double g2  [3] = { -.399999994597110274651936212659e-4, -199.999989194153882637205785314, .200000008414776514745631759859e-3 };
  double gres[3] = { .493491688373852234534001469703e-3, -367.631987363780817830048024973, -.367631604263939612488378501036e-3 };
  double h1  [9] = { .544021654910480702774561066599, -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, -.18e-4, .9e-11, 1.67814305815290490451772789565, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { -.400000000000133333333333386668e-5, -39.9999989194353882637205918648, .400000008414843181412298453193e-4, -39.9999989194353882637205918648, 10.8056461173627938146853988151, 200.000016829619696157930266383, .400000008414843181412298453193e-4, 200.000016829619696157930266383, -.540302305868139717400936607443e-11 };
  double hres[9] = { -.189725967623904565014195478593e-2, 493.491047163894128231728372287, .493490531362801933648528161696e-3, 493.491047163894128231728372288, 854.499218174788176525470, -367.630366665499369200721120960, .493490531362801933648528161687e-3, -367.630366665499369200721120953, -.735260862498864598255810141197e-3 };
  adreal<3,DO_HESS_TEST,double> ad1(-.544021654910480705774561066599, g1,h1), ad2(-.199999994597043607985269519325e-3, g2,h2), adresMaple(-1.57116395919294833886345281187, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -.839072368147981528711316206688e-6, -.544021110889369804404747661851, -.108804222177573962680949532370e-5 };
  double g2  [3] = { .410000000000128333333333387085e-10, .220000000000190000000000134166e-3, .200000000000056666666666695001e-3 };
  double gres[3] = { -.520004442504208776649410977837e-3, 18.3820045021266209914046232109, 367.631597738669258047742618081 };
  double h1  [9] = { .544021654910480702774561066599e-6, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, .18e-10, .9e-11, -.167814305815290490451772789565e-5, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { .400000000000133333333333386668e-11, .420000000000390000000000267500e-4, .400000000000123333333333388335e-4, .420000000000390000000000267500e-4, 20.0000000003900000000005341666, 200.000000000180000000000136666, .400000000000123333333333388335e-4, 200.000000000180000000000136666, -.999999999999500000000000041667e-11 };
  double hres[9] = { .199742521786274403172767480108e-2, -26.5132592665697767141795797210, -493.490508265755856967321248500, -26.5132592665697767141795797167, -735.52385396513418088323649, 1097.6774732374981455330050, -493.490508265755856967321248492, 1097.6774732374981455330078, -2346.894049503257783666018 };
  adreal<3,DO_HESS_TEST,double> ad1(-.544021654910480699774561066599e-6, g1,h1), ad2(.210000000000061666666666693751e-9, g2,h2), adresMaple(-1.57041031276829663166767891653, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -.839072368147981528711316206688, -.544021110880369813404747661851, -1.08804222177873962380949532370 };
  double g2  [3] = { .400000005403156392014730560677e-4, 200.000010806246117362794481352, .199999991585356818587701626809e-3 };
  double gres[3] = { -.493491717023641726866335257355e-3, 367.632027090279571213649123661, -.367631674925616146485068202685e-3 };
  double h1  [9] = { .544021654910480702774561066599, -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, .18e-4, .9e-11, -1.67814305815290490451772789565, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { .400000000000133333333333386668e-5, 40.0000010806446117362794614686, .399999991585423485254368320143e-4, 40.0000010806446117362794614686, 10.8064461173627948813520654827, 199.999983170780303842070000283, .399999991585423485254368320143e-4, 199.999983170780303842070000283, -.540302305868139717400936607443e-11 };
  double hres[9] = { .189725978447833726310747438305e-2, -493.491104463422327654897266319, .493490633281704906819602463487e-3, -493.491104463422327654897266322, -814.772800455331144539946, -367.630507988712226704320081701, .493490633281704906819602463496e-3, -367.630507988712226704320081705, .735261085555509020372759041499e-3 };
  adreal<3,DO_HESS_TEST,double> ad1(-.544021654910480699774561066599, g1,h1), ad2(.200000005403089725348063867343e-3, g2,h2), adresMaple(-1.57042869437698163761034400375, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -83.9071537467167743023388470413, -.544021110799369813404747661851, -10.8804222177873962650949532370 };
  double g2  [3] = { .399999999161061804256880934409e-3, 1999.99998322056941847095228815, .200000005440277775560364827381e-3 };
  double gres[3] = { -.493492255061188297258321839079e-4, 36.7632781244073056917730204697, -.367632767567500253640527406587e-5 };
  double h1  [9] = { 54.4021116329580922298445795898, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, .180e-3, .9e-11, -16.7814305815290490451772789565, .9e-11, -1.08804222177873962680949532370 };
  double h2  [9] = { .400000000000133333333333386668e-4, 399.999998322256941847095362149, .400000005440344442227031520715e-4, 399.999998322256941847095362149, -16.7774305815290437118439456186, 200.000010880622217787396401428, .400000005440344442227031520715e-4, 200.000010880622217787396401428, .839071529076452452258863947824e-11 };
  double hres[9] = { .189726203137031304193651821466e-3, -49.3492246568035473280485263589, .493492227209273735794987636602e-5, -49.3492246568035473280485263597, -1.1430362157013705822690, -3.67632742460320429932255499086, .493492227209273735794987636604e-5, -3.67632742460320429932255499082, .735265643233695508503158330206e-6 };
  adreal<3,DO_HESS_TEST,double> ad1(-54.4021116329580921998445795898, g1,h1), ad2(.199999999160995137590214241075e-2, g2,h2), adresMaple(-1.57075956351621724388739700704, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -839071529077.291523787940400276, 8999999.45597888911063018659525, -1088039.22177873962680949532370 };
  double g2  [3] = { 62296309.9229482167534237792369, 685103782.897994502851231525481, 314.981479952693375622571486360 };
  double gres[3] = { -.768577543234764342529981847346e-3, .125934908710899825972197901234e-2, -.566126824065118317374756777469e-9 };
  double h1  [9] = { 544021110889.913834515637031664, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, 18000000., 9., -1678143.05815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { 6229630.89861960892202789922984, 137020754.706094645503956731219, 62.6463024883673821723966447852, 137020754.706094645503956731219, 2133971807.73010604717896478422, 692.103634206377811230688836446, 62.6463024883673821723966447852, 692.103634206377811230688836446, -9.36752127533144786938532535075 };
  double hres[9] = { .295485658910841580807274583697e-2, -.169051277924893472164134621494e-2, .759306775408448896821858806491e-9, -.169051277924893472164134621492e-2, .392266921223053719204924950097e-2, -.124649764001670895787750629662e-8, .759306775408448896821858806501e-9, -.124649764001670895787750629665e-8, -.172180099285529057915074655061e-10 };
  adreal<3,DO_HESS_TEST,double> ad1(-544018110889.913834515637031664, g1,h1), ad2(311481554.298501721432842830877, g2,h2), adresMaple(-1.57022376953250666348782814812, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -1.67814305815290490451772789565, -9.54402111088936981340474766185, 4.08804222177873962680949532370 };
  double g2  [3] = { -61.7560066803279495028780556910, -674.297718045589157840317054561, 319.896254779059411167919984708 };
  double gres[3] = { .278740904502537978632785520246e-2, .175732095394376556582754260486e-2, .602849617322035092069441542990e-3 };
  double h1  [9] = { 1.08804222177873962680949532370, -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, -18., 9., 1.67814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -6.22963089861960892202789922984, -135.940148220854111002865284127, 63.1377799710039857269314946200, -135.940148220854111002865284127, -2123.16574287770070216805031330, 701.933183859109882321385833143, 63.1377799710039857269314946200, 701.933183859109882321385833143, -5.40302305868139717400936607443 };
  double hres[9] = { -.495095004556128092903309774904e-2, -.968544005685925418301056045654e-2, .644419005648082985469750726344e-4, -.968544005685925418301056045654e-2, -.415759109549781501753596228366e-1, .173398684217635589187603984217e-2, .644419005648082985469750726344e-4, .173398684217635589187603984217e-2, .457854060682990656350837688696e-2 };
  adreal<3,DO_HESS_TEST,double> ad1(-4.08804222177873962680949532370, g1,h1), ad2(-306.078521872299048927385595418, g2,h2), adresMaple(-3.12823725989136180645317103320, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -.839071529077291523787940400276, -.544012110889369813404747661851, 2.99999891195777822126037319050 };
  double g2  [3] = { 1.00006229630848619608922032066, 20.0006851037541629519521891691, 311.481534930980446103061628159 };
  double gres[3] = { -.782328382078227350668098222188e-1, .542405366797301109368866018807e-1, 1.98851619148157442359952475070 };
  double h1  [9] = { .544021110889913834515637031664, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, .18e-4, 9., -.167814305815290490451772789565e-5, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { .622963089861960892202789922984e-5, 2.00013702075183259039043775049, 62.2963079861960892204456589651, 2.00013702075183259039043775049, 20.0021339717789950634965169023, 685.103744162951952191669120043, 62.2963079861960892204456589651, 685.103744162951952191669120043, -9.99999999999500000000000041667 };
  double hres[9] = { .705528877548144211833471814888e-1, .777716162719218360961549554002e-1, 2.55883098524777372668789052707, .777716162719218360961549554002e-1, -.108153533733316202082277409430, -1.04157354902810201509397424697, 2.55883098524777372668789052707, -1.04157354902810201509397424697, -123.605856881093648488881079303 };
  adreal<3,DO_HESS_TEST,double> ad1(-.544018110889913834515637031664, g1,h1), ad2(10.0003114815399309804461018116, g2,h2), adresMaple(-.543465483043647746438636241022e-1, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -1.67814305815290490451772789565, 8.45597888911063018659525233815, 1.91195777822126037319050467630 };
  double g2  [3] = { 62.8366112920642289376799289058, 695.909810280314746536354518859, 303.066835082901481034869938276 };
  double gres[3] = { -.649195308702439727701389458035e-2, .134338374901158743146774582145e-1, .263085614362244162908960941187e-3 };
  double h1  [9] = { 1.08804222177873962680949532370, -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, 18., 9., -1.67814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { 6.22963089861960892202789922984, 138.101357444326669872469030557, 61.4548380013881927136264899768, 138.101357444326669872469030557, 2144.77783511242629086408777760, 668.274344466794022055285740277, 61.4548380013881927136264899768, 668.274344466794022055285740277, -5.40302305868139717400936607443 };
  double hres[9] = { .588895930622510186465158868541e-2, .631696958199940281674026722210e-2, -.308920610320434755244951084756e-3, .631696958199940281674026722210e-2, -.430412409561253006195991320793e-1, .225086585173064357869732527584e-2, -.308920610320434755244951084756e-3, .225086585173064357869732527584e-2, -.383379155963999607709087358107e-2 };
  adreal<3,DO_HESS_TEST,double> ad1(1.91195777822126037319050467630, g1,h1), ad2(316.884567989661843275404327566, g2,h2), adresMaple(.603353640602793552856384599385e-2, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -84.7462244367216976781452587302, 89.4559788891106301865952523381, -7.8804222177873962680949532370 };
  double g2  [3] = { 622.124018332884439750531059036, 6834.25621104799047283818058814, 316.921756039874144235442438111 };
  double gres[3] = { -.256710282693071889117347232999e-1, .464614959470775848238529410296e-1, -.171742103808536157188390548782e-2 };
  double h1  [9] = { 54.9461321998263511538795138470, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, 180., 9., -16.7814305815290490451772789565, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { 62.2963089861960892202789922984, 1368.52938526775099947215384552, 62.8403300970854590336837399603, 1368.52938526775099947215384552, 21322.9364593691059161155131755, 695.984186380739348456430739947, 62.8403300970854590336837399603, 695.984186380739348456430739947, 8.39071529076452452258863947824 };
  double hres[9] = { .281406569048144738615747527135e-1, .504207640701253858857470812285e-1, -.227573067522204395637035281812e-2, .504207640701253858857470812285e-1, -.913399633373140065416115532553e-1, .373317045632981155772281472362e-2, -.227573067522204395637035281812e-2, .373317045632981155772281472362e-2, .219314969067494154608877191458e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(-24.9461321998263511538795138470, g1,h1), ad2(3106.42473401903993649136097544, g2,h2), adresMaple(-.803032363800657287200059085549e-2, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -839071529084.843167549628472347, 899999999.455978889110630186595, -1085042.22177873962680949532370 };
  double g2  [3] = { 25934526.7735762201648436911737, 284074539.867111818008006851198, 479.665667663110286369477473383 };
  double gres[3] = { -.323787605461047061624926130049e-3, .525469767711401449373200762258e-3, .405899880235023093115497245578e-9 };
  double h1  [9] = { 544021110894.810024513641359985, -.839071529076452452258863947824, -1678143.05815290490451772789565, -.839071529076452452258863947824, 180000000., 900., -1678143.05815290490451772789565, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { 2593443.30983634668503649973204, 56814889.2383798129387056314688, 60.9337833154927620621302459985, 56814889.2383798129387056314688, 368365383.250288584727449256432, 354.073052950944901802579960847, 60.9337833154927620621302459985, 354.073052950944901802579960847, -936.752127533144786938532535075 };
  double hres[9] = { .125013140148516336474509525663e-2, -.710477266942204154828180078464e-3, -.610961199773367740699878933540e-9, -.710477266942204154828180078474e-3, .68269845927639273298140055238e-3, -.39832619982351798612925433579e-9, -.610961199773367740699878933560e-9, -.39832619982351798612925433577e-9, -.173145409019449934510637339104e-8 };
  adreal<3,DO_HESS_TEST,double> ad1(-541021110894.810024513641359985, g1,h1), ad2(129673102.243944867396611925135, g2,h2), adresMaple(-1.57055664465098481933081146056, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -9.22978681984097697484750342606, -900.544021110889369813404747662, 3001.08804222177873962680949532 };
  double g2  [3] = { 28.0957974884505048897286634239, -176.013891343058367898862142002, 971.143150299713840904327308232 };
  double gres[3] = { .876364653364211847000120359464e-2, -.976565598174892811480346285011e-1, .451035026159653185580261491263 };
  double h1  [9] = { 5.98423221978306794745222428036, -.839071529076452452258863947824, 1.67814305815290490451772789565, -.839071529076452452258863947824, -180., 900., 1.67814305815290490451772789565, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { -2.59344330983634668503649973204, -46.0088243859744679277911605492, 110.081531579153117515615229483, -46.0088243859744679277911605492, -357.559318397883239716534785512, 452.368549478265612709549927817, 110.081531579153117515615229483, 452.368549478265612709549927817, -540.302305868139717400936607443 };
  double hres[9] = { -.65478896960213282262171248857e-3, -.171545672782195793038441978035e-1, .423093759312345286728958271843e-1, -.171545672782195793038441978034e-1, -.68893140247112863305554242187e-1, -.32703394278043067588898662707e-1, .423093759312345286728958271843e-1, -.32703394278043067588898662708e-1, .66852315108721691391584159951 };
  adreal<3,DO_HESS_TEST,double> ad1(-3005.98423221978306794745222428, g1,h1), ad2(410.630140376322383149111620841, g2,h2), adresMaple(-1.43503242583807339232156038610, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -8.39071529076536359411771593069, -.543121110889369813404747661851, 2999.99999891195777822126037319 };
  double g2  [3] = { 100.000025934383098363466854532, 200.000284074252516686311387382, 129.671165491817334418491653269 };
  double gres[3] = { -.784676111602249182450137921779e-2, .544306352398766822181241291116e-3, 3.00061595123522581211939493785 };
  double h1  [9] = { 5.44021110889424215515836598832, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, .180e-3, 900., -.167814305815290490451772789565e-5, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { .259344330983634668503649973204e-5, 20.0000568148605033372622766432, 25.9343330983634668670316639871, 20.0000568148605033372622766432, 20.0003683653545152460340653868, 284.074152516686311412382796824, 25.9343330983634668670316639871, 284.074152516686311412382796824, -999.999999999500000000000041667 };
  double hres[9] = { .701007157481671643173365969151e-2, .784571834182871554804703957458e-3, -.299159170450638494172509556977, .784571834182871554804703957458e-3, -.108796623501493184540910537354e-3, .301341017269445895113644223412, -.299159170450638494172509556977, .301341017269445895113644223412, -.686801713076306155682951677438 };
  adreal<3,DO_HESS_TEST,double> ad1(-5.43721110889424215515836598832, g1,h1), ad2(1000.00012967166549181733429349, g2,h2), adresMaple(-.543715682424303623680415678689e-2, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -9.22978681984097697484750342606, 899.455978889110630186595252338, 2998.91195777822126037319050468 };
  double g2  [3] = { 79.9646636851774385904586580647, 392.134813690314254859236784980, -711.798819316079172400677335028 };
  double gres[3] = { -.260914994551236800743957623516e-1, -.607081165835446212971948697432e-1, .439852651559850993349072300920 };
  double h1  [9] = { 5.98423221978306794745222428036, -.839071529076452452258863947824, -1.67814305815290490451772789565, -.839071529076452452258863947824, 180., 900., -1.67814305815290490451772789565, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { 2.59344330983634668503649973204, 67.6209166207000566238286248470, -58.2126653824261838148852348426, 67.6209166207000566238286248470, 379.171410632608828412572249810, 115.780155555107010048548999165, -58.2126653824261838148852348426, 115.780155555107010048548999165, -540.302305868139717400936607443 };
  double hres[9] = { -.25516765950656213861182099814e-3, -.132079810410991235796031684976e-1, .407503475444234342768741140749e-1, -.132079810410991235796031684975e-1, -.696674162491167128638666327625e-1, -.56051342892748895838863213119e-1, .407503475444234342768741140749e-1, -.56051342892748895838863213118e-1, -.62277983061778991870708795129 };
  adreal<3,DO_HESS_TEST,double> ad1(2994.01576778021693205254777572, g1,h1), ad2(669.974471359957051652761594045, g2,h2), adresMaple(1.35065179079423886274690278594, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "atan2(ad1,ad2)" << endl;
  double g1  [3] = { -92.2978681984097697484750342606, 8999.45597888911063018659525234, 2989.11957778221260373190504676 };
  double g2  [3] = { 175.437178075989423277763578422, 2672.92921935157262333872184534, 673.693276381187147656572648453 };
  double gres[3] = { -.590533584792090162346520734144e-2, -.846614058458392225171262071331e-1, -.209703774736542792885060841567e-1 };
  double h1  [9] = { 59.8423221978306794745222428036, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, 1800., 900., -16.7814305815290490451772789565, 900., -1.08804222177873962680949532370 };
  double h2  [9] = { 25.9344330983634668503649973204, 551.367274451843573712921648024, 80.3365441873004481908397635055, 551.367274451843573712921648024, 3666.87221457093129160035789765, 392.878574694560274059998995861, 80.3365441873004481908397635055, 392.878574694560274059998995861, 839.071529076452452258863947824 };
  double hres[9] = { -.87080535893659527870919283195e-3, -.168824411975073757908357143438e-1, -.21624685304097300275285675841e-2, -.168824411975073757908357143440e-1, -.70411604664044684262786755489e-1, .2150188818118181997556318211e-2, -.21624685304097300275285675841e-2, .2150188818118181997556318213e-2, -.238183019192806640588791932157e-1 };
  adreal<3,DO_HESS_TEST,double> ad1(29940.1576778021693205254777572, g1,h1), ad2(457.650125841720890259385918196, g2,h2), adresMaple(1.55551202224976899778806117747, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(atan2(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 936845.802745898101417226388329, 89999999999999.6500064978287070, 2999999999999999993.00012995657 };
  double g2  [3] = { -839086474054.611956220030887708, 21113761594197.7251773204646254, 544020363640461838.206689314857 };
  double gres[3] = { 0., -0., -0. };
  double h1  [9] = { 350028.501521510081412864252030, .936752127533144786938532535075, 18.7350425506628957387706507015, .936752127533144786938532535075, 180000000., 9000000000000., 18.7350425506628957387706507015, 9000000000000., -.699987004342585904235304973562 };
  double h2  [9] = { -14.9449781595039611669398835430, 43905666.2465483552591586571466, 544019616391.553863008630967863, 43905666.2465483552591586571466, -17031227540286.9026253219722214, 3367232687013.80263499331457581, 544019616391.553863008630967863, 3367232687013.80263499331457581, 839071529076452452.258863947824 };
  double hres[9] = { 0., 0., 0., 0., 0., -0., 0., -0., -0. };
  adreal<3,DO_HESS_TEST,double> ad1(29999999999999649971.4984784899, g1,h1), ad2(-839079001565532204.239447417766, g2,h2), adresMaple(-0., gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 540302846170.445585540654008380, 8999999999999999999.15852901519, 2999999999998317058.03038420699 };
  double g2  [3] = { 936753622030.960737334649229063, 405686.21016877343430675418196, -349993502172.040201025627684839 };
  double gres[3] = { -0., -0., 0. };
  double h1  [9] = { 841471826278.881314549008974132, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18000000000000., 9000000000000., 1080604.61173627943480187321489, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { -1494497.81595039611669398835430, -2684876.67540383644249057343407, 349993502172.787449933602882898, -2684876.67540383644249057343407, -1703124.45971863951353128064744, -699984.725152120669172296789743, 349993502172.787449933602882898, -699984.725152120669172296789743, 936752127533.144786938532535075 };
  double hres[9] = { 0., 0., 0., 0., 0., 0., 0., 0., -0. };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999158528173721.11869, g1,h1), ad2(-936752874782.052762136590882069, g2,h2), adresMaple(-0., gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 540302.305868139717941238913311, 8999999.15852901519210349334750, 2999999999999999999.99999831706 };
  double g2  [3] = { 999999999999.500001494497857617, -1999999.99999672080953476502032, 999999.252750925358135274994673 };
  double gres[3] = { -0., 0., 0. };
  double h1  [9] = { 841470.984807896507493973306438, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, 18.000000, 9000000000000., .108060461173627943480187321489e-5, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { -.149449781595039611669398835430e-5, 1999999.99999444161906952995731, -999998.505502017382937216647679, 1999999.99999444161906952995731, -2.00000170312158621438444732504, 4.27919046523472967485048593544, -999998.505502017382937216647679, 4.27919046523472967485048593544, 999999999999.500000000000041667 };
  double hres[9] = { -0., 0., 0., 0., 0., 0., 0., 0., -0. };
  adreal<3,DO_HESS_TEST,double> ad1(2999999158529.01519210349250603, g1,h1), ad2(-999999999999.500000747248949642, g2,h2), adresMaple(-0., gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 540302.846170445585540654008380, 8999999999999.15852901519210349, 2999999999999999998.31705803038 };
  double g2  [3] = { 540302305869.634215216887003560, -1080602.33254581419973886503107, 841470984807.149257744527123572 };
  double gres[3] = { -0., 0., -0. };
  double h1  [9] = { 841471.826278881314549008974132, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 18000000., 9000000000000., 1.08060461173627943480187321489, 9000000000000., -1.68294196961579301330500464326 };
  double h2  [9] = { -1.49449781595039611669398835430, 1080600.05335534896467585684725, -841470984806.402008836551925513, 1080600.05335534896467585684725, -2.78372719795066388204357998526, 1682944.24880625824836801282708, -841470984806.402008836551925513, 1682944.24880625824836801282708, 540302305868.139717400936607443 };
  double hres[9] = { 0., 0., 0., 0., 0., 0., 0., 0., -0. };
  adreal<3,DO_HESS_TEST,double> ad1(2999999999999158528.17372111869, g1,h1), ad2(-540302305868.886966308911805501, g2,h2), adresMaple(-0., gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 0., -9.84147098480789650665250232163, -1.31705803038420698669499535674 };
  double g2  [3] = { -5.68932859275146920462696262240, -5.77043302989324008708148465221, -3.95628643411770096766645193655 };
  double gres[3] = { -105.745138766246129005438485961, -250.138308854779929081273808149, -92.6558362922501933754824690681 };
  double h1  [9] = { 0., .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., -1.08060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, 12.6214706715227596089648425193, 7.07110188342750542868040155147, 12.6214706715227596089648425193, 20.2591132782143555303588172396, 8.53397961124531253518836251036, 7.07110188342750542868040155147, 8.53397961124531253518836251036, .540302305868139717400936607443 };
  double hres[9] = { 776.733361079730469259728770646, 2121.64874918260960317599720315, 737.128570399617555082647542834, 2121.64874918260960317599720315, 4507.99715204226876784567116297, 1858.91920599154591096511505132, 737.128570399617555082647542834, 1858.91920599154591096511505132, 543.430247907454917287719603886 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(2.57451314344166474361301300748, g2,h2), adresMaple(16.9182306419720236188456954021, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { -.540302305867599415095068467726, -.841461984807896506652502321630, -3.00000168294196961579301330500 };
  double g2  [3] = { 1.00000622963039861960892206957, 2.00000685103664162951952196669, -3.11481444930980446118061628159 };
  double gres[3] = { .557940146600346360169693368771, .778140752581667495584931430290, 4.87582791099308862722870465443 };
  double h1  [9] = { -.841470984807055035667694425123, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, -.18e-4, 9., .108060461173627943480187321489e-5, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { -.622963089861960892202789922984e-5, -2.00001370207428325903904385005, 6.22962989861960892219456589651, -2.00001370207428325903904385005, -2.00002133971688995063496524402, 6.85103564162951952221669120043, 6.22962989861960892219456589651, 6.85103564162951952221669120043, .999999999999500000000000041667 };
  double hres[9] = { .414177079789465035145403173012, -1.93895671544410654307682471740, 1.87166886739933735306858380598, -1.93895671544410654307682471740, -2.64540158753133940559984935788, -11.4587277186371287108278979173, 1.87166886739933735306858380598, -11.4587277186371287108278979173, 63.6760817124972316571973781523 };
  adreal<3,DO_HESS_TEST,double> ad1(.841467984807055035667694425123, g1,h1), ad2(-1.00000311481494930980446105562, g2,h2), adresMaple(1.18839998157419431905762463880, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 1.08060461173627943480187321489, 8.15852901519210349334749767837, 1.31705803038420698669499535674 };
  double g2  [3] = { -5.68932859275146920462696262240, 5.77043302989324008708148465221, 3.95628643411770096766645193655 };
  double gres[3] = { 1.10838274806765644088503162152, 35.6352976436787315057386349603, 7.44541531789159166748714276438 };
  double h1  [9] = { 1.68294196961579301330500464326, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., 1.08060461173627943480187321489, 9., -1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, -12.6214706715227596089648425193, -7.07110188342750542868040155147, -12.6214706715227596089648425193, 20.2591132782143555303588172396, 8.53397961124531253518836251036, -7.07110188342750542868040155147, 8.53397961124531253518836251036, .540302305868139717400936607443 };
  double hres[9] = { -11.7165606664513326961223289361, -74.0601308112345543613341268186, -4.86072841135337082843318787847, -74.0601308112345543613341268186, 652.299529743452063382115964469, 200.212919485551543724386477557, -4.86072841135337082843318787847, 200.212919485551543724386477557, 31.7451580919473609406827991747 };
  adreal<3,DO_HESS_TEST,double> ad1(1.31705803038420698669499535674, g1,h1), ad2(2.57451314344166474361301300748, g2,h2), adresMaple(2.03200332626443844787438427664, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 5.94332536454953689141030268187, 899.158529015192103493347497678, 2998.31705803038420698669499536 };
  double g2  [3] = { 51.4367872769776250550571610123, -7.96530259219593123422823751399, 85.4438201357078240077684820290 };
  double gres[3] = { .211055617497464513237696873506e-180, -.408219363128220711879343763580e-181, .323571344386845833717950288427e-180 };
  double h1  [9] = { 9.25618083288686157317752553793, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 180., 900., 1.08060461173627943480187321489, 900., -1.68294196961579301330500464326 };
  double h2  [9] = { 2.59344330983634668503649973204, 5.12455906702906812043774287909, -86.7405417906259973502867318950, 5.12455906702906812043774287909, 2.60304903341618090584366196172, 19.6701632213247932468405410675, -86.7405417906259973502867318950, 19.6701632213247932468405410675, 54.0302305868139717400936607443 };
  double hres[9] = { .868723107785734122592551375919e-178, -.167716318161551752450922492519e-178, .132838973385385541272700057865e-177, -.167716318161551752450922492519e-178, .325858070004680077892970279156e-179, -.256673313043434667417334490040e-178, .132838973385385541272700057865e-177, -.256673313043434667417334490040e-178, .204498530456088943491227786249e-177 };
  adreal<3,DO_HESS_TEST,double> ad1(2990.74381916711313842682247446, g1,h1), ad2(-52.7335089318957983975754108783, g2,h2), adresMaple(.512820974957832588372941876137e-183, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 1000099.99999949995000000004167, 90000000000000.0000010000000000, 3000000000000000000.00002000000 };
  double g2  [3] = { -839071529076.452467203842107328, -1.67814305813011299986537726557, 544021.110889369812657498753876 };
  double gres[3] = { -.459551663274428063301070680495e-16342684, -.949844124763090090199403437391e-16342696, .296930603386583848257870755310e-16342690 };
  double h1  [9] = { -1.00009999999983331666666667500, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, 180000000., 9000000000000., 19.9999999999900000000000008333, 9000000000000., .199999999999966666666666668333e-5 };
  double h2  [9] = { -14.9449781595039611669398835430, -1678143.05810732109521302663549, 544021110889.369811910249845901, -1678143.05810732109521302663549, -.167816008937876704836220031272e-5, 1.08804222178101881727473038671, 544021110889.369811910249845901, 1.08804222178101881727473038671, 839071.529076452452258863947824 };
  double hres[9] = { .172931370794575454128098173808e-16342670, .357430633589811318275589565341e-16342682, -.111736326975905738553091704787e-16342676, .357430633589811318275589565341e-16342682, .738770890917923172891092697036e-16342694, -.230947034211860295051177780178e-16342688, -.111736326975905738553091704787e-16342676, -.230947034211860295051177780178e-16342688, .721963179349345988782408363484e-16342683 };
  adreal<3,DO_HESS_TEST,double> ad1(30000000000000000001.0001000000, g1,h1), ad2(-839071.529076452459731353027576, g2,h2), adresMaple(.122122279056679919552401317568e-16342697, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 0., -8.99999900000000000016666666667, -3.00000199999999999966666666667 };
  double g2  [3] = { .540308535499038337009858635342, -.108061146277392106432139509825e-5, .841467869992447196848041307680e-6 };
  double gres[3] = { .593589949118195819068407057890, -.280809078107138193643041308418e-5, .384141389626829355122111967565e-6 };
  double h1  [9] = { 0., .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, 18., 9., -1.99999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 6.22963089861960892202789922984, -1.08061831381156269384091698161, .841464755176997887043580293731, -1.08061831381156269384091698161, .108062595145416938543683837558e-5, -.168293511857815138378548275990e-5, .841464755176997887043580293731, -.168293511857815138378548275990e-5, -.540302305868139717400936607443e-6 };
  double hres[9] = { 7.19630194010950241481957681968, -2.80810913891240989204272911433, .384134720649398777121257467799, -2.80810913891240989204272911433, .604995330104916269702520719866e-5, -.329268828231275899450316023056e-5, .384134720649398777121257467799, -.329268828231275899450316023056e-5, -.281682692011653963398397879123e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(.540305420683589027205397621393e-6, g2,h2), adresMaple(1.00000059358635096929186597327, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 999999999999.500001000000041667, .999999999999983333333333334167e-5, 1.99999999999966666966666668333 };
  double g2  [3] = { .400000093675346086647812080521e-5, .200000187350625506628957521040e-5, .234999350217195961878431942012e-17 };
  double gres[3] = { .572620561119180959254608946956e-4, .276310470001371365837009246920e-4, .364663619149169484431136162129e-16 };
  double h1  [9] = { -999999.999999833334333333341667, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, 18.000000, .9e-11, 1999999.99999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { 4.00000000000133333333333386668, 4.00000187350825506628957654374, .434999350217262628545098635346e-11, 4.00000187350825506628957654374, .187350825506628957921039840349e-5, .269998700434458590423530630689e-11, .434999350217262628545098635346e-11, .269998700434458590423530630689e-11, -.936752127533144786938532535075e-18 };
  double hres[9] = { 61.2620431735973213047143256402, 57.2620699919995172518030301998, .704473765360539527106195801902e-10, 57.2620699919995172518030301998, .258842365538507255390695398641e-4, .413017027140498316267730287973e-10, .704473765360539527106195801902e-10, .413017027140498316267730287973e-10, -.129417035085149580066566399870e-16 };
  adreal<3,DO_HESS_TEST,double> ad1(999999.999999833337333333341667, g1,h1), ad2(.200000093675279419981145387187e-11, g2,h2), adresMaple(1.00000000002763103405802807037, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 1.00000099999949999950000004167, .999990999999833333333333341667e-6, -.199999999999666666666666668333e-5 };
  double g2  [3] = { -.345969769413319361593239725924e-11, -.91939538826572056519812811844e-12, .284147098480856317331916925497e-17 };
  double gres[3] = { .463377888668403631354180709769e-10, .127019143144536114832771977133e-10, -.363369770804343185690238664130e-16 };
  double h1  [9] = { -.100000099999983333316666667500e-5, .999999999999500000000000041667, -1.99999999999900000000000008333, .999999999999500000000000041667, -.18e-4, .9e-11, -1.99999999999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { -.400000000000133333333333386668e-5, -.291939538826772056519812945178e-5, .484147098480922983998583618831e-11, -.291939538826772056519812945178e-5, .108060461173227943480186788156e-5, .368294196961779301330500597659e-11, .484147098480922983998583618831e-11, .368294196961779301330500597659e-11, -.540302305868139717400936607443e-18 };
  double hres[9] = { .498023405377471196611321157266e-4, .394135360421558155926605886294e-4, -.571265292115563178958295914442e-10, .394135360421558155926605886294e-4, -.149291051805161967006689058005e-4, -.490429311228844746945486284272e-10, -.571265292115563178958295914442e-10, -.490429311228844746945486284272e-10, -.981934272363080536138676363500e-18 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000099999683333316666667500e-5, g1,h1), ad2(-.145969769413252694926573032590e-17, g2,h2), adresMaple(1.00000000000000002016646744503, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { .100000099999949999950000004167e-5, .100000000000883333333333334167e-5, .200000299999966666666666668333e-11 };
  double g2  [3] = { .100000399999950000133333337500e-11, .200000199999900000200000008333e-11, .199999900000066666683333360001e-17 };
  double gres[3] = { -.266311286399966957096787367360e-10, -.542620944938605291321876738409e-10, -.532620076008567330505461391884e-16 };
  double h1  [9] = { -.100000099999983333316666667500e-11, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, .18e-10, .9e-11, .199999999999900000000000008333e-5, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { .400000000000133333333333386668e-11, .200000399999900000400000008333e-5, .399999900000133333350000053335e-11, .200000399999900000400000008333e-5, .199999999999900000400000008334e-5, .199999800000200000033333466666e-11, .399999900000133333350000053335e-11, .199999800000200000033333466666e-11, -.999999999999500000000000041667e-18 };
  double hres[9] = { .999895475918036926554626120617e-6, -.522621457559164263097459917208e-4, -.106524047832728580575773771317e-9, -.522621457559164263097459917208e-4, -.522620402317952944307421634392e-4, -.512619759698597890597458900347e-10, -.106524047832728580575773771317e-9, -.512619759698597890597458900347e-10, .200003363099911585513922939934e-11 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000100000283333316666667500e-11, g1,h1), ad2(.100000199999950000066666670833e-17, g2,h2), adresMaple(.999999999999999972368924622047, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 1.00000099999949999950000004167, .100000899999983333333333334167e-5, .200000000000266666666666668333e-5 };
  double g2  [3] = { .454030230586947305073427047412e-11, .308060461173827943480187454822e-11, .115852901519277016001416461171e-17 };
  double gres[3] = { -.601862875969160032091308349604e-10, -.425601199174492033441424798369e-10, -.109250691514414895104885994417e-16 };
  double h1  [9] = { -.100000099999983333316666667500e-5, .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, .18e-4, .9e-11, 1.99999999999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { .400000000000133333333333386668e-5, .508060461174027943480187588156e-5, .315852901519343682668083154505e-11, .508060461174027943480187588156e-5, .108060461174027943480187854822e-5, .31705803038620698669499669007e-12, .315852901519343682668083154505e-11, .31705803038620698669499669007e-12, -.540302305868139717400936607443e-18 };
  double hres[9] = { -.487217359260119123471076736800e-4, -.671105324216795644365924903382e-4, -.333975632521787173206914653827e-10, -.671105324216795644365924903382e-4, -.149290971805738820986459687247e-4, .178088089095599537904299484005e-11, -.333975632521787173206914653827e-10, .178088089095599537904299484005e-11, .701807372762892414537477557810e-17 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000100000283333316666667500e-5, g1,h1), ad2(.254030230586880638406760354078e-17, g2,h2), adresMaple(.999999999999999964904429213157, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 100.000000999949999999500004167, .100008999999983333333333334167e-5, .199999999999996666666666668333e-4 };
  double g2  [3] = { .391609284709368808810744747190e-10, .183218569418670950954822854376e-10, .254402111089003648007141459519e-17 };
  double gres[3] = { -.341524551637408833033754960054e-9, -.168750538306403017687591230388e-9, -.195991146634860351229829407451e-16 };
  double h1  [9] = { -.100000000999983333333166667500e-3, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, .180e-3, .9e-11, 19.9999999999900000000000008333, .9e-11, .199999999999966666666666668333e-5 };
  double h2  [9] = { .400000000000133333333333386668e-4, .383218569418870950954822987710e-4, .454402111089070314673808152853e-11, .383218569418870950954822987710e-4, -.167814305811290490451767456232e-5, .308804222178073962680949665703e-11, .454402111089070314673808152853e-11, .308804222178073962680949665703e-11, .839071529076452452258863947824e-18 };
  double hres[9] = { -.309252686008265558146245162087e-3, -.334635488404251882224815539959e-3, -.314757743165545316379345142697e-10, -.334635488404251882224815539959e-3, .154562691078118351690608122207e-4, -.247775485759052580571192302746e-10, -.314757743165545316379345142697e-10, -.247775485759052580571192302746e-10, -.709374449457996356529167927850e-17 };
  adreal<3,DO_HESS_TEST,double> ad1(.100000001000013333333166667500e-3, g1,h1), ad2(.191609284709302142144078053856e-16, g2,h2), adresMaple(.999999999999999823521327131255, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 1000000000000.49999999999954167, 9000000.00000099999999999983333, 4.99999999999966666666666668333 };
  double g2  [3] = { 7.16638302615275370896643176492, .872454189669580909576042293725e-5, .349996616986742261922113500731e-6 };
  double gres[3] = { 109.961621086249142592266197722, .141753541463186893519901907927e-3, .532091306924061581835942650403e-5 };
  double h1  [9] = { -1000000.00000083333333333317500, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, 18000000., 9., 1999999.99999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 6229630.89861960892202789922984, 15.5755795383253286176437808044, .349999731802191571726574514680, 15.5755795383253286176437808044, .232132221450169245390377555246e-4, .699993855380227533754826856920e-6, .349999731802191571726574514680, .699993855380227533754826856920e-6, -.936752127533144786938532535075e-6 };
  double hres[9] = { 98049731.0557111770526555228835, 252.834569583383341449823543744, 5.40905468022520014606998864077, 252.834569583383341449823543744, .389908412120536123167255358066e-3, .114301291873111348963238812500e-4, 5.40905468022520014606998864077, .114301291873111348963238812500e-4, -.142411710196260476040850288949e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(4000000.00000083333333333317500, g1,h1), ad2(.405156757684294924795248215000e-5, g2,h2), adresMaple(1.00006159303669285347533790709, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 1.00000000000049999999999954167, .999999999999983333333333334167e-5, 3.00000000000199999999999966667 };
  double g2  [3] = { 1.00000000000572963089861965059, .200000000000585103764162960285e-5, .211481544930997112768061627325e-11 };
  double gres[3] = { -12.1790648197441951364092838138, -.223581544976920730454461701038e-4, .749990678121803794413237783742 };
  double h1  [9] = { -.100000000000083333333333317500e-5, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, .18e-4, 9., .199999999999900000000000008333e-5, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { .622963089861960892202789922984e-5, 2.00000000001270207528325912237, .522963089861977558869456588817e-5, 2.00000000001270207528325912237, .200000000002033971788995071830e-5, .485103764162985285521669118377e-11, .522963089861977558869456588817e-5, .485103764162985285521669118377e-11, -.999999999999500000000000041667e-6 };
  double hres[9] = { 437642.893640355578872890771618, -22.2328837466140066907951763616, 562483.874250762890157957395599, -22.2328837466140066907951763616, -.166077260721170267840415894324e-4, 1.87495992669873074682331662249, 562483.874250762890157957395599, 1.87495992669873074682331662249, -562492.446102214721291512175335 };
  adreal<3,DO_HESS_TEST,double> ad1(.400000000000083333333333317500e-5, g1,h1), ad2(.100000000000261481544930984613e-5, g2,h2), adresMaple(.999987570861045510937982397406, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 1.99999999999900000000000008333, 9.00000099999999999983333333333, 3.00000199999999999966666666667 };
  double g2  [3] = { .540308535499038337009858635342, .108061146277392106432139509825e-5, -.841467869992447196848041307680e-6 };
  double gres[3] = { .593590669527781174836560955594, .280809078107316789534436522210e-5, -.384142310809521316684269995231e-6 };
  double h1  [9] = { -.199999999999966666666666668333e-5, .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, 18., 9., 1.99999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 6.22963089861960892202789922984, 1.08061831381156269384091698161, -.841464755176997887043580293731, 1.08061831381156269384091698161, .108062595145416938543683837558e-5, -.168293511857815138378548275990e-5, -.841464755176997887043580293731, -.168293511857815138378548275990e-5, -.540302305868139717400936607443e-6 };
  double hres[9] = { 7.91671803633747948263722062306, 2.80810913891776778299577814132, -.384136563015280880290083877419, 2.80810913891776778299577814132, .604995330105831741202648700411e-5, -.329268828231709277399867875823e-5, -.384136563015280880290083877419, -.329268828231709277399867875823e-5, -.281682543795299635385724152998e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(3.00000199999999999966666666667, g1,h1), ad2(.540305420683589027205397621393e-6, g2,h2), adresMaple(1.00000059358671117299939909701, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 100.999999999949500000000004208, 90.0000009999999999998333333333, 3.00001999999999999666666666667 };
  double g2  [3] = { -.839009232767466256169643668832, -.167807454777648860932250906207e-5, .544024225704819123209208675801e-6 };
  double gres[3] = { -2.85363351154518158396946597885, -.822455763327207864284567807402e-5, .176642624766170500392339536669e-5 };
  double h1  [9] = { -.100999999999983166666666667508e-3, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, 180., 9., 19.9999999999900000000000008333, 9., .199999999999966666666666668333e-5 };
  double h2  [9] = { 62.2963089861960892202789922984, -1.67800603740007231412729022849, .544027340520268433013669689750, -1.67800603740007231412729022849, -.167792966097400539816807628875e-5, .108804907281638125632901720706e-5, .544027340520268433013669689750, .108804907281638125632901720706e-5, .839071529076452452258863947824e-6 };
  double hres[9] = { 214.375611358554672231048673643, -8.22420490579364395599656463762, 1.76643647046958989198563709577, -8.22420490579364395599656463762, -.132581962272392178627284740320e-4, .516490407870210798265676972040e-5, 1.76643647046958989198563709577, .516490407870210798265676972040e-5, .297104096171196957909339292483e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(30.0001009999999999831666666667, g1,h1), ad2(-.839040380921959354214253808328e-6, g2,h2), adresMaple(.999997146259300460623880522620, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 1000000000009.49999999999504167, 900000000.000000999999999999833, 3001.99999999999966666666666668 };
  double g2  [3] = { 96.2686560631508253788897532395, .215757860758297588525611453364e-4, .349993515138509501299385911963e-4 };
  double gres[3] = { 2105.18508396899541464193324620, .500349350257779634975171340619e-3, .765347881848240227933149539640e-3 };
  double h1  [9] = { -1000000.00000983333333333167500, .999999999999500000000000041667, 1999999.99999900000000000008333, .999999999999500000000000041667, 180000000., 900., 1999999.99999900000000000008333, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { 2593443.30983634668503649973204, 24.4165296009966219663516399713, 34.9993528105726050481119337146, 24.4165296009966219663516399713, .555715790021874991452260024676e-5, .699987288416938420921616352611e-5, 34.9993528105726050481119337146, .699987288416938420921616352611e-5, -.936752127533144786938532535075e-4 };
  double hres[9] = { 61198991.2143963301845718431650, 563.907800859801751372102063267, 766.967461491288356669914048202, 563.907800859801751372102063267, .131887638748978252594762009186e-3, .163969866702425262055191112824e-3, 766.967461491288356669914048202, .163969866702425262055191112824e-3, -.204785667461312213527450974181e-2 };
  adreal<3,DO_HESS_TEST,double> ad1(3001000000.00000983333333333168, g1,h1), ad2(.949719344082326520363715033735e-4, g2,h2), adresMaple(1.00207464673767704673612773159, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 9.99999999999599999999999991667, .900999999999999833333333333342e-3, 3000.00000000000199999999999967 };
  double g2  [3] = { 99.9999999999525934433098405134, .199999999999928407435251676964e-4, -.987032783450651599908150843007e-10 };
  double gres[3] = { -579.912509865887919391009002537, -.861327275978118638971612305085e-4, 99.6099256136289799483453343170 };
  double h1  [9] = { -.999999999999933333333333325000e-5, .999999999999500000000000041667, .199999999999900000000000008333e-5, .999999999999500000000000041667, .180e-3, 900., .199999999999900000000000008333e-5, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { .259344330983634668503649973204e-5, 19.9999999999956814870503345595, -.974065566901469866482968344347e-4, 19.9999999999956814870503345595, .200000000000268365364515254367e-5, -.171592564748298035528761721984e-10, -.974065566901469866482968344347e-4, -.171592564748298035528761721984e-10, -.999999999999500000000000041667e-4 };
  double hres[9] = { 999456.895280872057451248390922, -86.0825285234494228660460096633, 99221197.0391736999346052150669, -86.0825285234494228660460096633, -.260937620663207685717977657099e-5, 19.9795864625332193481161182714, 99221197.0391736999346052150669, 19.9795864625332193481161182714, -99269067.7276843648136757407073 };
  adreal<3,DO_HESS_TEST,double> ad1(.300999999999999933333333333325e-2, g1,h1), ad2(.999999999999512967216549223400e-4, g2,h2), adresMaple(.999419586984817000073908910156, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 10.9999999999945000000000004583, 900.000000999999999999833333333, 3000.00000199999999999966666667 };
  double g2  [3] = { 54.0302331802572815764403457808, .108060489581063195148818459394e-4, -.841470971840679957470768896448e-4 };
  double gres[3] = { 432.773078046432797034572927434, .102770717024248441412788588046e-3, -.619950482231147203121891911833e-3 };
  double h1  [9] = { -.109999999999981666666666667583e-4, .999999999999500000000000041667, 1.99999999999900000000000008333, .999999999999500000000000041667, 180., 900., 1.99999999999900000000000008333, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { 2.59344330983634668503649973204, 10.8060517988498446817449597299, -84.1470958873463408289035471265, 10.8060517988498446817449597299, .108060829538992458726221386043e-5, -.168294168554144049661869326421e-4, -84.1470958873463408289035471265, -.168294168554144049661869326421e-4, -.540302305868139717400936607443e-4 };
  double hres[9] = { 187232.703931030282793269467209, 102.815197329346500376755889415, -620.218652859828911167795200885, 102.815197329346500376755889415, .135308743142592027214704436372e-4, -.149308810064043430072688855511e-3, -620.218652859828911167795200885, -.149308810064043430072688855511e-3, -.654809505300562242016682161729e-3 };
  adreal<3,DO_HESS_TEST,double> ad1(3000.00001099999999999816666667, g1,h1), ad2(.540302318835356266582670032625e-4, g2,h2), adresMaple(1.00043267947519509742251894837, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 109.999999999945000000000004583, 9000.00000099999999999983333333, 3000.00001999999999999666666667 };
  double g2  [3] = { -83.9071269732121468624195444174, -.167814021740937973765461410516e-4, .544021123856586362586481087033e-4 };
  double gres[3] = { -864.246708206688590002555346954, -.197999479944129424282523538833e-3, .551960437978587006796346918399e-3 };
  double h1  [9] = { -.109999999999981666666666667583e-3, .999999999999500000000000041667, 19.9999999999900000000000008333, .999999999999500000000000041667, 1800., 900., 19.9999999999900000000000008333, 900., .199999999999966666666666668333e-5 };
  double h2  [9] = { 25.9344330983634668503649973204, -16.7813737666585457079150031466, 54.4021136823802911768214512216, -16.7813737666585457079150031466, -.167810622161645337991432144030e-5, .108804250585309214349580670275e-4, 54.4021136823802911768214512216, .108804250585309214349580670275e-4, .839071529076452452258863947824e-4 };
  double hres[9] = { 747835.246969212108873362151239, -197.827914950634572268733080167, 551.483010006097005526749135235, -197.827914950634572268733080167, -.247904201752360760506026534141e-4, .126589256816635757552620808955e-3, 551.483010006097005526749135235, .126589256816635757552620808955e-3, .876261259984850591479932203950e-3 };
  adreal<3,DO_HESS_TEST,double> ad1(30000.0001099999999999816666667, g1,h1), ad2(-.839071399404286960441529695999e-4, g2,h2), adresMaple(.999135379266257381727925660607, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 540356.336098726531372676701104, 90000000000000.8414709848078965, 3000000000000000016.82941969616 };
  double g2  [3] = { -839071529091.397430418367908991, -1678120.26624825255388764605746, 544021110888.622564496772463793 };
  double gres[3] = { 0., 0., -0. };
  double h1  [9] = { -841555.131906377296303167571862, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 180000000., 9000000000000., 10.8060461173627943480187321489, 9000000000000., 1.68294196961579301330500464326 };
  double h2  [9] = { -14.9449781595039611669398835430, -1678097.47434360020325756421926, 544021110887.875315588797265734, -1678097.47434360020325756421926, -18.7093689202967493769347955994, 1088044.50096920486187250350752, 544021110887.875315588797265734, 1088044.50096920486187250350752, 839071529076.452452258863947824 };
  double hres[9] = { 0., 0., 0., 0., 0., 0., 0., 0., -0. };
  adreal<3,DO_HESS_TEST,double> ad1(30000000000000841555.1319063773, g1,h1), ad2(-839071529083.924941338615928407, g2,h2), adresMaple(-0., gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 540302305867.599415095068467726, 9000000.84147098480789650665250, 1682938.96961579301330500464326 };
  double g2  [3] = { -6229629.96186748138888311229131, 6851035.76812526445559378399003, -2.76482194713851150889629712814 };
  double gres[3] = { -.116937962076824634053532134628e-37144271, .127116245159523074115155958272e-37144271, -.555088924731407292453887918821e-37144278 };
  double h1  [9] = { -841470984807.055035667694425123, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, -18000000., 9., 1080604.61173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -6229630.89861960892202789922984, 13702073.4097547839774771418571, -5.87963739644831596991024674306, 13702073.4097547839774771418571, -21339716.0164463798988711165774, 6.15105063728693361764805289354, -5.87963739644831596991024674306, 6.15105063728693361764805289354, -.936752127533144786938532535075 };
  double hres[9] = { .202367882346533124947712257079e-37144263, -.219981986492353882701035414095e-37144263, .960613366983766786167152255654e-37144270, -.219981986492353882701035414095e-37144263, .239129222819967749309385272356e-37144263, -.104422517853481643593327873602e-37144269, .960613366983766786167152255654e-37144270, -.104422517853481643593327873602e-37144269, .454252291752444514306733281363e-37144276 };
  adreal<3,DO_HESS_TEST,double> ad1(841467984807.055035667694425123, g1,h1), ad2(-3114814.51255767692786916267639, g2,h2), adresMaple(.675724168102720690407497120635e-37144280, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 0., -8.15852901519210349334749767837, -4.68294196961579301330500464326 };
  double g2  [3] = { 6.76993320448774863942883583728, -7.93164225336579895668523108199, -2.27334446450190795436144729329 };
  double gres[3] = { 412.442305468619306570307162909, -1034.43846101009569795688830669, -454.895841360581371679394757850 };
  double h1  [9] = { 0., .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., -1.08060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, -14.7826798949953184785685889491, -5.38815991381171241537539690821, -14.7826798949953184785685889491, 22.4203225016869143999625636694, 5.16809567201372650857835322384, -5.38815991381171241537539690821, 5.16809567201372650857835322384, -.540302305868139717400936607443 };
  double hres[9] = { 3447.07842195571139592212341725, -9578.72564686727776529722697335, -4370.59830047524340940459162439, -9578.72564686727776529722697335, 22771.6560499538118581906268714, 9577.50165747747686764187331229, -4370.59830047524340940459162439, 9577.50165747747686764187331229, 3712.02601282336481212098668463 };
  adreal<3,DO_HESS_TEST,double> ad1(3., g1,h1), ad2(3.65511775517794417841488622236, g2,h2), adresMaple(55.4541904355985960096955676724, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 53.4899282809458320226927241369, 90.8414709848078965066525023216, 13.8294196961579301330500464326 };
  double g2  [3] = { -63.1353805152725416725378562462, 70.1885194744481001233513065666, -2.57079433842043464760920195307 };
  double gres[3] = { -.164930404541588706708648943516e-52, .130814014047101403943022922369e-52, -.107886316981995801776171086167e-53 };
  double h1  [9] = { -83.3056274959817541585977298414, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, -180., 9., 10.8060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { -62.2963089861960892202789922984, 138.698895890743295342184885238, -5.68560978773023910862315156799, 138.698895890743295342184885238, -215.075321957659254556124632441, 5.76299541985077989507386254340, -5.68560978773023910862315156799, 5.76299541985077989507386254340, .839071529076452452258863947824 };
  double hres[9] = { .465259905603855143763421047418e-50, -.367056670107676604031468218472e-50, .303141042582728380374521770756e-51, -.367056670107676604031468218472e-50, .291339737778293658818368292718e-50, -.239621064352810959332367743326e-51, .303141042582728380374521770756e-51, -.239621064352810959332367743326e-51, .201640280413960755086830470539e-52 };
  adreal<3,DO_HESS_TEST,double> ad1(53.3056274959817541585977298414, g1,h1), ad2(-31.9872260221744970623983600970, g2,h2), adresMaple(.582532068089759554123875009019e-55, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 540302305868.139717941238913311, .841479984807896506652502321630, 1682941.96961579301330500764326 };
  double g2  [3] = { 4.00000000000227008546086701147, 2000000.00000387350425506762290, .200000034999416883795961905099e-5 };
  double gres[3] = { 78679599219603292385510417.5869, .388851508964216666196135552167e32, 41717451374355643588.9639243667 };
  double h1  [9] = { -841470984807.896507493973306438, .540302305868139717400936607443, 1080604.61173627943480187321489, .540302305868139717400936607443, 18.000000, .9e-11, 1080604.61173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { 4.00000000000133333333333386668, 4000000.00000587350425506895624, .400000034999483550462628598433e-5, 4000000.00000587350425506895624, 5.87350425507162290721040293683, 2.00000069998900434258590556863, .400000034999483550462628598433e-5, 2.00000069998900434258590556863, -.936752127533144786938532535075e-12 };
  double hres[9] = { 8822115766269837502344380938.06, .439951414692684209881450590863e34, 4719897894240837917428.63563805, .439951414692684209881450590863e34, .213544940559651738703359234839e40, 2332707841054658476432095759.72, 4719897894240837917428.63563805, 2332707841054658476432095759.72, 2442480010033958.40352064531504 };
  adreal<3,DO_HESS_TEST,double> ad1(841470984807.896507493976306438, g1,h1), ad2(2.00000000000160341879420007813, g2,h2), adresMaple(708073418304745785795503.613414, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { .540302846170445585540654008380, .841470984798896506652502321630, -1.68294196961579301030500464326 };
  double g2  [3] = { -.399999945969902746519361646574e-5, -1.99999891939738826372056653146, .200000084147165147456317358584e-5 };
  double gres[3] = { -.593774198098057205269757296740e-6, .345203425192810930892420552209, .365479054327551190378318157744e-5 };
  double h1  [9] = { -.841471826278881314549008974132, .540302305868139717400936607443, -1.08060461173627943480187321489, .540302305868139717400936607443, -.18e-4, .9e-11, -1.08060461173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { -.400000000000133333333333386668e-5, -3.99999891939938826372056786480, .400000084147231814122984051918e-5, -3.99999891939938826372056786480, 1.08060061173627942946853988155, 2.00000168294396961579301463833, .400000084147231814122984051918e-5, 2.00000168294396961579301463833, -.540302305868139717400936607443e-12 };
  double hres[9] = { -.162176436400767923070767860153e-5, -.593778149401563037884639830179, .859376635775494016589038440774e-5, -.593778149401563037884639830179, -4.06734255350276944662784489397, 3.65478857908680127464676346302, .859376635775494016589038440774e-5, 3.65478857908680127464676346302, -.399999637654902972205404584426e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(.841471826278881311549008974132, g1,h1), ad2(-.199999945969836079852694953240e-5, g2,h2), adresMaple(1.00000034520545886502732612047, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { .540302846170445585540654008380e-6, .841470984807896515652502321630, .168294196961879301330500464326e-5 };
  double g2  [3] = { .500000000000083333333333390835e-11, .400000000000100000000000141666e-5, .199999999999966666666666710001e-5 };
  double gres[3] = { -.680142886705237118083628637548e-10, -.529524562147241696714506470123e-4, -.279762206072950652049201447202e-4 };
  double h1  [9] = { -.841471826278881314549008974132e-6, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .18e-10, .9e-11, .108060461173627943480187321489e-5, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-11, .600000000000300000000000275000e-5, .400000000000033333333333403335e-5, .600000000000300000000000275000e-5, 2.00000000000300000000000541666, 2.00000000000000000000000166666, .400000000000033333333333403335e-5, 2.00000000000000000000000166666, -.999999999999500000000000041667e-12 };
  double hres[9] = { -.537683758330398500120946058401e-10, -.763603143548954269367473474518e-4, -.546682579808847783212907217451e-4, -.763603143548954269367473474518e-4, -22.9762286047407175967485805007, -25.9762266058905800510190405450, -.546682579808847783212907217451e-4, -25.9762266058905800510190405450, .140007706564965654420739560987e-4 };
  adreal<3,DO_HESS_TEST,double> ad1(.841471826278881317549008974132e-6, g1,h1), ad2(.300000000000016666666666697501e-11, g2,h2), adresMaple(.999999999958035660088176574224, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { .540302846170445585540654008380, .841470984816896506652502321630, 1.68294196961579301630500464326 };
  double g2  [3] = { .400000054030363920147305126762e-5, 2.00000108060661173627943613520, .199999915852968185877016028084e-5 };
  double gres[3] = { .593774295482712906903376451551e-6, -.345203559890094166689870318538, .365479047165546542189401463128e-5 };
  double h1  [9] = { -.841471826278881314549008974132, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, .18e-4, .9e-11, 1.08060461173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-5, 4.00000108060861173627943746854, .399999915853034852543682721418e-5, 4.00000108060861173627943746854, 1.08060861173627944013520654823, 1.99999831706003038420698802833, .399999915853034852543682721418e-5, 1.99999831706003038420698802833, -.540302305868139717400936607443e-12 };
  double hres[9] = { .162176381103668973629885635723e-5, .593778344171568536325290111167, .859376613584813796906153124335e-5, .593778344171568536325290111167, 3.93264436973880899145160366874, 3.65478843585886412776007361172, .859376613584813796906153124335e-5, 3.65478843585886412776007361172, .400001162344107175472760482109e-5 };
  adreal<3,DO_HESS_TEST,double> ad1(.841471826278881317549008974132, g1,h1), ad2(.200000054030297253480638433428e-5, g2,h2), adresMaple(.999999654794473786481150170971, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 54.0302311271162776082333781452, .841470984897896506652502321630, 16.8294196961579301360500464326 };
  double g2  [3] = { .399999991609418042568808864079e-4, 19.9999983218769418470951088156, .200000054402177755603648033809e-5 };
  double gres[3] = { .190161363359163501267717533521e-3, 88.6591811615172908698721118254, .128662756648698483906594314373e-4 };
  double h1  [9] = { -84.1470993222606354731467388155, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, .180e-3, .9e-11, 10.8060461173627943480187321489, .9e-11, 1.68294196961579301330500464326 };
  double h2  [9] = { .400000000000133333333333386668e-4, 39.9999983218969418470951221490, .400000054402244422270314727143e-5, 39.9999983218969418470951221490, -1.67810305815290485118439456227, 2.00000108804422177873962814283, .400000054402244422270314727143e-5, 2.00000108804422177873962814283, .839071529076452452258863947824e-12 };
  double hres[9] = { .200478335637870507727676422932e-3, 190.178217557154999798831865447, .270192949685574557205256010434e-4, 190.178217557154999798831865447, 7852.71466843530631213962490458, 12.8674185010147545896015009520, .270192949685574557205256010434e-4, 12.8674185010147545896015009520, .400204946457848382137340767669e-6 };
  adreal<3,DO_HESS_TEST,double> ad1(84.1470993222606355031467388155, g1,h1), ad2(.199999991609351375902142170745e-4, g2,h2), adresMaple(1.00008865525492002764011647804, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { .540302305868680019706804747160, .841479984807896506652502321630, 3.00000168294196961579301330500 };
  double g2  [3] = { 1.00000622963039861960892206957, 2.00000685103664162951952196669, 3.11481444930980446118061628159 };
  double gres[3] = { .395064309474445331211814634885, .551004190278418865838870989858, 2.54761848573483155956471608496 };
  double h1  [9] = { -.841470984808737977637310218137, .540302305868139717400936607443, .108060461173627943480187321489e-5, .540302305868139717400936607443, .18e-4, 9., .108060461173627943480187321489e-5, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { .622963089861960892202789922984e-5, 2.00001370207428325903904385005, 6.22962989861960892219456589651, 2.00001370207428325903904385005, 2.00002133971688995063496524402, 6.85103564162951952221669120043, 6.22962989861960892219456589651, 6.85103564162951952221669120043, -.999999999999500000000000041667 };
  double hres[9] = { .77692091652787310925786767254e-1, 1.89030124326599983346459038924, 3.04798546593539245765191698453, 1.89030124326599983346459038924, 2.59478177650211067680839719930, 15.2942344078756166978298857326, 3.04798546593539245765191698453, 15.2942344078756166978298857326, 17.5346031845932159894689997144 };
  adreal<3,DO_HESS_TEST,double> ad1(.841473984808737977637310218137, g1,h1), ad2(1.00000311481494930980446105562, g2,h2), adresMaple(.841473532417614952825619588489, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 1.08060461173627943480187321489, 9.84147098480789650665250232163, 4.68294196961579301330500464326 };
  double g2  [3] = { 6.76993320448774863942883583728, 7.93164225336579895668523108199, 2.27334446450190795436144729329 };
  double gres[3] = { 3189.61766193078586033463021418, 5626.95982020808709161819345852, 2023.20994645196900893976177191 };
  double h1  [9] = { -1.68294196961579301330500464326, .540302305868139717400936607443, 1.08060461173627943480187321489, .540302305868139717400936607443, 18., 9., 1.08060461173627943480187321489, 9., 1.68294196961579301330500464326 };
  double h2  [9] = { 6.22963089861960892202789922984, 14.7826798949953184785685889491, 5.38815991381171241537539690821, 14.7826798949953184785685889491, 22.4203225016869143999625636694, 5.16809567201372650857835322384, 5.38815991381171241537539690821, 5.16809567201372650857835322384, -.540302305868139717400936607443 };
  double hres[9] = { 39201.2660693969734521912382336, 74158.0767113078202222286138947, 27262.4261644268892881427052411, 74158.0767113078202222286138947, 130727.145529231645677826352782, 45973.5399660304459801259620969, 27262.4261644268892881427052411, 45973.5399660304459801259620969, 14883.4092152479017148450746369 };
  adreal<3,DO_HESS_TEST,double> ad1(4.68294196961579301330500464326, g1,h1), ad2(3.65511775517794417841488622236, g2,h2), adresMaple(282.374245623956528428168683615, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { 59.4332536454953689141030268187, 9000.84147098480789650665250232, 3016.82941969615793013305004643 };
  double g2  [3] = { -57.9727198092817783755213974620, 11.6260046701395820927276673926, 55.6988327438551546829930160511 };
  double gres[3] = { -.118867156532385896997146115565e-314, .196143499928921025003125464563e-315, .112764267228282742143185802873e-314 };
  double h1  [9] = { -92.5618083288686157317752553793, .540302305868139717400936607443, 10.8060461173627943480187321489, .540302305868139717400936607443, 1800., 900., 10.8060461173627943480187321489, 900., 1.68294196961579301330500464326 };
  double h2  [9] = { 25.9344330983634668503649973204, 40.0334399218082132306326137416, 56.9955543987733280255112659171, 40.0334399218082132306326137416, 35.1583933933716985019376238704, 13.7211657429542593818854478719, 56.9955543987733280255112659171, 13.7211657429542593818854478719, 83.9071529076452452258863947824 };
  double hres[9] = { .711305769736128642371228887797e-312, -.116499015700127577224611594616e-312, -.673124514509047279639114824547e-312, -.116499015700127577224611594616e-312, .200920554127518415802187587114e-313, .111580368475070031492611834557e-312, -.673124514509047279639114824547e-312, .111580368475070031492611834557e-312, .641406128030096917356584798322e-312 };
  adreal<3,DO_HESS_TEST,double> ad1(30092.5618083288686157317752554, g1,h1), ad2(-70.9399363584635118007038961222, g2,h2), adresMaple(.198788894909266536334441196793e-317, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { -839155.436229360097504089834219, 89999999999999.4559788891106302, 2999999999999999989.11957778221 };
  double g2  [3] = { -839071529225.902233853903559493, -16779151.3910638139821690951372, 5440211108818.97324324995681268 };
  double gres[3] = { 0., 0., -0. };
  double h1  [9] = { 544075.513000458750386088136617, -.839071529076452452258863947824, -16.7814305815290490451772789565, -.839071529076452452258863947824, 180000000., 9000000000000., -16.7814305815290490451772789565, 9000000000000., -1.08804222177873962680949532370 };
  double h2  [9] = { -14.9449781595039611669398835430, -1677687.22005985789191609113180, 544021110874.424835245243700684, -1677687.22005985789191609113180, -1719.90401679591349628688404933, 10880650.1368339197743957716189, 544021110874.424835245243700684, 10880650.1368339197743957716189, 8390715290764.52452258863947824 };
  double hres[9] = { 0., 0., 0., 0., 0., 0., 0., 0., -0. };
  adreal<3,DO_HESS_TEST,double> ad1(29999999999999455924.4869995412, g1,h1), ad2(-8390715291511.77343056383753659, g2,h2), adresMaple(-0., gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
{ cout << "testing " << "pow(ad1,ad2)" << endl;
  double g1  [3] = { .839071529075613380729787495372, -.544012110889369813404747661851, -3.00000108804222177873962680950 };
  double g2  [3] = { .999937703690513803910779762675, -19.9993148962258370480478124975, -311.481554930980446099728294825 };
  double gres[3] = { .336433644531659422526489827109e-1, .494045486427551444231775028590e-2, .305398589312919389788547220315 };
  double h1  [9] = { -.544021110888825792293858292038, -.839071529076452452258863947824, -.167814305815290490451772789565e-5, -.839071529076452452258863947824, -.18e-4, 9., -.167814305815290490451772789565e-5, 9., -1.08804222177873962680949532370 };
  double h2  [9] = { -.622963089861960892202789922984e-5, -1.99986297924616740960956241617, -62.2963099861960892201123256317, -1.99986297924616740960956241617, 19.9978660282010049365034847643, 685.103784162951952185002453377, -62.2963099861960892201123256317, 685.103784162951952185002453377, -9.99999999999500000000000041667 };
  double hres[9] = { .428678816482336079782635949521, .36320351634535295209144731061e-2, 3.70002157740627976501218392252, .36320351634535295209144731061e-2, .512264831460080616323435630411e-1, .925500935296834954064796097998, 3.70002157740627976501218392252, .925500935296834954064796097998, 48.1488442801552057278015238696 };
  adreal<3,DO_HESS_TEST,double> ad1(.544018110888825792293858292038, g1,h1), ad2(9.99968851845006901955389902171, g2,h2), adresMaple(.227099371225093652027291061963e-2, gres,hres);
  adreal<3,DO_HESS_TEST,double> adresC(pow(ad1,ad2));
  compareAD(adresMaple, adresC);
}
}