global string $gWmSweeneyMainMenu;  
global string $gWmSwAddRodContextName = "";
    
global proc wmSweeneyAddMainMenu() 
{
    // check in case somehow the menu add function is called and the plugin aint loaded
	if(!`pluginInfo -q -loaded wmFigaro`) 
    {
		print "\nloading wmFigaro plugin...";
		loadPlugin wmFigaro;
	}
    
    // Add context tools first
    global string $gWmSwAddRodContextName = "";
    if ( !`eval( "wmSwAddRodContext -query -exists \"" + $gWmSwAddRodContextName + "\"" ) `) 
    {        
		$gWmSwAddRodContextName = `eval wmSwAddRodContext`;
	}
    
	global string $gMainWindow;
	global string $gWmSweeneyMainMenu;
    
    if( !`menu -exists $gWmSweeneyMainMenu` )
    {
        $gWmSweeneyMainMenu = `menu -p $gMainWindow -l "Sweeney" -tearOff true -allowOptionBoxes true WmSweeneyMainMenu`;

        menuItem -label "Create rods from BarberShop node" -annotation "Create elastic rods from a BarberShop furset" -command "wmSweeney -cs";
        menuItem -label "Add selected meshes as collision objects" -annotation "Add meshes as collision objects to the selected wmSweeney node"-command "wmSweeney -acm";        
        menuItem -label "Add Guide Rod Tool" -annotation "Add a manipulatable guide rod"-command "setToolTo $gWmSwAddRodContextName";    
       	menuItem -label "Create new Sweeney subset node for select faces" -annotation "Applies slider settings only to rods mapped to selected mesh faces"-command "wmSweeney -css";    
       	menuItem -label "Simulate All Rods" -annotation "Applies slider settings globally"-command "wmSweeney -ssa";   
       	menuItem -label "Create clumps from wmPelt node" -annotation "Uses the rods closest to the wmPelt node's points as centres for clumps" -command "wmSweeney -ccp";
       	menuItem -label "Create Gaussian volumetric force" -annotation "Repulsive force based on selected ellipsoid" -command "wmSweeney -cgv";
    }
}

global proc wmSweeneyRemoveMainMenu() 
{
   global string $gWmSweeneyMainMenu;
    if( `menu -exists $gWmSweeneyMainMenu` )
        deleteUI -menu $gWmSweeneyMainMenu;
}
